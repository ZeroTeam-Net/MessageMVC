<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ZeroTeam.MessageMVC.Abstractions</name>
    </assembly>
    <members>
        <member name="T:ZeroTeam.MessageMVC.AddIn.IAutoRegister">
            <summary>
            生自注册对象
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.AddIn.IAutoRegister.AutoRegist(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            执行自动注册(配置载入前)
            </summary>
            <returns>返回false表示后续无操作</returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.AddIn.IAutoRegister.LateConfigRegist(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            执行自动注册(配置载入后)
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper">
            <summary>API返回基类</summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.helper">
            <summary>
            ApiResult的抽象
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.Helper">
            <summary>
            ApiResult的抽象
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.SucceesJson">
            <summary>成功的Json字符串</summary>
            <remarks>成功</remarks>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.NoFindJson">
            <summary>页面不存在的Json字符串</summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.NotSupportJson">
            <summary>系统不支持的Json字符串</summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.ArgumentErrorJson">
            <summary>参数错误字符串</summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.BusinessErrorJson">
            <summary>逻辑错误字符串</summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.DenyAccessJson">
            <summary>拒绝访问的Json字符串</summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.NetworkErrorJson">
            <summary>服务器访问异常</summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.BusinessExceptionJson">
            <summary>本地访问异常的Json字符串</summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.NoReadyJson">
            <summary>系统未就绪的Json字符串</summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.PauseJson">
            <summary>暂停服务的Json字符串</summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.UnknowErrorJson">
            <summary>未知错误的Json字符串</summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.NetTimeOutJson">
            <summary>网络超时的Json字符串</summary>
            <remarks>调用其它Api时时抛出未处理异常</remarks>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.TokenTimeOutJson">
            <summary>令牌超时的Json字符串</summary>
            <remarks>令牌超时</remarks>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.ExecTimeOut">
            <summary>执行超时</summary>
            <remarks>Api执行超时</remarks>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.InnerErrorJson">
            <summary>内部错误的Json字符串</summary>
            <remarks>执行方法时抛出未处理异常</remarks>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.UnavailableJson">
            <summary>服务不可用的Json字符串</summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.Succees">
            <summary>
                生成一个成功的标准返回
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.State(System.Int32)">
            <summary>
                生成一个包含状态码的标准返回
            </summary>
            <param name="code">状态码</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.State(System.Int32,System.String)">
            <summary>
                生成一个包含状态码的标准返回
            </summary>
            <param name="code">状态码</param>
            <param name="message">提示消息</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.State(System.Int32,System.String,System.String)">
            <summary>
                生成一个包含状态码的标准返回
            </summary>
            <param name="code">状态码</param>
            <param name="message">提示消息</param>
            <param name="innerMessage">内部说明</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.State(System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
                生成一个包含状态码的标准返回
            </summary>
            <param name="code">状态码</param>
            <param name="message">提示消息</param>
            <param name="innerMessage">内部说明</param>
            <param name="guide">错误指导</param>
            <param name="describe">错误解释</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.State(System.Int32,System.String,System.String,System.String,System.String,System.String)">
            <summary>
                生成一个包含状态码的标准返回
            </summary>
            <param name="code">状态码</param>
            <param name="message">提示消息</param>
            <param name="innerMessage">内部说明</param>
            <param name="point">错误点</param>
            <param name="guide">错误指导</param>
            <param name="describe">错误解释</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.Succees``1(``0)">
            <summary>
                生成一个成功的标准返回
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.State``1(System.Int32)">
            <summary>
                生成一个包含状态码的标准返回
            </summary>
            <param name="code">状态码</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.State``1(System.Int32,System.String)">
            <summary>
                生成一个包含状态码的标准返回
            </summary>
            <param name="code">状态码</param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.State``1(System.Int32,System.String,System.String)">
            <summary>
                生成一个包含状态码的标准返回
            </summary>
            <param name="code">状态码</param>
            <param name="message">提示消息</param>
            <param name="innerMessage">内部说明</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.State``1(System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
                生成一个包含状态码的标准返回
            </summary>
            <param name="code">状态码</param>
            <param name="message">提示消息</param>
            <param name="innerMessage">内部说明</param>
            <param name="guide">错误指导</param>
            <param name="describe">错误解释</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.State``1(System.Int32,System.String,System.String,System.String,System.String,System.String)">
            <summary>
                生成一个包含状态码的标准返回
            </summary>
            <param name="code">状态码</param>
            <param name="message">提示消息</param>
            <param name="innerMessage">内部说明</param>
            <param name="point">错误点</param>
            <param name="guide">错误指导</param>
            <param name="describe">错误解释</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.FromContext``1">
            <summary>
                取出上下文中的返回
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.FromContext">
            <summary>
                取出上下文中的返回
            </summary>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.IApiAction">
            <summary>
                Api方法
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiAction.Info">
            <summary>
            接口信息
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiAction.Option">
            <summary>
                API配置
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiAction.RouteName">
            <summary>
                Api名称
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiAction.IsApiContract">
            <summary>
                是合符合API契约规定
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiAction.ArgumentType">
            <summary>
                参数类型
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiAction.ArgumentName">
            <summary>
                参数名称
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiAction.ArgumentSerializer">
            <summary>
                参数反序列化对象
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiAction.ArgumentSerializeType">
            <summary>
            反序列化类型
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.IApiAction.RestoreArgument(ZeroTeam.MessageMVC.Messages.IInlineMessage)">
            <summary>
                还原参数
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.IApiAction.ValidateArgument(ZeroTeam.MessageMVC.Messages.IInlineMessage,ZeroTeam.MessageMVC.ZeroApis.IOperatorStatus@)">
            <summary>
                参数校验
            </summary>
            <param name="message"></param>
            <param name="status"></param>
            <returns></returns>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiAction.ResultSerializeType">
            <summary>
            反序列化类型
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiAction.ResultSerializer">
            <summary>
                返回值序列化对象
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiAction.ResultCreater">
            <summary>
                返回值构造对象
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiAction.ResultType">
            <summary>
                参数类型
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.IApiAction.Execute(ZeroTeam.MessageMVC.Messages.IInlineMessage,ZeroTeam.MessageMVC.Messages.ISerializeProxy)">
            <summary>
                执行
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.IApiAction.Initialize">
            <summary>
            初始化检查
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.IApiActionChecker">
            <summary>
            方法执行检查器
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.IApiActionChecker.Check(ZeroTeam.MessageMVC.ZeroApis.IApiAction,ZeroTeam.MessageMVC.Messages.IInlineMessage)">
            <summary>
            检查接口是否可执行
            </summary>
            <param name="action"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.IApiArgument">
            <summary>
                表示API请求参数
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.IApiArgument.Validate(ZeroTeam.MessageMVC.ZeroApis.IOperatorStatus@)">
            <summary>
                数据校验
            </summary>
            <param name="status">返回的状态</param>
            <returns>成功则返回真</returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.IApiController">
            <summary>
            ZeroApi控制器基类
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.IApiResult">
            <summary>
                API返回基类
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiResult.Trace">
             <summary>
            跟踪对象
             </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.IApiResult`1">
            <summary>
                API返回基类
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiResult`1.ResultData">
            <summary>
                返回值
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper">
            <summary>
            ApiResult的虚拟化
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.Serialize``1(``0)">
            <summary>
            序列化
            </summary>
            <typeparam name="T"></typeparam>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.Deserialize(System.String)">
            <summary>
            反序列化
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.Deserialize``1(System.String)">
            <summary>
            反序列化
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.DeserializeInterface``1(System.String)">
            <summary>
            反序列化
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.Succees">
            <summary>生成一个成功的标准返回</summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.State(System.Int32)">
            <summary>生成一个包含状态码的标准返回</summary>
            <param name="code">状态码</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.State(System.Int32,System.String)">
            <summary>生成一个包含状态码的标准返回</summary>
            <param name="code">状态码</param>
            <param name="message">提示消息</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.State(System.Int32,System.String,System.String)">
            <summary>生成一个包含状态码的标准返回</summary>
            <param name="code">状态码</param>
            <param name="message">提示消息</param>
            <param name="innerMessage">内部说明</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.State(System.Int32,System.String,System.String,System.String,System.String)">
            <summary>生成一个包含状态码的标准返回</summary>
            <param name="code">状态码</param>
            <param name="message">提示消息</param>
            <param name="innerMessage">内部说明</param>
            <param name="guide">错误指导</param>
            <param name="describe">错误解释</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.State(System.Int32,System.String,System.String,System.String,System.String,System.String)">
            <summary>生成一个包含状态码的标准返回</summary>
            <param name="code">状态码</param>
            <param name="message">提示消息</param>
            <param name="innerMessage">内部说明</param>
            <param name="point">错误点</param>
            <param name="guide">错误指导</param>
            <param name="describe">错误解释</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.Succees``1(``0)">
            <summary>生成一个成功的标准返回</summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.State``1(System.Int32)">
            <summary>生成一个包含状态码的标准返回</summary>
            <param name="code">状态码</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.State``1(System.Int32,System.String)">
            <summary>生成一个包含状态码的标准返回</summary>
            <param name="code">状态码</param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.State``1(System.Int32,System.String,System.String)">
            <summary>生成一个包含状态码的标准返回</summary>
            <param name="code">状态码</param>
            <param name="message">提示消息</param>
            <param name="innerMessage">内部说明</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.State``1(System.Int32,System.String,System.String,System.String,System.String)">
            <summary>生成一个包含状态码的标准返回</summary>
            <param name="code">状态码</param>
            <param name="message">提示消息</param>
            <param name="innerMessage">内部说明</param>
            <param name="guide">错误指导</param>
            <param name="describe">错误解释</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.State``1(System.Int32,System.String,System.String,System.String,System.String,System.String)">
            <summary>生成一个包含状态码的标准返回</summary>
            <param name="code">状态码</param>
            <param name="message">提示消息</param>
            <param name="innerMessage">内部说明</param>
            <param name="point">错误点</param>
            <param name="guide">错误指导</param>
            <param name="describe">错误解释</param>
            <returns></returns>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.Ok">
            <summary>成功</summary>
            <remarks>成功</remarks>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.NoFind">
            <summary>页面不存在</summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.NonSupport">
            <summary>不支持的操作</summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.ArgumentError">
            <summary>参数错误</summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.DenyAccess">
            <summary>拒绝访问</summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.BusinessException">
            <summary>
            服务异常
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.UnhandleException">
            <summary>
            系统异常
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.NoReady">
            <summary>系统未就绪</summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.Pause">
            <summary>暂停服务</summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.BusinessError">
            <summary>业务错误</summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.NetworkError">
            <summary>网络异常</summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.TokenTimeOut">
            <summary>令牌超时</summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.NetTimeOut">
            <summary>网络超时</summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.ExecTimeOut">
            <summary>Api执行超时</summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.Unavailable">
            <summary>服务不可用</summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.Waiting">
            <summary>等待处理中</summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.IOperatorStatus">
            <summary>
                操作状态
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IOperatorStatus.RequestId">
            <summary>
            请求ID
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IOperatorStatus.Success">
            <summary>
                成功或失败标记
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IOperatorStatus.Code">
            <summary>
                状态码（系统定义）
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IOperatorStatus.Message">
            <summary>
             信息
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IOperatorStatus.Exception">
            <summary>
             异常
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.IOperatorTrace">
            <summary>
                API接口跟踪
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IOperatorTrace.RequestId">
            <summary>
                API请求标识
            </summary>
            <example>AxV6389FC</example>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IOperatorTrace.Point">
            <summary>
                错误点
            </summary>
            <remarks>
            系统在哪一个节点发生错误的标识
            </remarks>
            <example>http-gateway</example>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IOperatorTrace.Guide">
            <summary>
                指导码
            </summary>
            <remarks>
            内部使用:指示下一步应如何处理的代码
            </remarks>
            <example>retry</example>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IOperatorTrace.Describe">
            <summary>
                错误说明
            </summary>
            <remarks>
            内部使用:详细说明错误内容
            </remarks>
            <example>系统未就绪</example>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.OperatorStatusCode">
            <summary>
                操作状态码
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.OperatorStatusCode.Queue">
            <summary>
                正在排队
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.OperatorStatusCode.Success">
            <summary>
                成功
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.OperatorStatusCode.ArgumentError">
            <summary>
                参数错误
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.OperatorStatusCode.BusinessError">
            <summary>
                发生处理业务错误
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.OperatorStatusCode.BusinessException">
            <summary>
                发生未处理业务异常
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.OperatorStatusCode.UnhandleException">
            <summary>
                发生未处理系统异常
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.OperatorStatusCode.NetworkError">
            <summary>
                网络错误
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.OperatorStatusCode.TimeOut">
            <summary>
                执行超时
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.OperatorStatusCode.DenyAccess">
            <summary>
                拒绝访问
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.OperatorStatusCode.TokenUnknow">
            <summary>
                未知的令牌
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.OperatorStatusCode.TokenTimeOut">
            <summary>
                令牌过期
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.OperatorStatusCode.NoReady">
            <summary>
                系统未就绪
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.OperatorStatusCode.Ignore">
            <summary>
                异常中止
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.OperatorStatusCode.ReTry">
            <summary>
                重试
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.OperatorStatusCode.NoFind">
            <summary>
                方法不存在
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.OperatorStatusCode.Unavailable">
            <summary>
                服务不可用
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.OperatorStatusCode.Unknow">
            <summary>
                未知结果
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.OperatorStatusCode.GetMessage(System.Int32)">
            <summary>
                取得错误码对应的消息文本
            </summary>
            <param name="eid">错误码</param>
            <returns>消息文本</returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.IOperatorStatusCode">
            <summary>
                操作状态码
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IOperatorStatusCode.Map">
            <summary>
            文本表
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IOperatorStatusCode.Queue">
            <summary>
                正在排队
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IOperatorStatusCode.Success">
            <summary>
                成功
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IOperatorStatusCode.ArgumentError">
            <summary>
                参数错误
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IOperatorStatusCode.BusinessError">
            <summary>
                发生处理业务错误
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IOperatorStatusCode.BusinessException">
            <summary>
                发生未处理业务异常
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IOperatorStatusCode.UnhandleException">
            <summary>
                发生未处理系统异常
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IOperatorStatusCode.NetworkError">
            <summary>
                网络错误
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IOperatorStatusCode.TimeOut">
            <summary>
                执行超时
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IOperatorStatusCode.DenyAccess">
            <summary>
                拒绝访问
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IOperatorStatusCode.TokenUnknow">
            <summary>
                未知的令牌
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IOperatorStatusCode.TokenTimeOut">
            <summary>
                令牌过期
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IOperatorStatusCode.NoReady">
            <summary>
                系统未就绪
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IOperatorStatusCode.Ignore">
            <summary>
                异常中止
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IOperatorStatusCode.ReTry">
            <summary>
                重试
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IOperatorStatusCode.NoFind">
            <summary>
                方法不存在
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IOperatorStatusCode.Unavailable">
            <summary>
                服务不可用
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IOperatorStatusCode.Unknow">
            <summary>
                未知结果
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.DefaultOperatorStatusCode">
            <summary>
                操作状态码
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.DefaultOperatorStatusCode.Map">
            <summary>
            文本表
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.DefaultOperatorStatusCode.Queue">
            <summary>
                正在排队
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.DefaultOperatorStatusCode.Success">
            <summary>
                成功
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.DefaultOperatorStatusCode.ArgumentError">
            <summary>
                参数错误
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.DefaultOperatorStatusCode.BusinessError">
            <summary>
                发生处理业务错误
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.DefaultOperatorStatusCode.BusinessException">
            <summary>
                发生未处理业务异常
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.DefaultOperatorStatusCode.UnhandleException">
            <summary>
                发生未处理系统异常
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.DefaultOperatorStatusCode.NetworkError">
            <summary>
                网络错误
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.DefaultOperatorStatusCode.TimeOut">
            <summary>
                执行超时
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.DefaultOperatorStatusCode.DenyAccess">
            <summary>
                拒绝访问
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.DefaultOperatorStatusCode.TokenUnknow">
            <summary>
                未知的令牌
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.DefaultOperatorStatusCode.TokenTimeOut">
            <summary>
                令牌过期
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.DefaultOperatorStatusCode.NoReady">
            <summary>
                系统未就绪
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.DefaultOperatorStatusCode.Ignore">
            <summary>
                异常中止
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.DefaultOperatorStatusCode.ReTry">
            <summary>
                重试
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.DefaultOperatorStatusCode.NoFind">
            <summary>
                方法不存在
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.DefaultOperatorStatusCode.Unavailable">
            <summary>
                服务不可用
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.DefaultOperatorStatusCode.Unknow">
            <summary>
                未知结果
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.ApiOption">
            <summary>
                API访问配置
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.ApiOption.None">
            <summary>
                不可访问
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.ApiOption.Public">
            <summary>
                公开访问(网关入口)
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.ApiOption.Anymouse">
            <summary>
                匿名访问
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.ApiOption.Readonly">
            <summary>
                只读操作
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.ApiOption.ArgumentCanNil">
            <summary>
                参数可以为null
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.ApiOption.DictionaryArgument">
            <summary>
                参数仅为定义,内部进行通过字典读取
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.ApiOption.CustomContent">
            <summary>
                内容自定义解析
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.ApiOptionAttribute">
            <summary>
            API配置过滤器
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiOptionAttribute.#ctor(ZeroTeam.MessageMVC.ZeroApis.ApiOption)">
            <summary>
            构造
            </summary>
            <param name="option"></param>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiOptionAttribute.Option">
            <summary>
            配置
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.ApiPageAttribute">
            <summary>
            API对应页面的特性
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiPageAttribute.#ctor(System.String)">
            <summary>
            构造
            </summary>
            <param name="pageUrl">页面</param>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiPageAttribute.PageUrl">
            <summary>
            页面
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.ConsumerAttribute">
            <summary>
            表示一个消息队列消费者
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ConsumerAttribute.#ctor(System.String)">
            <summary>
            构造
            </summary>
            <param name="topic"></param>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ConsumerAttribute.ServiceName">
            <summary>
            消息节点
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.IReceiverGet">
            <summary>
            表示一个消息队列消费者
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.IReceiverGet.Receiver(System.String)">
            <summary>
            服务接收器
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IReceiverGet.ServiceName">
            <summary>
            服务名称
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.NetEventAttribute">
            <summary>
            表示一个分布式事件处理服务
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.NetEventAttribute.#ctor(System.String)">
            <summary>
            构造
            </summary>
            <param name="event"></param>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.NetEventAttribute.ServiceName">
            <summary>
            消息节点
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.ReceiverAttribute">
            <summary>
            表示一个消息队列消费者
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ReceiverAttribute.#ctor(System.String)">
            <summary>
            构造一个泛接收器
            </summary>
            <param name="topic">服务名称</param>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ReceiverAttribute.#ctor(System.String,System.String)">
            <summary>
            构造
            </summary>
            <param name="topic">服务名称</param>
            <param name="receiverName">接收器名称</param>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ReceiverAttribute.ReceiverName">
            <summary>
            消息节点
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ReceiverAttribute.ServiceName">
            <summary>
            消息节点
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.RouteAttribute">
            <summary>
            路由名称
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.RouteAttribute.#ctor(System.String[])">
            <summary>
            构造
            </summary>
            <param name="names"></param>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.RouteAttribute.Names">
            <summary>
            配置
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.RoutePrefixAttribute">
            <summary>
            路由名称
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.RoutePrefixAttribute.#ctor(System.String)">
            <summary>
            构造
            </summary>
            <param name="name"></param>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.RoutePrefixAttribute.Name">
            <summary>
            配置
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.ServiceAttribute">
            <summary>
            表明是一个服务控制器
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ServiceAttribute.#ctor(System.String)">
            <summary>
            构造
            </summary>
            <param name="name"></param>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ServiceAttribute.ServiceName">
            <summary>
            消息节点
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.XmlDocumentDiscover">
            <summary>
            XML文档解析
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.XmlDocumentDiscover.ReadEntity(System.Type,System.String)">
            <summary>
            读取类型说明
            </summary>
            <param name="type"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.IZeroOption">
            <summary>
                需要管理的配置
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.IZeroOption.SupperUrl">
            <summary>
            支持地址
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.IZeroOption.OptionName">
            <summary>
            配置名称
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.IZeroOption.SectionName">
            <summary>
            节点名称
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.IZeroOption.IsDynamic">
            <summary>
            是否动态配置
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.IZeroOption.Load(System.Boolean)">
            <summary>
            载入配置文件
            </summary>
            <param name="first">是否首次载入</param>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroOptionException">
            <summary>
                需要管理的配置
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroOptionException.#ctor(System.String,System.String,System.String)">
            <summary>
            构造
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroOptionException.#ctor(System.String,System.String)">
            <summary>
            构造
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.MiddlewareLevel">
            <summary>
            中间件优先级预定义常量
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.MiddlewareLevel.Basic">
            <summary>
            基础级别(1)
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.MiddlewareLevel.Framework">
            <summary>
            框架级别(2)
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.MiddlewareLevel.Front">
            <summary>
            高级别(3)
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.MiddlewareLevel.General">
            <summary>
            普通级别(4)
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.MiddlewareLevel.Back">
            <summary>
            低级别(5)
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.MiddlewareLevel.Last">
            <summary>
            收尾级别(6)
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.MiddlewareLevel.End">
            <summary>
            最后级别(7)
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.StationState">
            <summary>
            站点状态
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.StationState.None">
            <summary>
            无，刚构造
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.StationState.Check">
            <summary>
            配置错误
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.StationState.Failed">
            <summary>
            错误状态
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.StationState.Initialized">
            <summary>
            已初始化
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.StationState.Start">
            <summary>
            正在启动
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.StationState.BeginRun">
            <summary>
            开始运行
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.StationState.Run">
            <summary>
            正在运行
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.StationState.Pause">
            <summary>
            已暂停
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.StationState.Closing">
            <summary>
            将要关闭
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.StationState.Closed">
            <summary>
            已关闭
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.StationState.Destroy">
            <summary>
            已注销，析构已调用
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.StationState.Text(System.Int32)">
            <summary>
            返回状态文本
            </summary>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.StationStateType">
            <summary>
            站点状态
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.StationStateType.None">
            <summary>
            无，刚构造
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.StationStateType.ConfigError">
            <summary>
            配置错误
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.StationStateType.Failed">
            <summary>
            错误状态
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.StationStateType.Initialized">
            <summary>
            已初始化
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.StationStateType.Run">
            <summary>
            正在运行
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.StationStateType.Closed">
            <summary>
            已关闭
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.StationStateType.Stop">
            <summary>
            已被关停
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.StationStateType.Remove">
            <summary>
            已被移除
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.MessageTraceType">
            <summary>
            跟踪内容
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.MessageTraceType.None">
            <summary>
            无
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.MessageTraceType.Request">
            <summary>
            请求信息
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.MessageTraceType.Headers">
            <summary>
            头信息
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.MessageTraceType.Token">
            <summary>
            令牌
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.MessageTraceType.LinkTrace">
            <summary>
            链路
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.MessageTraceType.User">
            <summary>
            用户
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.MessageTraceType.Context">
            <summary>
            上下文
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.MessageTraceType.Simple">
            <summary>
            简单信息
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.MessageTraceType.All">
            <summary>
            应用信息
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.MessageTraceType.Isolate">
            <summary>
            独立，不使用全局配置
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.MessageTraceType.Undefined">
            <summary>
            未定义，使用全局配置
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroAppConfig">
            <summary>
                本地站点配置
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroAppConfig.AppName">
            <summary>
                当前应用名称
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroAppConfig.AppVersion">
            <summary>
                当前应用版本号
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroAppConfig.IsolateFolder">
            <summary>
            使用上级目录作为基础目录
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroAppConfig.ShortName">
            <summary>
                当前应用简称
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroAppConfig.IsOpenAccess">
            <summary>
                开放式访问(可动态修改)
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroAppConfig.MaxWorkThreads">
            <summary>
              线程池最大工作线程数
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroAppConfig.MaxIOThreads">
            <summary>
              线程池最大IO线程数
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroAppConfig.MaxCloseSecond">
            <summary>
              关闭最大等待时长
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroAppConfig.ApiServiceName">
            <summary>
                当前接口服务名称（未明显设置Service属性的Controler使用）
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroAppConfig.CopyByHase(ZeroTeam.MessageMVC.ZeroAppConfig)">
            <summary>
            如果目标配置存在,则复制之
            </summary>
            <param name="option"></param>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroAppConfig.CopyByEmpty(ZeroTeam.MessageMVC.ZeroAppConfig)">
            <summary>
            如果本配置内容为空则用目标配置补全
            </summary>
            <param name="option"></param>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroAppOption">
            <summary>
                本地站点配置
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroAppOption.IsDevelopment">
            <summary>
            是否开发模式
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroAppOption.HostName">
            <summary>
                机器器名称
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroAppOption.RootPath">
            <summary>
                应用所在的顶级目录
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroAppOption.BinPath">
            <summary>
                程序所在地址
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroAppOption.LocalIpAddress">
            <summary>
                本机IP地址
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroAppOption.IsLinux">
            <summary>
                是否在Linux黑环境下
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroAppOption.AutoDiscover">
            <summary>
            全部自动发现
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroAppOption.Discovery">
            <summary>
            自定义发现方法
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroAppOption.LocalApp">
            <summary>
            本地应用名称
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroAppOption.LocalMachine">
            <summary>
            本地机器名称
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroAppOption.DataFolder">
            <summary>
                本地数据文件夹
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroAppOption.ConfigFolder">
            <summary>
                本地配置文件夹
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroAppOption.AddInPath">
            <summary>
                插件地址,如为空则与运行目录相同
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroAppOption.UsMsJson">
            <summary>
                使用System.Text.Json序列化，而不是使用默认的Newtonsoft.Json
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroAppOption.RegistStartAction(System.String,System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})">
            <summary>
            注册后台方法
            </summary>
            <param name="name"></param>
            <param name="action"></param>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroAppOption.RegistStopAction(System.String,System.Func{System.Threading.Tasks.Task})">
            <summary>
            注册关机方法
            </summary>
            <param name="name"></param>
            <param name="action"></param>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroAppOption.RegistDestoryAction(System.Func{System.Threading.Tasks.Task})">
            <summary>
            注册析构方法
            </summary>
            <param name="action"></param>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroAppOption.ServiceMap">
            <summary>
                服务映射，即将对应服务名称替换成另一个服务
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroAppOption.TraceOption">
            <summary>
            跟踪信息内容配置
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroAppOption.DefaultTraceOption">
            <summary>
            默认跟踪信息内容配置
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroAppOption.GetTraceOption(System.String)">
            <summary>
            获取跟踪信息内容配置
            </summary>
            <param name="service"></param>
            <returns>正确的内容</returns>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroAppOption.Instance">
            <summary>
            实例
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroAppOption._requestSum">
            <summary>
                运行的API数量
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroAppOption.RequestSum">
            <summary>
                运行的API数量
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroAppOption.BeginRequest">
            <summary>
            设置应用状态
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroAppOption.EndRequest">
            <summary>
            设置应用状态
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroAppOption._appState">
            <summary>
                运行状态
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroAppOption.ApplicationState">
            <summary>
                状态
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroAppOption.SetApplicationState(System.Int32)">
            <summary>
            设置应用状态
            </summary>
            <param name="state"></param>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroAppOption.IsRuning">
            <summary>
                本地应用是否正在运行
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroAppOption.IsAlive">
            <summary>
                运行状态（本地未关闭）
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroAppOption.CanPost">
            <summary>
                可以运行状态（本地正在运行或未关闭）
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroAppOption.CanRun">
            <summary>
                可以运行状态（本地正在运行或未关闭）
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroAppOption.IsDestroy">
            <summary>
                已注销
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroAppOption.IsClosed">
            <summary>
                已关闭
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Context.ContextStatus">
            <summary>
            保存于上下文的状态
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.ContextStatus.IsKernelMode">
            <summary>
                是否工作在系统内核模式下
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.ContextStatus.Feature">
            <summary>
                其它特性
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.ContextStatus.LastStatus">
            <summary>
                最后状态(当前时间)
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.ContextStatus.LastState">
            <summary>
                最后操作的操作状态
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Context.ContextStatus.AppendMessage(System.String)">
            <summary>
                加入消息
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Context.ContextStatus.ResetStatus">
            <summary>
                重置状态
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.ContextStatus.LastMessage">
            <summary>
                最后一个的操作消息
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.ContextStatus.IsFailed">
            <summary>
                最后一个的操作消息
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Context.GlobalContext">
            <summary>
                全局上下文
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.GlobalContext.Current">
            <summary>
                当前线程的调用上下文
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.GlobalContext.User">
            <summary>
                当前用户
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.GlobalContext.Message">
            <summary>
                当前消息
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Context.GlobalContext.Get``1">
            <summary>
                当前线程的上下文中的对象
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Context.GlobalContext.Set``1(``0)">
            <summary>
                当前线程的上下文中的对象
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.GlobalContext.CurrentNoLazy">
            <summary>
                当前线程的调用上下文(无懒构造)
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Context.GlobalContext.Reset(ZeroTeam.MessageMVC.Messages.IInlineMessage)">
            <summary>
                设置当前上下文（框架内调用，外部误用后果未知）
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Context.GlobalContext.IsOptionEquals(System.String,System.String,System.StringComparison)">
            <summary>
            上下文配置指定名称是否配置为true
            </summary>
            <param name="name">配置名称</param>
            <param name="destValue">用于对比的目标值</param>
            <param name="comparison">文本比较方式(默认为忽略大小写)</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Context.GlobalContext.IsOptionTrue(System.String)">
            <summary>
            上下文配置指定名称是否配置为true
            </summary>
            <param name="name">配置名称</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Context.GlobalContext.GetOption(System.String)">
            <summary>
            取子网上下文配置指定名称的内容(不存在则为空)
            </summary>
            <param name="name">配置名称</param>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Context.IZeroContext">
            <summary>
                全局上下文
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.IZeroContext.TraceInfo">
            <summary>
                跟踪信息
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.IZeroContext.User">
            <summary>
                当前用户
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.IZeroContext.Status">
            <summary>
            全局状态
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.IZeroContext.Option">
            <summary>
            上下文配置
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.IZeroContext.Message">
            <summary>
            当前消息
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.IZeroContext.RequestTask">
            <summary>
            请求的任务，用于提前返回
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.IZeroContext.ActionTask">
            <summary>
            当前执行的任务，用于正确等待
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Context.IZeroContext.SetResult(ZeroTeam.MessageMVC.Messages.MessageState,System.Object)">
            <summary>
            提前设置返回值，这会导致方法不中断，而框架则提前返回到消息调用处
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Context.MessageTraceHelper">
            <summary>
            消息的跟踪辅助类
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Context.MessageTraceHelper.CreateTraceInfo(ZeroTeam.MessageMVC.Messages.IMessageItem)">
            <summary>
            构造
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Context.MessageTraceHelper.CheckRequestTraceInfo(ZeroTeam.MessageMVC.Messages.IMessageItem)">
            <summary>
            检查来自请求方的
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Context.MessageTraceHelper.CheckPostTraceInfo(ZeroTeam.MessageMVC.Messages.IMessageItem)">
            <summary>
            检查发送请求的跟踪信息
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Context.TraceInfo">
            <summary>
            跟踪信息
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.TraceInfo.Option">
            <summary>
            跟踪信息内容
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.TraceInfo.TraceId">
            <summary>
            全局请求标识（源头为用户请求）
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.TraceInfo.Level">
            <summary>
                调用层级
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.TraceInfo.Start">
            <summary>
                开始时间
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.TraceInfo.End">
            <summary>
                结束时间
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.TraceInfo.RequestApp">
            <summary>
            请求应用(传递)
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.TraceInfo.RequestPage">
            <summary>
            请求的页面(传递)
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.TraceInfo.Token">
            <summary>
            身份令牌
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.TraceInfo.Headers">
            <summary>
                请求头信息
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.TraceInfo.LocalId">
            <summary>
            本地的全局标识
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.TraceInfo.LocalApp">
            <summary>
            本地的应用
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.TraceInfo.LocalMachine">
            <summary>
            本地的机器
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.TraceInfo.CallId">
            <summary>
            请求的全局标识(传递)
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.TraceInfo.CallApp">
            <summary>
            前一次请求的应用
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.TraceInfo.CallMachine">
            <summary>
            前一次请求的机器
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Context.TraceLinkMessage">
            <summary>
            跟踪消息
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.TraceLinkMessage.Trace">
            <summary>
            跟踪
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.TraceLinkMessage.Message">
            <summary>
            消息
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.TraceLinkMessage.Monitor">
            <summary>
            本地跟踪
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Context.ZeroContext">
            <summary>
                全局上下文
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.ZeroContext.ZeroTeam#MessageMVC#Context#IScopeContext#ScopeData">
            <summary>
            范围数据
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.ZeroContext.ScopeData">
            <summary>
            析构范围
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.ZeroContext.ZeroTeam#MessageMVC#Context#IScopeContext#Scope">
            <summary>
            析构范围
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.ZeroContext.Scope">
            <summary>
            析构范围
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Context.ZeroContext.ZeroTeam#MessageMVC#Context#IScopeContext#Clone">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Context.ZeroContext.ZeroTeam#MessageMVC#Context#IDictionaryTransfer#ToDictionary">
            <summary>
            转为可传输的对象
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Context.ZeroContext.ZeroTeam#MessageMVC#Context#IDictionaryTransfer#Reset(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            转为可传输的对象
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Context.ZeroContext.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.ZeroContext.Option">
            <summary>
            上下文配置
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.ZeroContext.Message">
            <summary>
            当前消息
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.ZeroContext.TraceInfo">
            <summary>
                跟踪信息
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.ZeroContext.Status">
            <summary>
            全局状态
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.ZeroContext.RequestTask">
            <summary>
            当前任务，用于提前返回
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.ZeroContext.ActionTask">
            <summary>
            当前执行的任务，用于正确等待
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Context.ZeroContext.ZeroTeam#MessageMVC#Context#IZeroContext#SetResult(ZeroTeam.MessageMVC.Messages.MessageState,System.Object)">
            <summary>
            提前设置返回值，这会导致方法不中断，而框架则提前返回到消息调用处
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.ZeroContext.User">
            <summary>
                当前用户
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Context.ZeroTeamJwtClaim">
            <summary>
            JWT兼容定义
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Context.ZeroTeamJwtClaim.Actort">
            <summary>
            http://tools.ietf.org/html/rfc7519#section-5
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Context.ZeroTeamJwtClaim.Typ">
            <summary>
            http://tools.ietf.org/html/rfc7519#section-5
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Context.ZeroTeamJwtClaim.Sub">
            <summary>
            http://tools.ietf.org/html/rfc7519#section-4
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Context.ZeroTeamJwtClaim.Sid">
            <summary>
            http://openid.net/specs/openid-connect-frontchannel-1_0.html#OPLogout
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Context.ZeroTeamJwtClaim.Prn">
            <summary>
            http://openid.net/specs/openid-connect-frontchannel-1_0.html#OPLogout
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Context.ZeroTeamJwtClaim.Nbf">
            <summary>
            http://tools.ietf.org/html/rfc7519#section-4
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Context.ZeroTeamJwtClaim.Nonce">
            <summary>
             https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Context.ZeroTeamJwtClaim.NameId">
            <summary>
             https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Context.ZeroTeamJwtClaim.Jti">
            <summary>
            http://tools.ietf.org/html/rfc7519#section-4
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Context.ZeroTeamJwtClaim.Iss">
            <summary>
            http://tools.ietf.org/html/rfc7519#section-4
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Context.ZeroTeamJwtClaim.Iat">
            <summary>
            http://tools.ietf.org/html/rfc7519#section-4
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Context.ZeroTeamJwtClaim.GivenName">
            <summary>
            http://openid.net/specs/openid-connect-core-1_0.html#StandardClaims
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Context.ZeroTeamJwtClaim.FamilyName">
            <summary>
            http://openid.net/specs/openid-connect-core-1_0.html#StandardClaims
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Context.ZeroTeamJwtClaim.Gender">
            <summary>
            http://openid.net/specs/openid-connect-core-1_0.html#StandardClaims
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Context.ZeroTeamJwtClaim.Exp">
            <summary>
            http://tools.ietf.org/html/rfc7519#section-4
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Context.ZeroTeamJwtClaim.Email">
            <summary>
            https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Context.ZeroTeamJwtClaim.AtHash">
            <summary>
            http://openid.net/specs/openid-connect-core-1_0.html#CodeIDToken
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Context.ZeroTeamJwtClaim.CHash">
            <summary>
            https://openid.net/specs/openid-connect-core-1_0.html#HybridIDToken
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Context.ZeroTeamJwtClaim.Birthdate">
            <summary>
            https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Context.ZeroTeamJwtClaim.Azp">
            <summary>
            http://openid.net/specs/openid-connect-core-1_0.html#IDToken
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Context.ZeroTeamJwtClaim.AuthTime">
            <summary>
            http://openid.net/specs/openid-connect-core-1_0.html#IDToken
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Context.ZeroTeamJwtClaim.Aud">
            <summary>
            http://tools.ietf.org/html/rfc7519#section-4
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Context.ZeroTeamJwtClaim.Amr">
            <summary>
            http://openid.net/specs/openid-connect-core-1_0.html#IDToken
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Context.ZeroTeamJwtClaim.Acr">
            <summary>
            http://openid.net/specs/openid-connect-core-1_0.html#IDToken
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Context.ZeroTeamJwtClaim.UniqueName">
            <summary>
            http://openid.net/specs/openid-connect-core-1_0.html#IDToken
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Context.ZeroTeamJwtClaim.Website">
            <summary>
            http://openid.net/specs/openid-connect-core-1_0.html#IDToken
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Context.ZeroTeamJwtClaim.TokenType">
            <summary>
            设备类型
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Context.ZeroTeamJwtClaim.LoginState">
            <summary>
            登录类型
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Context.ZeroTeamJwtClaim.LoginType">
            <summary>
            登录类型
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Context.ZeroTeamJwtClaim.LoginToken">
            <summary>
            登录令牌
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Context.ZeroTeamJwtClaim.GlobalUserId">
            <summary>
            全局用户ID
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Context.ZeroTeamJwtClaim.AppUserId">
            <summary>
            当前应用用户ID
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Context.ZeroTeamJwtClaim.OpenId">
            <summary>
            OpenId
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Context.ZeroTeamJwtClaim.AvatarUrl">
            <summary>
            头像
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Context.ZeroTeamJwtClaim.Account">
            <summary>
            登录使用的账号
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Context.ZeroTeamJwtClaim.MobilePhone">
            <summary>
            手机号
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Context.ZeroTeamJwtClaim.DeviceId">
            <summary>
            设备标识
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Context.ZeroTeamJwtClaim.Organization">
            <summary>
            组织名称
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Context.ZeroTeamJwtClaim.OrganizationId">
            <summary>
            组织ID
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Context.ZeroTeamJwtClaim.OrganizationCode">
            <summary>
            组织查询代码
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Context.ZeroTeamJwtClaim.DataScope">
            <summary>
            设备类型
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Context.ZeroTeamJwtClaim.CurrentPermission">
            <summary>
            当前权限
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Context.ZeroTeamJwtClaim.Permissions">
            <summary>
            权限信息
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Context.ZeroTeamJwtClaim.TraceMark">
            <summary>
            追踪码
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Context.ZeroTeamJwtClaim.DeviceInfo">
            <summary>
            设备信息
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Context.ZeroTeamJwtClaim.SystemUserId">
            <summary>
            系统用户标识
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Context.ZeroTeamJwtClaim.SystemOrganizationId">
            <summary>
            系统组织标识
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Context.ZeroTeamJwtClaim.UnknownUserId">
            <summary>
            未知用户标识
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Context.ZeroTeamJwtClaim.UnknownOrganizationId">
            <summary>
            未知组织标识
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Documents.AnnotationsConfig">
            <summary>
                自注释配置对象
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.AnnotationsConfig.Name">
            <summary>
                名称
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.AnnotationsConfig.Caption">
            <summary>
                标题
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.AnnotationsConfig.Description">
            <summary>
                说明
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Documents.AnnotationsConfig.ToString">
            <summary>
                显示文本
            </summary>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Documents.ApiActionInfo">
            <summary>
                Api方法的信息
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Documents.ApiActionInfo.ResultType">
            <summary>是否有调用参数</summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Documents.ApiActionInfo.Action">
            <summary>有参方法</summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Documents.ApiDocument">
            <summary>
                Api方法的信息
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.ApiDocument.AccessOption">
            <summary>
                访问设置
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.ApiDocument.Category">
            <summary>
                分类
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Documents.ApiDocument.Routes">
            <summary>
                Api路由地址
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.ApiDocument.PageUrl">
            <summary>
                承载页面
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.ApiDocument.ControllerName">
            <summary>
                所在控制器名称
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.ApiDocument.ControllerCaption">
            <summary>
                所在控制器说明
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.ApiDocument.IsAsync">
            <summary>
                是否异步任务
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.ApiDocument.ResultInfo">
            <summary>
                返回值说明
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.ApiDocument.ResultSerializeType">
            <summary>
            序列化类型
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.ApiDocument.HaseArgument">
            <summary>
                是否有调用参数
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.ApiDocument.IsDictionaryArgument">
            <summary>
                是否字典参数
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.ApiDocument.Arguments">
            <summary>
                参数说明
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.ApiDocument.ArgumentSerializeType">
            <summary>
            反序列化类型
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Documents.ApiArgument">
            <summary>
                Api方法的信息
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.ApiArgument.ParameterInfo">
            <summary>
                参数类型
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Documents.DocumentItem">
            <summary>
                文档节点
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.DocumentItem.Seealso">
            <summary>
                参见
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.DocumentItem.Example">
            <summary>
                示例
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.DocumentItem.Value">
            <summary>
                值描述
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Documents.DocumentItem.Copy(ZeroTeam.MessageMVC.Documents.DocumentItem)">
            <summary>
                复制
            </summary>
            <param name="document"></param>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Documents.DocumentItem.Copy(ZeroTeam.MessageMVC.Documents.XmlMember)">
            <summary>
                复制
            </summary>
            <param name="document"></param>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Documents.ObjectType">
            <summary>
                对象类型
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Documents.ObjectType.Base">
            <summary>
                基本类型
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Documents.ObjectType.Array">
            <summary>
                数组
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Documents.ObjectType.Object">
            <summary>
                对象
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Documents.ServiceDocument">
            <summary>
                Api方法的信息
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.ServiceDocument.Serialize">
            <summary>
            序列化类型
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.ServiceDocument.IsLocal">
            <summary>
                是否本地
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.ServiceDocument.Aips">
            <summary>
                Api方法
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Documents.ServiceInfo">
            <summary>
            站点信息
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.ServiceInfo.Type">
            <summary>
                类
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.ServiceInfo.NetBuilder">
            <summary>
            消息接收对象构造器
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Documents.TypeDocument">
            <summary>
                Api结构的信息
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.TypeDocument.TypeName">
            <summary>
                类型
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.TypeDocument.ClassName">
            <summary>
                类型
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.TypeDocument.IsBaseType">
            <summary>
                类型
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.TypeDocument.IsEnum">
            <summary>
                枚举
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.TypeDocument.IsArray">
            <summary>
                数组
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.TypeDocument.JsonName">
            <summary>
                Json名称
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.TypeDocument.CanNull">
            <summary>
                能否为空
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.TypeDocument.Regex">
            <summary>
                正则校验(文本)
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.TypeDocument.Min">
            <summary>
                最小(包含的数值或文本长度)
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.TypeDocument.Max">
            <summary>
                最大(包含的数值或文本长度)
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.TypeDocument.Fields">
            <summary>
                字段
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Documents.TypeDocument.Copy(ZeroTeam.MessageMVC.Documents.DocumentItem)">
            <summary>
                复制
            </summary>
            <param name="document"></param>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.TypeDocument.DocDesc">
            <summary>
            文档说明
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.TypeDocument.DocName">
            <summary>
            文档名称
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.TypeDocument.DocExample">
            <summary>
            文档名称
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Documents.XmlMember">
            <summary>
                从程序集文档读取的注释信息
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Documents.XmlMember.HelpXml">
            <summary>
                读取的帮助XML
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Documents.XmlMember.Assemblies">
            <summary>
                读取的帮助XML
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.XmlMember.Type">
            <summary>
                类名
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.XmlMember.Returns">
            <summary>
                返回
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.XmlMember.XArguments">
            <summary>
                参数(XML对象)
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.XmlMember.Arguments">
            <summary>
                参数字典
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Documents.XmlMember.Find(System.Type)">
            <summary>
                查找
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Documents.XmlMember.Find(System.Type,System.String,System.String)">
            <summary>
                查找
            </summary>
            <param name="type">类型</param>
            <param name="subType">注释类型 T 类型 P 属性 M 方法 F字段</param>
            <param name="sub">子级名称</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Documents.XmlMember.Find(System.String,System.String)">
            <summary>
                查找
            </summary>
            <param name="name">名称</param>
            <param name="type">注释类型 T 类型 P 属性 M 方法 F字段</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Documents.XmlMember.Find(System.String,System.String,System.String)">
            <summary>
                查找
            </summary>
            <param name="name">名称</param>
            <param name="type">注释类型 T 类型 P 属性 M 方法 F字段</param>
            <param name="sub">子级名称</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Documents.XmlMember.Load(System.Reflection.Assembly)">
            <summary>
                载入
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Documents.XmlMember.Load(System.String)">
            <summary>
                载入
            </summary>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.HealthInfo">
            <summary>
            健康信息
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.HealthInfo.Items">
            <summary>
            检查详情
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.HealthItem">
            <summary>
            健康节点
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.HealthItem.ItemName">
            <summary>
            节点名称
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.HealthItem.Level">
            <summary>
            健康等级,1-5级,5为最好,5,-1为发生异常,0为失败
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.HealthItem.Value">
            <summary>
            健康值
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.HealthItem.Details">
            <summary>
            检查详情
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.IFlowMiddleware">
            <summary>
            表示一个流程中间件
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.IHealthCheck">
            <summary>
            表示一个应用中间件
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.IHealthCheck.Check">
            <summary>
            执行健康检查
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.IAppChecker">
            <summary>
            表示应用检查器
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.IAppChecker.Check(ZeroTeam.MessageMVC.ZeroAppOption)">
            <summary>
                预检
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.IZeroDiscover">
            <summary>
            表示一个起始流程
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.IZeroDiscover.Discovery">
            <summary>
             发现
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ILifeFlow">
            <summary>
            表示一个生命周期流程
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ILifeFlow.Initialize">
            <summary>
                初始化
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ILifeFlow.Open">
            <summary>
            启动
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ILifeFlow.Closing">
            <summary>
            关闭
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ILifeFlow.Close">
            <summary>
            关闭
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ILifeFlow.Destroy">
            <summary>
            注销
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Services.IService">
            <summary>
            站点连接池
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Services.IService.ServiceName">
            <summary>
            服务名称
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Services.IService.CanRun">
            <summary>
                是否可以运行的判断方法
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Services.IService.RealState">
            <summary>
                运行状态
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Services.IService.Serialize">
            <summary>
            序列化对象
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Services.IService.Receiver">
            <summary>
            消息接收对象
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Services.IService.ConfigState">
            <summary>
                配置状态
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Services.IService.IsAutoService">
            <summary>
            是否自动发现对象
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Services.IService.GetApiAction(System.String)">
            <summary>
             取得API信息
            </summary>
            <param name="api"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Services.IService.RegistAction(System.String,ZeroTeam.MessageMVC.Documents.ApiActionInfo)">
            <summary>
                注册方法
            </summary>
            <param name="name">方法外部方法名称，如 v1/auto/getdid </param>
            <param name="info">反射信息</param>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Services.IService.RegistWildcardAction(ZeroTeam.MessageMVC.Documents.ApiActionInfo)">
            <summary>
                注册通配方法
            </summary>
            <param name="info">反射信息</param>
        </member>
        <member name="T:ZeroTeam.MessageMVC.IZeroDependency">
            <summary>
            表示一个依赖对象
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.IZeroDependency.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.IZeroMiddleware">
            <summary>
            表示一个应用中间件
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.IZeroMiddleware.Level">
            <summary>
            等级,用于确定中间件优先级
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.IInlineMessage">
            <summary>
            在线消息参数
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IInlineMessage.MessageType">
            <summary>
            消息类型
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IInlineMessage.RequestId">
            <summary>
            请求ID
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IInlineMessage.ArgumentData">
            <summary>
            实体参数
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IInlineMessage.ExtensionDictionary">
            <summary>
            字典参数
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IInlineMessage.BinaryDictionary">
            <summary>
            二进制字典参数
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IInlineMessage.ResultData">
            <summary>
            返回值
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IInlineMessage.IsOutAccess">
            <summary>
            是否外部访问
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IInlineMessage.RealState">
            <summary>
            过程状态
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IInlineMessage.DataState">
            <summary>
            数据状态
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IInlineMessage.ResetToRequest">
            <summary>
            重置为请求状态
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IInlineMessage.CopyToRequest">
            <summary>
            复制一个请求
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IInlineMessage.CheckState">
            <summary>
            在线(框架内调用)
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IInlineMessage.Offline(ZeroTeam.MessageMVC.Messages.ISerializeProxy)">
            <summary>
            转为离线序列化文本
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IInlineMessage.ArgumentOffline(ZeroTeam.MessageMVC.Messages.ISerializeProxy)">
            <summary>
            转为离线序列化文本
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IInlineMessage.RestoryContentToDictionary(ZeroTeam.MessageMVC.Messages.ISerializeProxy,System.Boolean)">
            <summary>
            还原内容为字典
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IInlineMessage.RestoryContent(ZeroTeam.MessageMVC.Messages.ISerializeProxy,System.Type)">
            <summary>
            还原内容参数
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IInlineMessage.GetArgument(System.Int32,System.Int32,ZeroTeam.MessageMVC.Messages.ISerializeProxy,System.Type)">
            <summary>
            取参数值
            </summary>
            <param name="scope">参数范围</param>
            <param name="serializeType">序列化类型</param>
            <param name="serialize">序列化器</param>
            <param name="type">序列化对象</param>
            <returns>值</returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IInlineMessage.GetScopeArgument(System.String,ZeroTeam.MessageMVC.Messages.ArgumentScope,System.String)">
            <summary>
            取参数值
            </summary>
            <param name="name">名称</param>
            <param name="scope">参数范围</param>
            <param name="def">缺省值</param>
            <returns>值</returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IInlineMessage.GetValueArgument(System.String,System.Int32,System.Int32,ZeroTeam.MessageMVC.Messages.ISerializeProxy,System.Type)">
            <summary>
            取参数值(动态IL代码调用)  BUG
            </summary>
            <param name="name">名称</param>
            <param name="scope">参数范围</param>
            <param name="serializeType">序列化类型</param>
            <param name="serialize">序列化器</param>
            <param name="type">序列化对象</param>
            <returns>值</returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IInlineMessage.GetNullableArgument``1(System.String,System.Func{System.String,``0})">
            <summary>
            取基本参数值
            </summary>
            <param name="name">名称</param>
            <param name="parse">转化方法</param>
            <returns>值</returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IInlineMessage.GetBaseArgument``1(System.String,System.Func{System.String,``0})">
            <summary>
            取基本参数值
            </summary>
            <param name="name">名称</param>
            <param name="parse">转化方法</param>
            <returns>值</returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IInlineMessage.GetStringArgument(System.String)">
            <summary>
            取基本参数值
            </summary>
            <param name="name">名称</param>
            <returns>值</returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IInlineMessage.GetBinaryArgument(System.String)">
            <summary>
            取二进制参数值
            </summary>
            <param name="name">名称</param>
            <returns>值</returns>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IInlineMessage.ResultCreater">
            <summary>
                返回值构造对象
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IInlineMessage.ResultSerializer">
            <summary>
                返回值序列化对象
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IInlineMessage.OfflineResult(ZeroTeam.MessageMVC.Messages.ISerializeProxy)">
            <summary>
            取得返回值
            </summary>
            <param name="serialize"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IInlineMessage.GetResultData``1">
            <summary>
            取得返回值
            </summary>
            <typeparam name="TRes"></typeparam>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IInlineMessage.ToMessageResult(System.Boolean,ZeroTeam.MessageMVC.Messages.ISerializeProxy)">
            <summary>
            复制构造一个返回值对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IInlineMessage.ToStateResult">
            <summary>
            复制构造一个返回值对象,仅包含状态
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IInlineMessage.Clone">
            <summary>
            复制
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IInlineMessage.CopyResult(ZeroTeam.MessageMVC.Messages.IMessageResult)">
            <summary>
            复制返回值
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IInlineMessage.Look">
            <summary>
            查看
            </summary>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.IMessageItem">
            <summary>
            标准消息交互格式
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IMessageItem.ID">
            <summary>
            标识
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IMessageItem.Result">
            <summary>
            处理结果,对应状态的解释信息
            </summary>
            <remarks>
            未消费:无内容
            已接受:无内容
            格式错误 : 无内容
            无处理方法 : 无内容
            处理异常 : 异常信息
            处理失败 : 失败内容或原因
            处理成功 : 结果信息或无
            </remarks>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IMessageItem.State">
            <summary>
            处理状态
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IMessageItem.TraceInfo">
            <summary>
                跟踪信息
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IMessageItem.Service">
            <summary>
            分类
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IMessageItem.Method">
            <summary>
            方法
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IMessageItem.Argument">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IMessageItem.Extension">
            <summary>
            扩展信息（固定为字典）
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IMessageItem.Context">
            <summary>
            上下文信息
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IMessageItem.User">
            <summary>
            用户
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.IMessageResult">
            <summary>
            标准消息返回
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IMessageResult.ID">
            <summary>
            标识
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IMessageResult.Result">
            <summary>
            处理结果,对应状态的解释信息
            </summary>
            <remarks>
            未消费:无内容
            已接受:无内容
            格式错误 : 无内容
            无处理方法 : 无内容
            处理异常 : 异常信息
            处理失败 : 失败内容或原因
            处理成功 : 结果信息或无
            </remarks>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IMessageResult.State">
            <summary>
            处理状态
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IMessageResult.Trace">
            <summary>
                跟踪信息
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IMessageResult.DataState">
            <summary>
            数据状态
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IMessageResult.ResultData">
            <summary>
            返回值
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.InlineMessage">
            <summary>
            消息交互格式
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.InlineMessage.ZeroTeam#MessageMVC#Messages#IInlineMessage#MessageType">
            <summary>
            消息类型
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.InlineMessage.RequestId">
            <summary>
            请求ID
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.InlineMessage.IsOutAccess">
            <summary>
            是否外部访问
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.InlineMessage.dictionary">
            <summary>
            字典参数
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.InlineMessage.ExtensionDictionary">
            <summary>
            字典参数
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.InlineMessage.BinaryDictionary">
            <summary>
            二进制字典参数
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.InlineMessage.ArgumentData">
            <summary>
            实体参数
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.InlineMessage.ResultData">
            <summary>
            处理结果,对应状态的解释信息
            </summary>
            <remarks>
            未消费:无内容
            已接受:无内容
            格式错误 : 无内容
            无处理方法 : 无内容
            处理异常 : 异常信息
            处理失败 : 失败内容或原因
            处理成功 : 结果信息或无
            </remarks>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.InlineMessage.ResultSerializer">
            <summary>
                返回值序列化对象
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.InlineMessage.ResultCreater">
            <summary>
                返回值构造对象
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.InlineMessage.ArgumentSerializer">
            <summary>
            参数序列化器
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.InlineMessage.GetArgument(System.Int32,System.Int32,ZeroTeam.MessageMVC.Messages.ISerializeProxy,System.Type)">
            <summary>
            取参数值
            </summary>
            <param name="scope">参数范围</param>
            <param name="serializeType">序列化类型</param>
            <param name="serialize">序列化器</param>
            <param name="type">序列化对象</param>
            <returns>值</returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.MessageDataState">
            <summary>
            表明消息的数据状态
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageDataState.None">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageDataState.ArgumentInline">
            <summary>
            参数已在线
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageDataState.ArgumentOffline">
            <summary>
            参数已离线
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageDataState.ResultInline">
            <summary>
            返回值已在线
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageDataState.ResultOffline">
            <summary>
            返回值已离线
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageDataState.ExtensionInline">
            <summary>
            扩展参数已在线
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageDataState.ExtensionOffline">
            <summary>
            扩展参数已离线
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.MessageHelper">
            <summary>
            消息辅助类
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.MessageHelper.Simple(System.String,System.String,System.String,System.String)">
            <summary>
            简单消息
            </summary>
            <param name="id">跟踪标识</param>
            <param name="topic">消息分类</param>
            <param name="title">消息标题</param>
            <param name="content">消息内容</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.MessageHelper.NewRemote``1(System.String,System.String,``0)">
            <summary>
            构造一个远程调用的消息
            </summary>
            <param name="topic">消息分类</param>
            <param name="title">消息标题</param>
            <param name="content">消息内容</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.MessageHelper.NewRemote(System.String,System.String,System.String)">
            <summary>
            构造一个远程调用的消息
            </summary>
            <param name="topic">消息分类</param>
            <param name="title">消息标题</param>
            <param name="content">消息内容</param>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.MessageItem">
            <summary>
            消息交互格式
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.MessageItem.ID">
            <summary>
            消息标识
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.MessageItem.State">
            <summary>
            处理状态
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.MessageItem.Service">
            <summary>
            分类
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.MessageItem.Method">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.MessageItem.Argument">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.MessageItem.Extension">
            <summary>
            扩展信息（固定为字典）
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.MessageItem.Result">
            <summary>
            处理结果,对应状态的解释信息
            </summary>
            <remarks>
            未消费:无内容
            已接受:无内容
            格式错误 : 无内容
            无处理方法 : 无内容
            处理异常 : 异常信息
            处理失败 : 失败内容或原因
            处理成功 : 结果信息或无
            </remarks>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.MessageItem.DataState">
            <summary>
            数据状态
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.MessageItem.TraceInfo">
            <summary>
                跟踪信息
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.MessageItem.Context">
            <summary>
            上下文信息
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.MessageItem.User">
            <summary>
            用户
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.MessageResult">
            <summary>
            标准消息返回
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.MessageResult.ID">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.MessageResult.State">
            <summary>
            处理状态
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.MessageResult.Trace">
            <summary>
                跟踪信息
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.MessageResult.DataState">
            <summary>
            数据状态
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.MessageResult.Result">
            <summary>
            处理结果,对应状态的解释信息
            </summary>
            <remarks>
            未消费:无内容
            已接受:无内容
            格式错误 : 无内容
            无处理方法 : 无内容
            处理异常 : 异常信息
            处理失败 : 失败内容或原因
            处理成功 : 结果信息或无
            </remarks>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.MessageResult.ResultData">
            <summary>
            处理结果,对应状态的解释信息
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.MessageState">
            <summary>
            表示消息状态
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageState.None">
            <summary>
            未消费
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageState.Cancel">
            <summary>
            取消处理
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageState.Accept">
            <summary>
            已接受
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageState.Unsend">
            <summary>
            未发送
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageState.Send">
            <summary>
            已发送
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageState.Recive">
            <summary>
            已接收
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageState.Processing">
            <summary>
            正在处理
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageState.AsyncQueue">
            <summary>
            异步排队
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageState.Success">
            <summary>
            处理成功
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageState.Failed">
            <summary>
            处理失败
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageState.Unhandled">
            <summary>
            无处理方法
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageState.Deny">
            <summary>
            拒绝处理
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageState.FormalError">
            <summary>
            格式错误
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageState.NetworkError">
            <summary>
            网络错误
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageState.BusinessError">
            <summary>
            处理错误
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageState.NoUs">
            <summary>
            并非MessageMVC服务
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageState.FrameworkError">
            <summary>
            框架错误
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageState.ServerMessage">
            <summary>
            服务器下发的消息
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.MessageStateHelper">
            <summary>
            扩展
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.MessageStateHelper.ToErrorCode(ZeroTeam.MessageMVC.Messages.MessageState)">
            <summary>
            转为标准错误码
            </summary>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.MessageStateHelper.IsComplete(ZeroTeam.MessageMVC.Messages.MessageState)">
            <summary>
            是否完成操作
            </summary>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.MessageStateHelper.IsEnd(ZeroTeam.MessageMVC.Messages.MessageState)">
            <summary>
            是否无错误结束(成功失败或进入队列)
            </summary>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.MessageStateHelper.IsSuccess(ZeroTeam.MessageMVC.Messages.MessageState)">
            <summary>
            是否无错误结束(成功失败或进入队列)
            </summary>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.IMessageConsumer">
            <summary>
            表示一个消息队列消费对象
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.IMessagePoster">
            <summary>
            消息投递对象
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IMessagePoster.GetLife">
            <summary>
            取得生命周期对象
            </summary>
            <returns></returns>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IMessagePoster.IsLocalReceiver">
            <summary>
            是否本地接收者
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IMessagePoster.Post(ZeroTeam.MessageMVC.Messages.IInlineMessage)">
            <summary>
            投递消息
            </summary>
            <param name="message">消息</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IMessagePoster.CheckMessage(ZeroTeam.MessageMVC.Messages.IMessageItem)">
            <summary>
            消息检查
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.IMessageWriter">
            <summary>
            表示一个消息写入对象
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IMessageWriter.OnResult(ZeroTeam.MessageMVC.Messages.IInlineMessage,System.Object)">
            <summary>
            发送返回值 
            </summary>
            <returns>发送是否成功</returns>
            <remarks>
            默认实现为保证OnCallEnd可控制且不再抛出异常,无特殊需要不应再次实现
            </remarks>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.IMessageReceiver">
            <summary>
            表示一个消息接收对象
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IMessageReceiver.PosterName">
            <summary>
            对应发送器名称
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IMessageReceiver.Service">
            <summary>
            服务
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IMessageReceiver.Logger">
            <summary>
            日志记录器
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IMessageReceiver.LoopBegin">
            <summary>
            开始轮询前的工作
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IMessageReceiver.Loop(System.Threading.CancellationToken)">
            <summary>
            轮询
            </summary>
            <returns>返回False表明需要重启</returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IMessageReceiver.LoopComplete">
            <summary>
            结束轮询前的工作
            </summary>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.IMessageWorker">
            <summary>
            消息处理对象
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IMessageWorker.State">
            <summary>
            运行状态
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.INetEvent">
            <summary>
            表示一个分布式事件对象
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.IServiceReceiver">
            <summary>
            表示一个远程服务(RPC或HTTP)传输对象
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.MessagePostBase">
            <summary>
            消息投递器基类
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.MessagePostBase.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.MessagePostBase.IsLocalReceiver">
            <summary>
            是否本地接收者
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.MessagePostBase.Logger">
            <summary>
            日志器
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.MessagePostBase.State">
            <summary>
            运行状态
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.MessagePostException">
            <summary>
            表示消息发送的异常,用于集中处理,也基于透明化消息发送过程的需要
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.MessagePostException.#ctor(System.String,System.Exception)">
            <summary>
            构造
            </summary>
            <param name="msg">消息</param>
            <param name="exception">原始异常</param>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.MessageReceiveException">
            <summary>
            表示消息接收的异常,用于集中处理,也基于透明化消息接收过程的需要
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.MessageReceiveException.#ctor(System.String,System.Exception)">
            <summary>
            构造
            </summary>
            <param name="msg">消息</param>
            <param name="exception">原始异常</param>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.MessageReceiverBase">
            <summary>
            消息接收对象基类
            </summary>
            <remarks>
            实现了IMessagePoster自注册,可以做到本进程调用不会提升到网络层面
            </remarks>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.MessageReceiverBase.ZeroTeam#MessageMVC#Messages#IMessagePoster#GetLife">
            <summary>
            取得生命周期对象
            </summary>
            <returns></returns>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.MessageReceiverBase.ZeroTeam#MessageMVC#Messages#IMessagePoster#IsLocalReceiver">
            <summary>
            是否本地接收者
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.MessageReceiverBase.#ctor(System.String)">
            <summary>
            内部构造
            </summary>
            <param name="name"></param>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.MessageReceiverBase.CanLocalTunnel">
            <summary>
            是否可启动本地隧道
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.MessageReceiverBase.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.MessageReceiverBase.Logger">
            <summary>
            日志记录器
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.MessageReceiverBase.Service">
            <summary>
            服务
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageReceiverBase.state">
            <summary>
            运行状态
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.MessageReceiverBase.ZeroTeam#MessageMVC#Messages#IMessageWorker#State">
            <summary>
            运行状态
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.MessageReceiverBase.Initialize">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.MessageReceiverBase.ZeroTeam#MessageMVC#Messages#IMessagePoster#Post(ZeroTeam.MessageMVC.Messages.IInlineMessage)">
            <summary>
            生产消息
            </summary>
            <param name="message">消息</param>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.IMessageMiddleware">
            <summary>
            消息处理中间件
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IMessageMiddleware.Level">
            <summary>
            层级
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IMessageMiddleware.Scope">
            <summary>
            消息中间件的处理范围
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IMessageMiddleware.Prepare(ZeroTeam.MessageMVC.Services.IService,ZeroTeam.MessageMVC.Messages.IInlineMessage,System.Object)">
            <summary>
            准备
            </summary>
            <param name="service">当前服务</param>
            <param name="message">当前消息</param>
            <param name="tag">扩展信息</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IMessageMiddleware.Handle(ZeroTeam.MessageMVC.Services.IService,ZeroTeam.MessageMVC.Messages.IInlineMessage,System.Object,System.Func{System.Threading.Tasks.Task})">
            <summary>
            处理消息
            </summary>
            <param name="service">当前服务</param>
            <param name="message">当前消息</param>
            <param name="tag">扩展信息</param>
            <param name="next">下一个处理方法</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IMessageMiddleware.OnGlobalException(ZeroTeam.MessageMVC.Services.IService,ZeroTeam.MessageMVC.Messages.IInlineMessage,System.Exception,System.Object)">
            <summary>
            全局异常发生时
            </summary>
            <param name="service">当前服务</param>
            <param name="message">当前消息</param>
            <param name="exception">异常信息</param>
            <param name="tag">扩展信息</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IMessageMiddleware.OnEnd(ZeroTeam.MessageMVC.Messages.IInlineMessage)">
            <summary>
            处理结束时(结果交付Service后)
            </summary>
            <param name="message">当前消息</param>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.MessageArgumentNullException">
            <summary>
            表示消息业务处理过程的参数异常用于精确定位于框架中发的参数错误,用于集中处理,也基于透明化消息接收过程的需要
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.MessageArgumentNullException.#ctor(System.String)">
            <summary>
            构造
            </summary>
            <param name="name">参数名称</param>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.MessageBusinessException">
            <summary>
            表示消息业务处理过程的异常,用于集中处理,也基于透明化消息接收过程的需要
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.MessageBusinessException.#ctor(System.String,System.Exception)">
            <summary>
            构造
            </summary>
            <param name="msg">消息</param>
            <param name="exception">原始异常</param>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.MessageHandleScope">
            <summary>
            消息的处理范围
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageHandleScope.None">
            <summary>
            什么也不处理
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageHandleScope.Prepare">
            <summary>
            准备
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageHandleScope.Handle">
            <summary>
            处理消息
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageHandleScope.Exception">
            <summary>
            处理全局异常
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageHandleScope.End">
            <summary>
            处理最终结果
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.MessageProcessor">
            <summary>
               消息处理器
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageProcessor.Service">
            <summary>
            当前站点
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageProcessor.Message">
            <summary>
            调用的内容
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageProcessor.IsOffline">
            <summary>
            是否离线调用
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageProcessor.Original">
            <summary>
            调用的原始内容
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.MessageProcessor.OnMessagePush(ZeroTeam.MessageMVC.Services.IService,ZeroTeam.MessageMVC.Messages.IInlineMessage,System.Boolean,System.Object)">
            <summary>
            消息处理(异步)
            </summary>
            <param name="service">服务</param>
            <param name="message">消息</param>
            <param name="offline">是否离线消息</param>
            <param name="original">原始透传对象</param>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.MessageProcessor.RunOnMessagePush(ZeroTeam.MessageMVC.Services.IService,ZeroTeam.MessageMVC.Messages.IInlineMessage,System.Boolean,System.Object)">
            <summary>
            消息处理(异步)
            </summary>
            <param name="service">服务</param>
            <param name="message">消息</param>
            <param name="offline">是否离线消息</param>
            <param name="original">原始透传对象</param>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageProcessor.middlewares">
            <summary>
            所有消息处理中间件
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageProcessor.index">
            <summary>
            当前中间件序号
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.MessageProcessor.Prepare">
            <summary>
            准备处理
            </summary>
            <returns>是否需要正式处理</returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.MessageProcessor.DoHandle">
            <summary>
            中间件链式处理
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.MessageProcessor.Handle">
            <summary>
            中间件链式处理
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.MessageProcessor.Write">
            <summary>
            结果推到调用处
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.MessageProcessor.OnMessageError(System.Exception)">
            <summary>
            错误发生时处理
            </summary>
            <remarks>
            默认实现为保证OnCallEnd可控制且不再抛出异常,无特殊需要不应再次实现
            </remarks>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.MessageProcessor.OnEnd">
            <summary>
            数据发送结束
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.ArgumentScope">
            <summary>
            序列化类型
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.ArgumentScope.Content">
            <summary>
            内容
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.ArgumentScope.Dictionary">
            <summary>
            取字典内容
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.ArgumentScopeAttribute">
            <summary>
            表示自自定义序列化
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.ArgumentScopeAttribute.Scope">
            <summary>
            类型
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.ArgumentScopeAttribute.#ctor(ZeroTeam.MessageMVC.Messages.ArgumentScope)">
            <summary>
            构造
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.ArgumentSerializeTypeAttribute">
            <summary>
            参数序列化
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.ArgumentSerializeTypeAttribute.Type">
            <summary>
            类型
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.ArgumentSerializeTypeAttribute.#ctor(ZeroTeam.MessageMVC.Messages.SerializeType)">
            <summary>
            构造
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.ResultSerializeTypeAttribute">
            <summary>
            返回值序列化
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.ResultSerializeTypeAttribute.Type">
            <summary>
            类型
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.ResultSerializeTypeAttribute.#ctor(ZeroTeam.MessageMVC.Messages.SerializeType)">
            <summary>
            构造
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.SerializeType">
            <summary>
            序列化类型
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.SerializeType.None">
            <summary>
            不需要
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.SerializeType.Json">
            <summary>
            JSON
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.SerializeType.NewtonJson">
            <summary>
            Newtonsoft的JSON
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.SerializeType.Xml">
            <summary>
            XML
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.SerializeType.Bson">
            <summary>
            gRPC的BSON
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.SerializeType.Custom">
            <summary>
            自定义
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.SerializeTypeAttribute">
            <summary>
            表示自自定义序列化
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.SerializeTypeAttribute.Type">
            <summary>
            类型
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.SerializeTypeAttribute.#ctor(ZeroTeam.MessageMVC.Messages.SerializeType)">
            <summary>
            构造
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.JsonHelper">
            <summary>
            Json序列化装饰器
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.JsonHelper.NewtonJson">
            <summary>
            使用NewtonsoftJson的序列化器
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.JsonHelper.ToJson(System.Object,System.Boolean)">
            <summary>
            序列化
            </summary>
            <param name="t"></param>
            <param name="indented">是否格式化</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.JsonHelper.ToInnerString(System.Object)">
            <summary>
            序列化
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.JsonHelper.SerializeObject``1(``0)">
            <summary>
            序列化
            </summary>
            <typeparam name="T"></typeparam>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.JsonHelper.DeserializeObject``1(System.String)">
            <summary>
            反序列化
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.JsonHelper.TryDeserializeObject``1(System.String,``0@)">
            <summary>
            反序列化
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.JsonHelper.TryDeserializeObject``1(System.String)">
            <summary>
            反序列化
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.JsonHelper.DeserializeObject(System.String,System.Type)">
            <summary>
            反序列化
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.JsonHelper.ToJsonBytes``1(``0)">
            <summary>
            转为UTF8字节
            </summary>
            <param name="obj"></param>
            <returns>字节</returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.JsonSerializeProxy">
            <summary>
            Json序列化装饰器
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.JsonSerializeProxy.ToObject``1(System.String)">
            <summary>
            反序列化
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.JsonSerializeProxy.ToObject``1(System.Byte[])">
            <summary>
            反序列化
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.JsonSerializeProxy.ToBytes``1(``0)">
            <summary>
            序列化妻字节
            </summary>
            <param name="obj">对象</param>
            <returns>Utf8字节</returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.JsonSerializeProxy.ToObject(System.String,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.JsonSerializeProxy.ToString(System.Object,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.SerializeProxy">
            <summary>
            值类型序列化代理
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.SerializeProxy.Convert">
            <summary>
            转换器
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.SerializeProxy.ToObject``1(System.String)">
            <summary>
            反序列化
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.SerializeProxy.ToObject(System.String,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.SerializeProxy.ToString(System.Object,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.SmartSerializer">
            <summary>
            智能序列化器
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.SmartSerializer.MsJson">
            <summary>
            内置序列化器
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.SmartSerializer.ToInnerString(System.Object)">
            <summary>
            使用MsJson序列化
            </summary>
            <param name="obj">对象</param>
            <returns>字符</returns>
            <remarks>
            基于内部全部使用JSON传输的规则,如序列化器不存在,则为JSON
            </remarks>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.SmartSerializer.FromInnerString``1(System.String,System.Boolean)">
            <summary>
            自动根据字符特点反序列化
            </summary>
            <param name="str">文本</param>
            <param name="trim">执行Trim,以消除空白字符</param>
            <returns>对象</returns>
            <remarks>
            xml以&lt;为第一个字符
            json以[或{为第一个字符
            </remarks>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.SmartSerializer.TryFromInnerString``1(System.String,``0@,System.Boolean)">
            <summary>
            自动根据字符特点反序列化
            </summary>
            <param name="str">文本</param>
            <param name="obj">返回的对象</param>
            <param name="trim">执行Trim,以消除空白字符</param>
            <returns>对象</returns>
            <remarks>
            xml以&lt;为第一个字符
            json以[或{为第一个字符
            </remarks>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.SmartSerializer.FromInnerString(System.String,System.Type,System.Boolean)">
            <summary>
            自动根据字符特点反序列化
            </summary>
            <param name="str">文本</param>
            <param name="type">类型</param>
            <param name="trim">执行Trim,以消除空白字符</param>
            <returns>对象</returns>
            <remarks>
            xml以&lt;为第一个字符
            json以[或{为第一个字符
            </remarks>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.SmartSerializer.ToString(System.Object,ZeroTeam.MessageMVC.Messages.ISerializeProxy)">
            <summary>
            自动序列化()
            </summary>
            <param name="obj">对象</param>
            <param name="serializer">序列化器</param>
            <returns>字符</returns>
            <remarks>
            基于内部全部使用JSON传输的规则,如序列化器不存在,则为JSON
            </remarks>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.SmartSerializer.ToObject(System.String,System.Type,System.Boolean)">
            <summary>
            自动根据字符特点反序列化
            </summary>
            <param name="str">文本</param>
            <param name="type">类型</param>
            <param name="trim">执行Trim,以消除空白字符</param>
            <returns>对象</returns>
            <remarks>
            xml以&lt;为第一个字符
            json以[或{为第一个字符
            </remarks>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.SmartSerializer.ToObject``1(System.String,System.Boolean)">
            <summary>
            自动根据字符特点反序列化
            </summary>
            <param name="str">文本</param>
            <param name="trim">执行Trim,以消除空白字符</param>
            <returns>对象</returns>
            <remarks>
            xml以&lt;为第一个字符
            json以[或{为第一个字符
            </remarks>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.SmartSerializer.TryDeserialize(System.String,System.Type,System.Object@)">
            <summary>
            反序列化
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.SmartSerializer.TryDeserialize``1(System.String,``0@)">
            <summary>
            反序列化
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.SmartSerializer.SerializeRequest(ZeroTeam.MessageMVC.Messages.IMessageItem)">
            <summary>
            自动序列化()
            </summary>
            <param name="message">消息</param>
            <returns>字符</returns>
            <remarks>
            基于内部全部使用JSON传输的规则,如序列化器不存在,则为JSON
            </remarks>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.SmartSerializer.SerializeMessage(ZeroTeam.MessageMVC.Messages.IMessageItem)">
            <summary>
            自动序列化()
            </summary>
            <param name="message">消息</param>
            <returns>字符</returns>
            <remarks>
            基于内部全部使用JSON传输的规则,如序列化器不存在,则为JSON
            </remarks>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.SmartSerializer.SerializeResult(ZeroTeam.MessageMVC.Messages.IMessageResult)">
            <summary>
            自动序列化()
            </summary>
            <param name="result">消息</param>
            <returns>字符</returns>
            <remarks>
            基于内部全部使用JSON传输的规则,如序列化器不存在,则为JSON
            </remarks>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.SmartSerializer.SerializeResult(ZeroTeam.MessageMVC.Messages.IInlineMessage)">
            <summary>
            自动序列化为MessageResult
            </summary>
            <param name="message">消息</param>
            <returns>字符</returns>
            <remarks>
            基于内部全部使用JSON传输的规则,如序列化器不存在,则为JSON
            </remarks>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.SmartSerializer.TryToMessage(System.String,ZeroTeam.MessageMVC.Messages.IInlineMessage@,System.Boolean)">
            <summary>
            自动根据字符特点反序列化
            </summary>
            <param name="str">文本</param>
            <param name="message">返回的消息</param>
            <param name="trim">执行Trim,以消除空白字符</param>
            <returns>是否成功</returns>
            <remarks>
            xml以&lt;为第一个字符
            json以[或{为第一个字符
            </remarks>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.SmartSerializer.TryToResult(System.String,ZeroTeam.MessageMVC.Messages.IMessageResult@,System.Boolean)">
            <summary>
            自动根据字符特点反序列化
            </summary>
            <param name="str">文本</param>
            <param name="result">返回的消息</param>
            <param name="trim">执行Trim,以消除空白字符</param>
            <returns>是否成功</returns>
            <remarks>
            xml以&lt;为第一个字符
            json以[或{为第一个字符
            </remarks>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.SmartSerializer.ToResult(System.String,System.Boolean)">
            <summary>
            自动根据字符特点反序列化
            </summary>
            <param name="str">文本</param>
            <param name="trim">执行Trim,以消除空白字符</param>
            <returns>对象</returns>
            <remarks>
            xml以&lt;为第一个字符
            json以[或{为第一个字符
            </remarks>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.SmartSerializer.ToMessage(System.String,System.Boolean)">
            <summary>
            自动根据字符特点反序列化
            </summary>
            <param name="str">文本</param>
            <param name="trim">执行Trim,以消除空白字符</param>
            <returns>对象</returns>
            <remarks>
            xml以&lt;为第一个字符
            json以[或{为第一个字符
            </remarks>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.SmartSerializer.ToBytes``1(``0)">
            <summary>
            序列化为Json的Utf8字节
            </summary>
            <param name="obj">对象</param>
            <returns>Utf8字节</returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.SmartSerializer.ToObject``1(System.Byte[])">
            <summary>
            反序列化字节
            </summary>
            <param name="bytes">Utf8字节</param>
            <returns>对象</returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.IBsonSerializeProxy">
            <summary>
            Bson序列化装饰器
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.IJsonSerializeProxy">
            <summary>
            Json序列化装饰器
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.ISerializeProxy">
            <summary>
            表示一个序列化代理
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.ISerializeProxy.TryDeserialize(System.String,System.Type,System.Object@)">
            <summary>
            反序列化
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.ISerializeProxy.TryDeserialize``1(System.String,``0@)">
            <summary>
            反序列化
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.ISerializeProxy.ToObject``1(System.String)">
            <summary>
            反序列化
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.ISerializeProxy.ToObject(System.String,System.Type)">
            <summary>
            反序列化
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.ISerializeProxy.ToString(System.Object,System.Boolean)">
            <summary>
            序列化
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.IXmlSerializeProxy">
            <summary>
            Xml序列化装饰器
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.NewtonJsonSerializeProxy">
            <summary>
            Json序列化装饰器
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.NewtonJsonSerializeProxy.ToObject``1(System.String)">
            <summary>
            反序列化
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.NewtonJsonSerializeProxy.ToObject(System.String,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.NewtonJsonSerializeProxy.ToString(System.Object,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.CDataXmlSerializeProxy">
            <summary>
            Xml序列化装饰器
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.CDataXmlSerializeProxy.ToObject``1(System.String)">
            <summary>
            反序列化
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.CDataXmlSerializeProxy.ToObject(System.String,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.CDataXmlSerializeProxy.ToString(System.Object,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.XmlSerializeProxy">
            <summary>
            Xml序列化装饰器
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.XmlSerializeProxy.ToObject``1(System.String)">
            <summary>
            反序列化
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.XmlSerializeProxy.ToObject(System.String,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.XmlSerializeProxy.ToString(System.Object,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ZeroTeam.MessageMVC.MessageQueue.BackgroundPoster`1">
            <summary>
               后台消息发布
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessageQueue.BackgroundPoster`1.ZeroTeam#MessageMVC#Messages#IMessagePoster#GetLife">
            <summary>
            取得生命周期对象
            </summary>
            <returns></returns>
        </member>
        <member name="P:ZeroTeam.MessageMVC.MessageQueue.BackgroundPoster`1.LifeFlow">
            <summary>
            征集周期管理器
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.MessageQueue.BackgroundPoster`1.Name">
            <summary>
            实例名称
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.MessageQueue.BackgroundPoster`1.AsyncPost">
            <summary>
            是否异步投递
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.MessageQueue.BackgroundPoster`1.cancellation">
            <summary>
            取消凭据
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessageQueue.BackgroundPoster`1.RecordLog(Microsoft.Extensions.Logging.LogLevel,System.String)">
            <summary>
            写日志
            </summary>
            <param name="level"></param>
            <param name="log"></param>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessageQueue.BackgroundPoster`1.RecordLog(Microsoft.Extensions.Logging.LogLevel,System.Func{System.String})">
            <summary>
            写日志
            </summary>
            <param name="level"></param>
            <param name="log"></param>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessageQueue.BackgroundPoster`1.DoStart">
            <summary>
            开启
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessageQueue.BackgroundPoster`1.Destroy">
            <summary>
            关闭
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessageQueue.BackgroundPoster`1.ZeroTeam#MessageMVC#Messages#IMessagePoster#Post(ZeroTeam.MessageMVC.Messages.IInlineMessage)">
            <summary>
            生产消息
            </summary>
            <param name="message">消息</param>
            <returns></returns>
        </member>
        <member name="F:ZeroTeam.MessageMVC.MessageQueue.BackgroundPoster`1.BackupFolder">
            <summary>
            备份目录
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessageQueue.BackgroundPoster`1.ReQueueErrorMessage">
            <summary>
            还原发送异常文件
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessageQueue.BackgroundPoster`1.RemoveBackup(`0)">
            <summary>
            删除备份
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessageQueue.BackgroundPoster`1.Backup(`0[])">
            <summary>
            备份消息
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessageQueue.BackgroundPoster`1.Backup(`0)">
            <summary>
            备份消息
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.MessageQueue.BackgroundPoster`1.PostTask">
            <summary>
            发送中的队列
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.MessageQueue.BackgroundPoster`1.PostTask.Start">
            <summary>
            开始时间
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.MessageQueue.BackgroundPoster`1.PostTask.Result">
            <summary>
            原始内容
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.MessageQueue.BackgroundPoster`1.PostTask.Message">
            <summary>
            原始内容
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.MessageQueue.BackgroundPoster`1.PostTask.WaitingTask">
            <summary>
            当前任务
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessageQueue.BackgroundPoster`1.DoPost(`0)">
            <summary>
            投递消息
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="P:ZeroTeam.MessageMVC.MessageQueue.BackgroundPoster`1.CurrentTask">
            <summary>
            当前任务
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessageQueue.BackgroundPoster`1.PostMessage(`0)">
            <summary>
            投递消息
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="F:ZeroTeam.MessageMVC.MessageQueue.BackgroundPoster`1.PostTasks">
            <summary>
            当前等待队列
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessageQueue.BackgroundPoster`1.CheckTimeOut">
            <summary>
            检查超时
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.MessageQueue.QueueItem">
            <summary>
            队列内容
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.MessageQueue.QueueItem.ID">
            <summary>
            消息ID
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.MessageQueue.QueueItem.Time">
            <summary>
            加入时间
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.MessageQueue.QueueItem.Topic">
            <summary>
            主题
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.MessageQueue.QueueItem.Message">
            <summary>
            消息体
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.MessageQueue.QueueItem.FileName">
            <summary>
            备份文本名
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.MessageQueue.QueueItem.Try">
            <summary>
            重试次数
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.MessagePoster">
            <summary>
            消息投递
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.MessagePoster.logger">
            <summary>
            日志对象
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessagePoster.ZeroTeam#MessageMVC#ILifeFlow#Initialize">
            <summary>
                初始化
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessagePoster.ZeroTeam#MessageMVC#ILifeFlow#Open">
            <summary>
            开启
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessagePoster.ZeroTeam#MessageMVC#ILifeFlow#Closing">
            <summary>
            关闭
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessagePoster.ZeroTeam#MessageMVC#ILifeFlow#Close">
            <summary>
            关闭
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessagePoster.ZeroTeam#MessageMVC#ILifeFlow#Destroy">
            <summary>
            关闭
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.MessagePoster.LocalTunnel">
            <summary>
            启用本地隧道（即本地接收器存在的话，本地处理）
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.MessagePoster.DefaultPosterName">
            <summary>
            默认的生产者
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessagePoster.RegistPoster(ZeroTeam.MessageMVC.Messages.IMessagePoster,System.String[])">
            <summary>
                手动注册
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessagePoster.UnRegistPoster(System.String)">
            <summary>
                手动注销
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessagePoster.RegistPoster``1(System.String[])">
            <summary>
                手动注册
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessagePoster.Post(ZeroTeam.MessageMVC.Messages.IMessageItem,System.Boolean,System.Boolean)">
            <summary>
            投递消息
            </summary>
            <param name="message">消息</param>
            <param name="defPoster">服务未注册时，是否使用缺省投递器</param>
            <param name="autoOffline">是否自动离线</param>
            <returns>返回值,如果未进行离线交换message返回为空,此时请检查state</returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessagePoster.Publish``1(System.String,System.String,``0)">
            <summary>
            生产消息
            </summary>
            <param name="topic">消息分类</param>
            <param name="title">消息标题</param>
            <param name="content">消息内容</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessagePoster.Publish(System.String,System.String,System.String)">
            <summary>
            生产消息
            </summary>
            <param name="topic">消息分类</param>
            <param name="title">消息标题</param>
            <param name="content">消息内容</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessagePoster.PublishAsync``1(System.String,System.String,``0)">
            <summary>
            生产消息
            </summary>
            <param name="topic">消息分类</param>
            <param name="title">消息标题</param>
            <param name="content">消息内容</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessagePoster.PublishAsync(System.String,System.String,System.String)">
            <summary>
            生产消息
            </summary>
            <param name="topic">消息分类</param>
            <param name="title">消息标题</param>
            <param name="content">消息内容</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessagePoster.Call``2(System.String,System.String,``0)">
            <summary>
            远程调用
            </summary>
            <param name="service">服务名称</param>
            <param name="api">接口名称</param>
            <param name="args">接口参数</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessagePoster.Call``1(System.String,System.String,``0)">
            <summary>
            远程调用
            </summary>
            <param name="service">服务名称</param>
            <param name="api">接口名称</param>
            <param name="args">接口参数</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessagePoster.Call``1(System.String,System.String)">
            <summary>
            远程调用
            </summary>
            <param name="service">服务名称</param>
            <param name="api">接口名称</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessagePoster.Call(System.String,System.String,System.String)">
            <summary>
            远程调用
            </summary>
            <param name="service">服务名称</param>
            <param name="api">接口名称</param>
            <param name="args">接口参数</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessagePoster.CallAsync``2(System.String,System.String,``0)">
            <summary>
            远程调用
            </summary>
            <param name="service">服务名称</param>
            <param name="api">接口名称</param>
            <param name="args">接口参数</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessagePoster.CallAsync``1(System.String,System.String,``0)">
            <summary>
            远程调用
            </summary>
            <param name="service">服务名称</param>
            <param name="api">接口名称</param>
            <param name="args">接口参数</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessagePoster.CallAsync``1(System.String,System.String)">
            <summary>
            远程调用
            </summary>
            <param name="service">服务名称</param>
            <param name="api">接口名称</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessagePoster.CallAsync(System.String,System.String,System.String)">
            <summary>
            远程调用
            </summary>
            <param name="service">服务名称</param>
            <param name="api">接口名称</param>
            <param name="args">接口参数</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessagePoster.CallApi``1(System.String,System.String,``0)">
            <summary>
            远程调用
            </summary>
            <param name="service">服务名称</param>
            <param name="api">接口名称</param>
            <param name="args">接口参数</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessagePoster.CallApiAsync``1(System.String,System.String)">
            <summary>
            远程调用
            </summary>
            <param name="service">服务名称</param>
            <param name="api">接口名称</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessagePoster.CallApiAsync``1(System.String,System.String,``0)">
            <summary>
            远程调用
            </summary>
            <param name="service">服务名称</param>
            <param name="api">接口名称</param>
            <param name="args">接口参数</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessagePoster.CallApiAsync(System.String,System.String,System.String)">
            <summary>
            远程调用
            </summary>
            <param name="service">服务名称</param>
            <param name="api">接口名称</param>
            <param name="args">接口参数</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessagePoster.CallApiAsync(System.String,System.String)">
            <summary>
            远程调用
            </summary>
            <param name="service">服务名称</param>
            <param name="api">接口名称</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessagePoster.CallApiAsync``1(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            远程调用
            </summary>
            <param name="service">服务名称</param>
            <param name="api">接口名称</param>
            <param name="args">接口参数</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessagePoster.CallApiAsync``1(System.String,System.String,System.ValueTuple{System.String,System.Object}[])">
            <summary>
            远程调用
            </summary>
            <param name="service">服务名称</param>
            <param name="api">接口名称</param>
            <param name="args">接口参数</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessagePoster.CallApiAsync``1(System.String,System.String,System.String)">
            <summary>
            远程调用
            </summary>
            <param name="service">服务名称</param>
            <param name="api">接口名称</param>
            <param name="args">接口参数</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessagePoster.CallApi``1(System.String,System.String,System.String)">
            <summary>
            远程调用
            </summary>
            <param name="service">服务名称</param>
            <param name="api">接口名称</param>
            <param name="args">接口参数</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessagePoster.CallApi``1(System.String,System.String)">
            <summary>
            远程调用
            </summary>
            <param name="service">服务名称</param>
            <param name="api">接口名称</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessagePoster.CallApi``2(System.String,System.String,``0)">
            <summary>
            远程调用
            </summary>
            <param name="service">服务名称</param>
            <param name="api">接口名称</param>
            <param name="args">接口参数</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessagePoster.CallApiAsync``2(System.String,System.String,``0)">
            <summary>
            远程调用
            </summary>
            <param name="service">服务名称</param>
            <param name="api">接口名称</param>
            <param name="args">接口参数</param>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.MessagePostOption">
            <summary>
            消息发送器的配置
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.MessagePostOption.LocalTunnel">
            <summary>
            启用本地隧道（即本地接收器存在的话，本地处理）
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.MessagePostOption.DefaultPosterName">
            <summary>
            默认的生产者
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.MessagePostOption.PosterServices">
            <summary>
            生产者与服务关联
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.MessagePostOption.DefaultPoster">
            <summary>
            默认的生产者
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.MessagePostOption.ServiceMap">
            <summary>
            服务查找表
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.MessagePostOption.posters">
            <summary>
            服务查找表
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.MessagePostOption.Instance">
            <summary>
            实例
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.MessagePostOption.ZeroTeam#MessageMVC#IZeroOption#SupperUrl">
            <summary>
            支持地址
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.MessagePostOption.ZeroTeam#MessageMVC#IZeroOption#OptionName">
            <summary>
            配置名称
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.MessagePostOption.ZeroTeam#MessageMVC#IZeroOption#SectionName">
            <summary>
            节点名称
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.MessagePostOption.ZeroTeam#MessageMVC#IZeroOption#IsDynamic">
            <summary>
            是否动态配置
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessagePostOption.BindingPoster(System.String,ZeroTeam.MessageMVC.Messages.IMessagePoster,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
                手动注销
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessagePostOption.UnRegistPoster(System.String)">
            <summary>
                手动注销
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessagePostOption.RegistPoster``1(System.String[])">
            <summary>
                手动注册
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessagePostOption.RegistPoster(ZeroTeam.MessageMVC.Messages.IMessagePoster,System.String[])">
            <summary>
                手动注册
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessagePostOption.GetService(System.String,System.Boolean)">
            <summary>
            发现传输对象
            </summary>
            <param name="service">服务名称</param>
            <param name="def">是否使用默认投递器</param>
            <returns>传输对象构造器</returns>
        </member>
        <member name="T:Agebull.EntityModel.Common.DataRuleAttribute">
            <summary>
            数据规则(仅用于文档生成)
            </summary>
        </member>
        <member name="P:Agebull.EntityModel.Common.DataRuleAttribute.CanNull">
            <summary>
            能否为空
            </summary>
        </member>
        <member name="P:Agebull.EntityModel.Common.DataRuleAttribute.Regex">
            <summary>
            正则校验(文本)
            </summary>
        </member>
        <member name="P:Agebull.EntityModel.Common.DataRuleAttribute.Min">
            <summary>
            最小(包含的数值或文本长度)
            </summary>
        </member>
        <member name="P:Agebull.EntityModel.Common.DataRuleAttribute.Max">
            <summary>
            最大(包含的数值或文本长度)
            </summary>
        </member>
        <member name="T:Newtonsoft.Json.JsonEnumConverter">
            <summary>
                枚举序列化器
            </summary>
        </member>
        <member name="P:Newtonsoft.Json.JsonEnumConverter.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Newtonsoft.Json.JsonEnumConverter.CanWrite">
            <inheritdoc />
        </member>
        <member name="M:Newtonsoft.Json.JsonEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc />
        </member>
        <member name="M:Newtonsoft.Json.JsonEnumConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc />
        </member>
        <member name="M:Newtonsoft.Json.JsonEnumConverter.CanConvert(System.Type)">
            <inheritdoc />
        </member>
        <member name="T:Newtonsoft.Json.JsonNumberConverter">
            <summary>
                大数字序列化器
            </summary>
        </member>
        <member name="P:Newtonsoft.Json.JsonNumberConverter.CanRead">
            <inheritdoc />
        </member>
        <member name="M:Newtonsoft.Json.JsonNumberConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc />
        </member>
        <member name="M:Newtonsoft.Json.JsonNumberConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc />
        </member>
        <member name="M:Newtonsoft.Json.JsonNumberConverter.CanConvert(System.Type)">
            <inheritdoc />
        </member>
    </members>
</doc>
