<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ZeroTeam.MessageMVC.Abstractions</name>
    </assembly>
    <members>
        <member name="T:ZeroTeam.MessageMVC.AddIn.IAutoRegister">
            <summary>
            生自注册对象
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.AddIn.IAutoRegister.AutoRegist(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            执行自动注册
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.AddIn.IAutoRegister.Initialize">
            <summary>
            初始化
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper">
            <summary>API返回基类</summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.helper">
            <summary>
            ApiResult的抽象
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.Helper">
            <summary>
            ApiResult的抽象
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.SucceesJson">
            <summary>成功的Json字符串</summary>
            <remarks>成功</remarks>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.NoFindJson">
            <summary>页面不存在的Json字符串</summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.NotSupportJson">
            <summary>系统不支持的Json字符串</summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.ArgumentErrorJson">
            <summary>参数错误字符串</summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.BusinessErrorJson">
            <summary>逻辑错误字符串</summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.DenyAccessJson">
            <summary>拒绝访问的Json字符串</summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.NetworkErrorJson">
            <summary>服务器访问异常</summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.BusinessExceptionJson">
            <summary>本地访问异常的Json字符串</summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.NoReadyJson">
            <summary>系统未就绪的Json字符串</summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.PauseJson">
            <summary>暂停服务的Json字符串</summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.UnknowErrorJson">
            <summary>未知错误的Json字符串</summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.TimeOutJson">
            <summary>网络超时的Json字符串</summary>
            <remarks>调用其它Api时时抛出未处理异常</remarks>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.ExecTimeOut">
            <summary>执行超时</summary>
            <remarks>Api执行超时</remarks>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.InnerErrorJson">
            <summary>内部错误的Json字符串</summary>
            <remarks>执行方法时抛出未处理异常</remarks>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.UnavailableJson">
            <summary>服务不可用的Json字符串</summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.Succees">
            <summary>
                生成一个成功的标准返回
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.Error(System.Int32)">
            <summary>
                生成一个包含错误码的标准返回
            </summary>
            <param name="errCode">错误码</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.Error(System.Int32,System.String)">
            <summary>
                生成一个包含错误码的标准返回
            </summary>
            <param name="errCode">错误码</param>
            <param name="message">错误消息</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.Error(System.Int32,System.String,System.String)">
            <summary>
                生成一个包含错误码的标准返回
            </summary>
            <param name="errCode">错误码</param>
            <param name="message">错误消息</param>
            <param name="innerMessage">内部说明</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.Error(System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
                生成一个包含错误码的标准返回
            </summary>
            <param name="errCode">错误码</param>
            <param name="message">错误消息</param>
            <param name="innerMessage">内部说明</param>
            <param name="guide">错误指导</param>
            <param name="describe">错误解释</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.Error(System.Int32,System.String,System.String,System.String,System.String,System.String)">
            <summary>
                生成一个包含错误码的标准返回
            </summary>
            <param name="errCode">错误码</param>
            <param name="message">错误消息</param>
            <param name="innerMessage">内部说明</param>
            <param name="point">错误点</param>
            <param name="guide">错误指导</param>
            <param name="describe">错误解释</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.Succees``1(``0)">
            <summary>
                生成一个成功的标准返回
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.Error``1(System.Int32)">
            <summary>
                生成一个包含错误码的标准返回
            </summary>
            <param name="errCode">错误码</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.Error``1(System.Int32,System.String)">
            <summary>
                生成一个包含错误码的标准返回
            </summary>
            <param name="errCode">错误码</param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.Error``1(System.Int32,System.String,System.String)">
            <summary>
                生成一个包含错误码的标准返回
            </summary>
            <param name="errCode">错误码</param>
            <param name="message">错误消息</param>
            <param name="innerMessage">内部说明</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.Error``1(System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
                生成一个包含错误码的标准返回
            </summary>
            <param name="errCode">错误码</param>
            <param name="message">错误消息</param>
            <param name="innerMessage">内部说明</param>
            <param name="guide">错误指导</param>
            <param name="describe">错误解释</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.Error``1(System.Int32,System.String,System.String,System.String,System.String,System.String)">
            <summary>
                生成一个包含错误码的标准返回
            </summary>
            <param name="errCode">错误码</param>
            <param name="message">错误消息</param>
            <param name="innerMessage">内部说明</param>
            <param name="point">错误点</param>
            <param name="guide">错误指导</param>
            <param name="describe">错误解释</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.FromContext``1">
            <summary>
                取出上下文中的返回
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiResultHelper.FromContext">
            <summary>
                取出上下文中的返回
            </summary>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.DefaultErrorCode">
            <summary>
                系统错误代码
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.DefaultErrorCode.Success">
            <summary>
                正确
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.DefaultErrorCode.ArgumentError">
            <summary>
                参数错误
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.DefaultErrorCode.BusinessError">
            <summary>
                发生处理业务错误
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.DefaultErrorCode.BusinessException">
            <summary>
                发生未处理业务异常
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.DefaultErrorCode.UnhandleException">
            <summary>
                发生未处理系统异常
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.DefaultErrorCode.NetworkError">
            <summary>
                网络错误
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.DefaultErrorCode.TimeOut">
            <summary>
                执行超时
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.DefaultErrorCode.DenyAccess">
            <summary>
                拒绝访问
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.DefaultErrorCode.TokenUnknow">
            <summary>
                未知的Token
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.DefaultErrorCode.TokenTimeOut">
            <summary>
                令牌过期
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.DefaultErrorCode.NoReady">
            <summary>
                系统未就绪
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.DefaultErrorCode.Ignore">
            <summary>
                客户端应中止请求
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.DefaultErrorCode.ReTry">
            <summary>
                客户端应重新请求
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.DefaultErrorCode.NoFind">
            <summary>
                方法不存在
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.DefaultErrorCode.Unavailable">
            <summary>
                服务不可用
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.DefaultErrorCode.GetMessage(System.Int32)">
            <summary>
                取得错误码对应的消息文本
            </summary>
            <param name="eid">错误码</param>
            <returns>消息文本</returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.IApiAction">
            <summary>
                Api方法
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiAction.Access">
            <summary>
                访问控制
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiAction.Name">
            <summary>
                Api名称
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiAction.IsApiContract">
            <summary>
                是合符合API契约规定
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiAction.ArgumentType">
            <summary>
                参数类型
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiAction.ArgumentIsBaseValue">
            <summary>
                基本数据,即按参数名称取值
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiAction.ArgumentName">
            <summary>
                参数名称
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiAction.ArgumentSerializer">
            <summary>
                参数反序列化对象
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiAction.ArgumentSerializeType">
            <summary>
            反序列化类型
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.IApiAction.RestoreArgument(ZeroTeam.MessageMVC.Messages.IInlineMessage)">
            <summary>
                还原参数
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.IApiAction.ValidateArgument(ZeroTeam.MessageMVC.Messages.IInlineMessage,System.String@)">
            <summary>
                参数校验
            </summary>
            <param name="message"></param>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiAction.ResultSerializeType">
            <summary>
            反序列化类型
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiAction.ResultSerializer">
            <summary>
                返回值序列化对象
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiAction.ResultType">
            <summary>
                参数类型
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.IApiAction.Execute(ZeroTeam.MessageMVC.Messages.IInlineMessage,ZeroTeam.MessageMVC.Messages.ISerializeProxy)">
            <summary>
                执行
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.IApiAction.Initialize">
            <summary>
            初始化检查
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.IApiArgument">
            <summary>
                表示API请求参数
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.IApiArgument.Validate(System.String@)">
            <summary>
                数据校验
            </summary>
            <param name="message">返回的消息</param>
            <returns>成功则返回真</returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.IApiControler">
            <summary>
            ZeroApi控制器基类
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.IApiResult">
            <summary>
                API返回基类
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiResult.Trace">
             <summary>
            跟踪对象
             </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.IApiResult`1">
            <summary>
                API返回基类
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiResult`1.ResultData">
            <summary>
                返回值
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper">
            <summary>
            ApiResult的虚拟化
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.Serialize``1(``0)">
            <summary>
            序列化
            </summary>
            <typeparam name="T"></typeparam>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.Deserialize(System.String)">
            <summary>
            反序列化
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.Deserialize``1(System.String)">
            <summary>
            反序列化
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.DeserializeInterface``1(System.String)">
            <summary>
            反序列化
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.Succees">
            <summary>生成一个成功的标准返回</summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.Error(System.Int32)">
            <summary>生成一个包含错误码的标准返回</summary>
            <param name="errCode">错误码</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.Error(System.Int32,System.String)">
            <summary>生成一个包含错误码的标准返回</summary>
            <param name="errCode">错误码</param>
            <param name="message">错误消息</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.Error(System.Int32,System.String,System.String)">
            <summary>生成一个包含错误码的标准返回</summary>
            <param name="errCode">错误码</param>
            <param name="message">错误消息</param>
            <param name="innerMessage">内部说明</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.Error(System.Int32,System.String,System.String,System.String,System.String)">
            <summary>生成一个包含错误码的标准返回</summary>
            <param name="errCode">错误码</param>
            <param name="message">错误消息</param>
            <param name="innerMessage">内部说明</param>
            <param name="guide">错误指导</param>
            <param name="describe">错误解释</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.Error(System.Int32,System.String,System.String,System.String,System.String,System.String)">
            <summary>生成一个包含错误码的标准返回</summary>
            <param name="errCode">错误码</param>
            <param name="message">错误消息</param>
            <param name="innerMessage">内部说明</param>
            <param name="point">错误点</param>
            <param name="guide">错误指导</param>
            <param name="describe">错误解释</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.Succees``1(``0)">
            <summary>生成一个成功的标准返回</summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.Error``1(System.Int32)">
            <summary>生成一个包含错误码的标准返回</summary>
            <param name="errCode">错误码</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.Error``1(System.Int32,System.String)">
            <summary>生成一个包含错误码的标准返回</summary>
            <param name="errCode">错误码</param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.Error``1(System.Int32,System.String,System.String)">
            <summary>生成一个包含错误码的标准返回</summary>
            <param name="errCode">错误码</param>
            <param name="message">错误消息</param>
            <param name="innerMessage">内部说明</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.Error``1(System.Int32,System.String,System.String,System.String,System.String)">
            <summary>生成一个包含错误码的标准返回</summary>
            <param name="errCode">错误码</param>
            <param name="message">错误消息</param>
            <param name="innerMessage">内部说明</param>
            <param name="guide">错误指导</param>
            <param name="describe">错误解释</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.Error``1(System.Int32,System.String,System.String,System.String,System.String,System.String)">
            <summary>生成一个包含错误码的标准返回</summary>
            <param name="errCode">错误码</param>
            <param name="message">错误消息</param>
            <param name="innerMessage">内部说明</param>
            <param name="point">错误点</param>
            <param name="guide">错误指导</param>
            <param name="describe">错误解释</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.Error">
            <summary>生成一个成功的标准返回</summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.Error``1">
            <summary>生成一个成功的标准返回</summary>
            <returns></returns>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.Ok">
            <summary>成功</summary>
            <remarks>成功</remarks>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.NoFind">
            <summary>页面不存在</summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.NotSupport">
            <summary>不支持的操作</summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.ArgumentError">
            <summary>参数错误</summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.DenyAccess">
            <summary>拒绝访问</summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.BusinessException">
            <summary>
            服务异常
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.UnhandleException">
            <summary>
            系统异常
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.NoReady">
            <summary>系统未就绪</summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.Pause">
            <summary>暂停服务</summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.BusinessError">
            <summary>业务错误</summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.NetworkError">
            <summary>网络异常</summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.NetTimeOut">
            <summary>网络超时</summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.ExecTimeOut">
            <summary>Api执行超时</summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IApiResultHelper.Unavailable">
            <summary>服务不可用</summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.IOperatorStatus">
            <summary>
                操作状态
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IOperatorStatus.Exception">
            <summary>
             异常
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IOperatorStatus.Success">
            <summary>
                成功或失败标记
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IOperatorStatus.Code">
            <summary>
                错误码（系统定义）
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IOperatorStatus.Message">
            <summary>
             信息
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.IOperatorTrace">
            <summary>
                API接口跟踪
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IOperatorTrace.RequestId">
            <summary>
                API请求标识
            </summary>
            <example>AxV6389FC</example>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IOperatorTrace.Point">
            <summary>
                错误点
            </summary>
            <remarks>
            系统在哪一个节点发生错误的标识
            </remarks>
            <example>http-gateway</example>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IOperatorTrace.Guide">
            <summary>
                指导码
            </summary>
            <remarks>
            内部使用:指示下一步应如何处理的代码
            </remarks>
            <example>retry</example>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.IOperatorTrace.Describe">
            <summary>
                错误说明
            </summary>
            <remarks>
            内部使用:详细说明错误内容
            </remarks>
            <example>系统未就绪</example>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.ApiAccessOption">
            <summary>
                API访问配置
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.ApiAccessOption.None">
            <summary>
                不可访问
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.ApiAccessOption.Public">
            <summary>
                公开访问(网关入口)
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.ApiAccessOption.Internal">
            <summary>
                内部访问(内部Poster)
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.ApiAccessOption.Anymouse">
            <summary>
                匿名访问
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.ApiAccessOption.Authority">
            <summary>
                需要身份验证
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.ApiAccessOption.ArgumentCanNil">
            <summary>
                参数可以为null
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.ApiAccessOption.DictionaryArgument">
            <summary>
                参数仅为定义,内部进行通过字典读取
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.ApiAccessOption.OpenAccess">
            <summary>
            开放访问,即公开且匿名访问
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.ApiAccessOption.UserAccess">
            <summary>
            用户访问,即公开且需要身份验证
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.ApiAccessOption.ArgumentIsDefault">
            <summary>
                参数仅为定义,内部进行通过字典读取
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.ApiAccessOptionFilterAttribute">
            <summary>
            API配置过滤器
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiAccessOptionFilterAttribute.#ctor(ZeroTeam.MessageMVC.ZeroApis.ApiAccessOption)">
            <summary>
            构造
            </summary>
            <param name="option"></param>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiAccessOptionFilterAttribute.Option">
            <summary>
            配置
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.ApiPageAttribute">
            <summary>
            API对应页面的特性
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiPageAttribute.#ctor(System.String)">
            <summary>
            构造
            </summary>
            <param name="pageUrl">页面</param>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiPageAttribute.PageUrl">
            <summary>
            页面
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.ConsumerAttribute">
            <summary>
            表示一个消息队列消费者
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ConsumerAttribute.#ctor(System.String)">
            <summary>
            构造
            </summary>
            <param name="topic"></param>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ConsumerAttribute.Topic">
            <summary>
            消息节点
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.NetEventAttribute">
            <summary>
            表示一个分布式事件处理服务
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.NetEventAttribute.#ctor(System.String)">
            <summary>
            构造
            </summary>
            <param name="event"></param>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.NetEventAttribute.Name">
            <summary>
            配置
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.RouteAttribute">
            <summary>
            路由名称
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.RouteAttribute.#ctor(System.String)">
            <summary>
            构造
            </summary>
            <param name="name"></param>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.RouteAttribute.Name">
            <summary>
            配置
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.RoutePrefixAttribute">
            <summary>
            路由名称
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.RoutePrefixAttribute.#ctor(System.String)">
            <summary>
            构造
            </summary>
            <param name="name"></param>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.RoutePrefixAttribute.Name">
            <summary>
            配置
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.ServiceAttribute">
            <summary>
            表明是一个服务控制器
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ServiceAttribute.#ctor(System.String)">
            <summary>
            构造
            </summary>
            <param name="name"></param>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ServiceAttribute.Name">
            <summary>
            配置
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.IReceiverDiscover">
            <summary>
            自定义消息接收对象发现
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.IReceiverDiscover.DiscoverNetTransport(System.Type,System.String@)">
            <summary>
            发现传输对象
            </summary>
            <param name="type">控制器类型</param>
            <param name="name">发现的服务名称</param>
            <returns>传输对象构造器</returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.StationState">
            <summary>
            站点状态
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.StationState.None">
            <summary>
            无，刚构造
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.StationState.CheckOption">
            <summary>
            配置错误
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.StationState.Failed">
            <summary>
            错误状态
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.StationState.Initialized">
            <summary>
            已初始化
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.StationState.Start">
            <summary>
            正在启动
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.StationState.BeginRun">
            <summary>
            开始运行
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.StationState.Run">
            <summary>
            正在运行
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.StationState.Pause">
            <summary>
            已暂停
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.StationState.Closing">
            <summary>
            将要关闭
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.StationState.Closed">
            <summary>
            已关闭
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.StationState.Destroy">
            <summary>
            已销毁，析构已调用
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.StationState.Text(System.Int32)">
            <summary>
            返回状态文本
            </summary>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.StationStateType">
            <summary>
            站点状态
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.StationStateType.None">
            <summary>
            无，刚构造
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.StationStateType.ConfigError">
            <summary>
            配置错误
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.StationStateType.Failed">
            <summary>
            错误状态
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.StationStateType.Initialized">
            <summary>
            已初始化
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.StationStateType.Run">
            <summary>
            正在运行
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.StationStateType.Closed">
            <summary>
            已关闭
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.StationStateType.Stop">
            <summary>
            已被关停
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.StationStateType.Remove">
            <summary>
            已被移除
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroAppConfig">
            <summary>
                本地站点配置
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroAppConfig.AppName">
            <summary>
                当前应用名称
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroAppConfig.IsOpenAccess">
            <summary>
                开放式访问
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroAppConfig.MaxWorkThreads">
            <summary>
              线程池最大工作线程数
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroAppConfig.MaxIOThreads">
            <summary>
              线程池最大IO线程数
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroAppConfig.IsolateFolder">
            <summary>
                站点数据使用AppName为文件夹
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroAppConfig.DataFolder">
            <summary>
                本地数据文件夹
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroAppConfig.ConfigFolder">
            <summary>
                本地配置文件夹
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroAppConfig.AddInPath">
            <summary>
                插件地址,如为空则与运行目录相同
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroAppConfig.EnableAddIn">
            <summary>
                启用插件自动加载
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroAppConfig.CopyByHase(ZeroTeam.MessageMVC.ZeroAppConfig)">
            <summary>
            如果目标配置存在,则复制之
            </summary>
            <param name="option"></param>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroAppConfig.CopyByEmpty(ZeroTeam.MessageMVC.ZeroAppConfig)">
            <summary>
            如果本配置内容为空则用目标配置补全
            </summary>
            <param name="option"></param>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroAppOption">
            <summary>
                本地站点配置
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroAppOption.AppVersion">
            <summary>
                当前应用版本号
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroAppOption.ServiceName">
            <summary>
                服务器名称
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroAppOption.TraceName">
            <summary>
                当前服务器的跟踪名称
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroAppOption.RootPath">
            <summary>
                应用所在的顶级目录
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroAppOption.BinPath">
            <summary>
                程序所在地址
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroAppOption.LocalIpAddress">
            <summary>
                本机IP地址
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroAppOption.IsLinux">
            <summary>
                是否在Linux黑环境下
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroAppOption.Instance">
            <summary>
            实例
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Context.ContextStatus">
            <summary>
            保存于上下文的状态
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.ContextStatus.IsManageMode">
            <summary>
                是否工作在管理模式下(数据全看模式)
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.ContextStatus.IsSystemMode">
            <summary>
                是否工作在系统模式下
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.ContextStatus.Feature">
            <summary>
                其它特性
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.ContextStatus.LastStatus">
            <summary>
                最后状态(当前时间)
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.ContextStatus.LastState">
            <summary>
                最后操作的操作状态
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Context.ContextStatus.AppendMessage(System.String)">
            <summary>
                加入消息
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Context.ContextStatus.ResetStatus">
            <summary>
                重置状态
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Context.ContextStatus.ClearMessage">
            <summary>
                清除消息
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.ContextStatus.LastMessage">
            <summary>
                最后一个的操作消息
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Context.GlobalContext">
            <summary>
                全局上下文
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.GlobalContext.Current">
            <summary>
                当前线程的调用上下文
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.GlobalContext.CurrentNoLazy">
            <summary>
                当前线程的调用上下文(无懒构造)
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Context.GlobalContext.SetContext(ZeroTeam.MessageMVC.Context.IZeroContext)">
            <summary>
                设置当前上下文（框架内调用，外部误用后果未知）
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Context.GlobalContext.Reset">
            <summary>
                内部构造
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Context.GlobalContext.SetEmpty">
            <summary>
                置空并销毁当前上下文
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.GlobalContext.User">
            <summary>
                当前线程的调用上下文
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.GlobalContext.Anymouse">
            <summary>
            表示一个匿名用户
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.GlobalContext.EnableLinkTrace">
            <summary>
                启用调用链跟踪,默认为AppOption中的设置, 可通过远程传递而扩散
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Context.GlobalContext.IsOptionEquals(System.String,System.String,System.StringComparison)">
            <summary>
            上下文配置指定名称是否配置为true
            </summary>
            <param name="name">配置名称</param>
            <param name="destValue">用于对比的目标值</param>
            <param name="comparison">文本比较方式(默认为忽略大小写)</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Context.GlobalContext.IsOptionTrue(System.String)">
            <summary>
            上下文配置指定名称是否配置为true
            </summary>
            <param name="name">配置名称</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Context.GlobalContext.GetOption(System.String)">
            <summary>
            取子网上下文配置指定名称的内容(不存在则为空)
            </summary>
            <param name="name">配置名称</param>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Context.IUser">
            <summary>
             用户信息
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.IUser.UserId">
            <summary>
               用户数字标识
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.IUser.UserCode">
            <summary>
                用户编码
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.IUser.NickName">
            <summary>
                用户昵称
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.IUser.OrganizationId">
            <summary>
                用户组织数字标识
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.IUser.OrganizationName">
            <summary>
                用户组织名称
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Context.UserInfo">
            <summary>
             用户信息
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Context.UserInfo.SystemUserId">
            <summary>
            系统用户标识
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Context.UserInfo.SystemOrganizationId">
            <summary>
            系统组织标识
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Context.UserInfo.UnknownUserId">
            <summary>
            未知用户标识
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Context.UserInfo.UnknownOrganizationId">
            <summary>
            未知组织标识
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.UserInfo.UserId">
            <summary>
                应用用户数字标识
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.UserInfo.UserCode">
            <summary>
                用户编码
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.UserInfo.NickName">
            <summary>
                用户昵称
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.UserInfo.OrganizationId">
            <summary>
                用户组织数字标识
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.UserInfo.OrganizationName">
            <summary>
                用户组织名称
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Context.IZeroContext">
            <summary>
                全局上下文
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.IZeroContext.User">
            <summary>
                当前调用的客户信息
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.IZeroContext.Trace">
            <summary>
                跟踪信息
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.IZeroContext.Status">
            <summary>
            全局状态
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.IZeroContext.Option">
            <summary>
            上下文配置
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.IZeroContext.Message">
            <summary>
            当前消息
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Context.TraceInfo">
            <summary>
            跟踪信息
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.TraceInfo.TraceId">
            <summary>
            全局请求标识（源头为用户请求）
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.TraceInfo.Start">
            <summary>
                开始时间
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.TraceInfo.End">
            <summary>
                结束时间
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.TraceInfo.LocalId">
            <summary>
            本地的全局标识
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.TraceInfo.LocalApp">
            <summary>
            本地的应用
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.TraceInfo.LocalMachine">
            <summary>
            本地的机器
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.TraceInfo.CallId">
            <summary>
            请求的全局标识(传递)
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.TraceInfo.CallApp">
            <summary>
            请求应用
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.TraceInfo.CallMachine">
            <summary>
            请求机器
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.TraceInfo.Context">
            <summary>
            上下文信息
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.TraceInfo.Token">
            <summary>
            身份令牌
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.TraceInfo.Headers">
            <summary>
                请求头信息
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Context.TraceInfo.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Context.TraceInfo.New(System.String)">
            <summary>
            构造
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Context.TraceInfo.CopyFromContext">
            <summary>
            复制上下文信息
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Context.ZeroContext">
            <summary>
                全局上下文
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Context.ZeroContext.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.ZeroContext.User">
            <summary>
                当前调用的客户信息
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.ZeroContext.Option">
            <summary>
            上下文配置
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.ZeroContext.Message">
            <summary>
            当前消息
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.ZeroContext.Trace">
            <summary>
                跟踪信息
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.ZeroContext.Status">
            <summary>
            全局状态
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Documents.AnnotationsConfig">
            <summary>
                自注释配置对象
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Documents.AnnotationsConfig._caption">
            <summary>
                标题
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Documents.AnnotationsConfig._description">
            <summary>
                说明
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Documents.AnnotationsConfig._name">
            <summary>
                名称
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.AnnotationsConfig.Name">
            <summary>
                名称
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.AnnotationsConfig.Caption">
            <summary>
                标题
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.AnnotationsConfig.Description">
            <summary>
                说明
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Documents.AnnotationsConfig.ToString">
            <summary>
                显示文本
            </summary>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Documents.ApiActionInfo">
            <summary>
                Api方法的信息
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Documents.ApiActionInfo.ArgumentType">
            <summary>
                参数类型
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Documents.ApiActionInfo.Arguments">
            <summary>
                参数类型
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Documents.ApiActionInfo.ResultType">
            <summary>是否有调用参数</summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Documents.ApiActionInfo.Controller">
            <summary>
                所在控制器类型
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Documents.ApiActionInfo.HaseArgument">
            <summary>
                是否有调用参数
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Documents.ApiActionInfo.IsAsync">
            <summary>
                是否异步任务
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Documents.ApiActionInfo.Action">
            <summary>有参方法</summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Documents.ApiActionInfo.ArgumentSerializeType">
            <summary>
            反序列化类型
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Documents.ApiActionInfo.ResultSerializeType">
            <summary>
            序列化类型
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Documents.ApiDocument">
            <summary>
                Api方法的信息
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Documents.ApiDocument.AccessOption">
            <summary>
                访问设置
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.ApiDocument.ArgumentName">
            <summary>
                参数名称
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Documents.ApiDocument.ArgumentInfo">
            <summary>
                参数说明
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Documents.ApiDocument.Category">
            <summary>
                分类
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Documents.ApiDocument.ResultInfo">
            <summary>
                返回值说明
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Documents.ApiDocument.ApiName">
            <summary>
                Api名称
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Documents.ApiDocument.PageUrl">
            <summary>
                承载页面
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Documents.DocumentItem">
            <summary>
                文档节点
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.DocumentItem.Seealso">
            <summary>
                参见
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.DocumentItem.Example">
            <summary>
                示例
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.DocumentItem.Value">
            <summary>
                值描述
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Documents.DocumentItem.Copy(ZeroTeam.MessageMVC.Documents.DocumentItem)">
            <summary>
                复制
            </summary>
            <param name="document"></param>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Documents.ObjectType">
            <summary>
                对象类型
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Documents.ObjectType.Base">
            <summary>
                基本类型
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Documents.ObjectType.Array">
            <summary>
                数组
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Documents.ObjectType.Dictionary">
            <summary>
                字典
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Documents.ObjectType.Object">
            <summary>
                对象
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Documents.ServiceDocument">
            <summary>
                Api方法的信息
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Documents.ServiceDocument.aips">
            <summary>
                Api方法
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.ServiceDocument.IsLocal">
            <summary>
                是否本地
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.ServiceDocument.Aips">
            <summary>
                Api方法
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Documents.ServiceInfo">
            <summary>
            站点信息
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.ServiceInfo.Type">
            <summary>
                类
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.ServiceInfo.NetBuilder">
            <summary>
            消息接收对象构造器
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.ServiceInfo.Serialize">
            <summary>
            序列化类型
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Documents.TypeDocument">
            <summary>
                Api结构的信息
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Documents.TypeDocument.ClassName">
            <summary>
                类型
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Documents.TypeDocument.fields">
            <summary>
                字段
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Documents.TypeDocument.IsEnum">
            <summary>
                枚举
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Documents.TypeDocument.JsonName">
            <summary>
                类型
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Documents.TypeDocument.ObjectType">
            <summary>
                类型
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Documents.TypeDocument.TypeName">
            <summary>
                类型
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.TypeDocument.CanNull">
            <summary>
                能否为空
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.TypeDocument.Regex">
            <summary>
                正则校验(文本)
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.TypeDocument.Min">
            <summary>
                最小(包含的数值或文本长度)
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.TypeDocument.Max">
            <summary>
                最大(包含的数值或文本长度)
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.TypeDocument.Fields">
            <summary>
                字段
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Documents.XmlMember">
            <summary>
                从程序集文档读取的注释信息
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Documents.XmlMember.HelpXml">
            <summary>
                读取的帮助XML
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Documents.XmlMember.Assemblies">
            <summary>
                读取的帮助XML
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.XmlMember.Type">
            <summary>
                类名
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.XmlMember.Returns">
            <summary>
                返回
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.XmlMember.XArguments">
            <summary>
                参数(XML对象)
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Documents.XmlMember.Arguments">
            <summary>
                参数字典
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Documents.XmlMember.Find(System.Type)">
            <summary>
                查找
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Documents.XmlMember.Find(System.Type,System.String,System.String)">
            <summary>
                查找
            </summary>
            <param name="type">类型</param>
            <param name="subType">注释类型 T 类型 P 属性 M 方法 F字段</param>
            <param name="sub">子级名称</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Documents.XmlMember.Find(System.String,System.String)">
            <summary>
                查找
            </summary>
            <param name="name">名称</param>
            <param name="type">注释类型 T 类型 P 属性 M 方法 F字段</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Documents.XmlMember.Find(System.String,System.String,System.String)">
            <summary>
                查找
            </summary>
            <param name="name">名称</param>
            <param name="type">注释类型 T 类型 P 属性 M 方法 F字段</param>
            <param name="sub">子级名称</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Documents.XmlMember.Load(System.Reflection.Assembly)">
            <summary>
                载入
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Documents.XmlMember.Load(System.String)">
            <summary>
                载入
            </summary>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.IFlowMiddleware">
            <summary>
            表示一个流程中间件
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.IFlowMiddleware.CheckOption(ZeroTeam.MessageMVC.ZeroAppOption)">
            <summary>
                配置校验
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.IFlowMiddleware.Initialize">
            <summary>
                初始化
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.IFlowMiddleware.Start">
            <summary>
            开启
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.IFlowMiddleware.Close">
            <summary>
            关闭
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.IFlowMiddleware.End">
            <summary>
            注销时调用
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Services.IService">
            <summary>
            站点连接池
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Services.IService.ServiceName">
            <summary>
            服务名称
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Services.IService.RealState">
            <summary>
                运行状态
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Services.IService.Serialize">
            <summary>
            序列化对象
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Services.IService.Receiver">
            <summary>
            消息接收对象
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Services.IService.ConfigState">
            <summary>
                配置状态
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Services.IService.IsAutoService">
            <summary>
            是否自动发现对象
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Services.IService.GetApiAction(System.String)">
            <summary>
             取得API信息
            </summary>
            <param name="api"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Services.IService.RegistAction(System.String,ZeroTeam.MessageMVC.Documents.ApiActionInfo)">
            <summary>
                注册方法
            </summary>
            <param name="name">方法外部方法名称，如 v1/auto/getdid </param>
            <param name="info">反射信息</param>
        </member>
        <member name="T:ZeroTeam.MessageMVC.IZeroMiddleware">
            <summary>
            表示一个应用中间件
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.IZeroMiddleware.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.IZeroMiddleware.Level">
            <summary>
            等级,用于确定中间件优先级
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.JsonHelper">
            <summary>
            Json序列化装饰器
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.JsonHelper.ToJson(System.Object,System.Boolean)">
            <summary>
            序列化
            </summary>
            <param name="t"></param>
            <param name="indented">是否格式化</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.JsonHelper.SerializeObject``1(``0)">
            <summary>
            序列化
            </summary>
            <typeparam name="T"></typeparam>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.JsonHelper.DeserializeObject``1(System.String)">
            <summary>
            反序列化
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.JsonHelper.TryDeserializeObject``1(System.String,``0@)">
            <summary>
            反序列化
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.JsonHelper.TryDeserializeObject``1(System.String)">
            <summary>
            反序列化
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.JsonHelper.DeserializeObject(System.String,System.Type)">
            <summary>
            反序列化
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.JsonHelper.ToJsonBytes``1(``0)">
            <summary>
            转为UTF8字节
            </summary>
            <param name="obj"></param>
            <returns>字节</returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.IInlineMessage">
            <summary>
            在线消息参数
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IInlineMessage.ServiceName">
            <summary>
            服务名称,即Topic
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IInlineMessage.ApiName">
            <summary>
            接口名称,即Title
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IInlineMessage.Argument">
            <summary>
            接口参数,即Content
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IInlineMessage.ArgumentData">
            <summary>
            实体参数
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IInlineMessage.Dictionary">
            <summary>
            字典参数
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IInlineMessage.ResultOutdated">
            <summary>
            返回值已过时
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IInlineMessage.IsInline">
            <summary>
            是否已在线
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IInlineMessage.ArgumentOutdated">
            <summary>
            是否已离线
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IInlineMessage.ResultData">
            <summary>
            返回值
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IInlineMessage.RuntimeStatus">
            <summary>
            执行状态
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IInlineMessage.Reset">
            <summary>
            重置
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IInlineMessage.CopyResult(ZeroTeam.MessageMVC.Messages.IInlineMessage)">
            <summary>
            重置
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IInlineMessage.GetResult(ZeroTeam.MessageMVC.Messages.ISerializeProxy)">
            <summary>
            取得返回值
            </summary>
            <param name="serialize"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IInlineMessage.GetResultData``1(ZeroTeam.MessageMVC.Messages.ISerializeProxy)">
            <summary>
            取得返回值
            </summary>
            <typeparam name="TRes"></typeparam>
            <param name="serialize"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IInlineMessage.PrepareOffline">
            <summary>
            准备离线(框架内调用)
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IInlineMessage.Offline(ZeroTeam.MessageMVC.Messages.ISerializeProxy)">
            <summary>
            转为离线序列化文本
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IInlineMessage.OfflineResult(ZeroTeam.MessageMVC.Messages.ISerializeProxy)">
            <summary>
            返回值转为离线序列化文本
            </summary>
            <returns></returns>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IInlineMessage.ResultSerializer">
            <summary>
                返回值序列化对象
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IInlineMessage.ResultCreater">
            <summary>
                返回值构造对象
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IInlineMessage.Inline(ZeroTeam.MessageMVC.Messages.ISerializeProxy,System.Type,ZeroTeam.MessageMVC.Messages.ISerializeProxy,System.Func{System.Int32,System.String,System.Object})">
            <summary>
            如果未上线且还原参数为字典,否则什么也不做
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IInlineMessage.GetArgument(System.Int32,System.Int32,ZeroTeam.MessageMVC.Messages.ISerializeProxy,System.Type)">
            <summary>
            取参数值
            </summary>
            <param name="scope">参数范围</param>
            <param name="serializeType">序列化类型</param>
            <param name="serialize">序列化器</param>
            <param name="type">序列化对象</param>
            <returns>值</returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IInlineMessage.GetStringArgument(System.String)">
            <summary>
            取参数值
            </summary>
            <param name="name">名称</param>
            <returns>值</returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IInlineMessage.GetBinaryArgument(System.String)">
            <summary>
            取参数值
            </summary>
            <param name="name">名称</param>
            <returns>值</returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IInlineMessage.GetValueArgument(System.String,System.Int32,System.Int32,ZeroTeam.MessageMVC.Messages.ISerializeProxy,System.Type)">
            <summary>
            取参数值(动态IL代码调用)  BUG
            </summary>
            <param name="name">名称</param>
            <param name="scope">参数范围</param>
            <param name="serializeType">序列化类型</param>
            <param name="serialize">序列化器</param>
            <param name="type">序列化对象</param>
            <returns>值</returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.IMessageItem">
            <summary>
            消息交互格式
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IMessageItem.ID">
            <summary>
            分类
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IMessageItem.Topic">
            <summary>
            分类
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IMessageItem.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IMessageItem.Content">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IMessageItem.Binary">
            <summary>
            其他二进制内容
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IMessageItem.Result">
            <summary>
            处理结果,对应状态的解释信息
            </summary>
            <remarks>
            未消费:无内容
            已接受:无内容
            格式错误 : 无内容
            无处理方法 : 无内容
            处理异常 : 异常信息
            处理失败 : 失败内容或原因
            处理成功 : 结果信息或无
            </remarks>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IMessageItem.State">
            <summary>
            处理状态
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IMessageItem.Trace">
            <summary>
                跟踪信息
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IMessageItem.ToInline">
            <summary>
            转为在线对象
            </summary>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.InlineMessage">
            <summary>
            消息交互格式
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.InlineMessage.Dictionary">
            <summary>
            字典参数
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.InlineMessage.ArgumentData">
            <summary>
            实体参数
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.InlineMessage.IsInline">
            <summary>
            是否已在线
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.InlineMessage.ArgumentOutdated">
            <summary>
            是否已离线
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.InlineMessage.ResultOutdated">
            <summary>
            返回值已过时
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.InlineMessage.ResultData">
            <summary>
            处理结果,对应状态的解释信息
            </summary>
            <remarks>
            未消费:无内容
            已接受:无内容
            格式错误 : 无内容
            无处理方法 : 无内容
            处理异常 : 异常信息
            处理失败 : 失败内容或原因
            处理成功 : 结果信息或无
            </remarks>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.InlineMessage.RuntimeStatus">
            <summary>
            执行状态
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.InlineMessage.ResultSerializer">
            <summary>
                返回值序列化对象
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.InlineMessage.ResultCreater">
            <summary>
                返回值构造对象
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.InlineMessage.ServiceName">
            <summary>
            服务名称,即Topic
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.InlineMessage.ApiName">
            <summary>
            接口名称,即Title
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.InlineMessage.Argument">
            <summary>
            接口参数,即Content
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.InlineMessage.GetArgument(System.Int32,System.Int32,ZeroTeam.MessageMVC.Messages.ISerializeProxy,System.Type)">
            <summary>
            取参数值
            </summary>
            <param name="scope">参数范围</param>
            <param name="serializeType">序列化类型</param>
            <param name="serialize">序列化器</param>
            <param name="type">序列化对象</param>
            <returns>值</returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.InlineMessage.GetValueArgument(System.String,System.Int32,System.Int32,ZeroTeam.MessageMVC.Messages.ISerializeProxy,System.Type)">
            <summary>
            取参数值(动态IL代码调用)  BUG
            </summary>
            <param name="name">名称</param>
            <param name="scope">参数范围</param>
            <param name="serializeType">序列化类型</param>
            <param name="serialize">序列化器</param>
            <param name="type">序列化对象</param>
            <returns>值</returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.MessageHelper">
            <summary>
            消息辅助类
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.MessageHelper.Simple(System.String,System.String,System.String,System.String)">
            <summary>
            简单消息
            </summary>
            <param name="id">跟踪标识</param>
            <param name="topic">消息分类</param>
            <param name="title">消息标题</param>
            <param name="content">消息内容</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.MessageHelper.Restore(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            恢复
            </summary>
            <param name="topic">消息分类</param>
            <param name="title">消息标题</param>
            <param name="content">消息内容</param>
            <param name="id">跟踪标识</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.MessageHelper.NewMessage``1(System.String,System.String,``0)">
            <summary>
            构造
            </summary>
            <param name="topic">消息分类</param>
            <param name="title">消息标题</param>
            <param name="content">消息内容</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.MessageHelper.NewMessage(System.String,System.String,System.String)">
            <summary>
            构造
            </summary>
            <param name="topic">消息分类</param>
            <param name="title">消息标题</param>
            <param name="content">消息内容</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.MessageHelper.NewRemote``1(System.String,System.String,``0)">
            <summary>
            构造一个远程调用的消息
            </summary>
            <param name="topic">消息分类</param>
            <param name="title">消息标题</param>
            <param name="content">消息内容</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.MessageHelper.NewRemote(System.String,System.String,System.String)">
            <summary>
            构造一个远程调用的消息
            </summary>
            <param name="topic">消息分类</param>
            <param name="title">消息标题</param>
            <param name="content">消息内容</param>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.MessageItem">
            <summary>
            消息交互格式
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.MessageItem.IsSucceed">
            <summary>
                是否正常
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.MessageItem.ID">
            <summary>
            消息标识
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.MessageItem.State">
            <summary>
            处理状态
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.MessageItem.Topic">
            <summary>
            分类
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.MessageItem.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.MessageItem.Content">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.MessageItem.Binary">
            <summary>
            其他二进制内容
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.MessageItem.Result">
            <summary>
            处理结果,对应状态的解释信息
            </summary>
            <remarks>
            未消费:无内容
            已接受:无内容
            格式错误 : 无内容
            无处理方法 : 无内容
            处理异常 : 异常信息
            处理失败 : 失败内容或原因
            处理成功 : 结果信息或无
            </remarks>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.MessageItem.Trace">
            <summary>
                跟踪信息
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.MessageState">
            <summary>
            表示消息状态
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageState.None">
            <summary>
            未消费
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageState.Cancel">
            <summary>
            取消处理
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageState.FormalError">
            <summary>
            格式错误
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageState.Accept">
            <summary>
            已接受
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageState.NetError">
            <summary>
            消息接收错误
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageState.Success">
            <summary>
            处理成功
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageState.NoSupper">
            <summary>
            不支持处理
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageState.Failed">
            <summary>
            处理失败
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageState.Error">
            <summary>
            处理错误
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.IMessageConsumer">
            <summary>
            表示一个消息队列消费对象
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.IMessagePoster">
            <summary>
            消息投递对象
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IMessagePoster.State">
            <summary>
            运行状态
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IMessagePoster.Initialize">
            <summary>
                初始化
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IMessagePoster.Post(ZeroTeam.MessageMVC.Messages.IMessageItem)">
            <summary>
            投递消息
            </summary>
            <param name="message">消息</param>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.IMessageReceiver">
            <summary>
            表示一个消息接收对象
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IMessageReceiver.Logger">
            <summary>
            日志记录器
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IMessageReceiver.Service">
            <summary>
            服务
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IMessageReceiver.End">
            <summary>
            关闭
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IMessageReceiver.Prepare">
            <summary>
            准备
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IMessageReceiver.Close">
            <summary>
            关闭
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IMessageReceiver.LoopBegin">
            <summary>
            开始轮询前的工作
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IMessageReceiver.Loop(System.Threading.CancellationToken)">
            <summary>
            轮询
            </summary>
            <returns>返回False表明需要重启</returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IMessageReceiver.LoopComplete">
            <summary>
            结束轮询前的工作
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IMessageReceiver.Commit">
            <summary>
            表示已成功接收 
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IMessageReceiver.OnResult(ZeroTeam.MessageMVC.Messages.IInlineMessage,System.Object)">
            <summary>
            发送返回值 
            </summary>
            <returns>发送是否成功</returns>
            <remarks>
            默认实现为保证OnCallEnd可控制且不再抛出异常,无特殊需要不应再次实现
            </remarks>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.INetEvent">
            <summary>
            表示一个分布式事件对象
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.IServiceTransfer">
            <summary>
            表示一个远程服务(RPC或HTTP)传输对象
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.MessagePostException">
            <summary>
            表示消息发送的异常,用于集中处理,也基于透明化消息发送过程的需要
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.MessagePostException.#ctor(System.String,System.Exception)">
            <summary>
            构造
            </summary>
            <param name="msg">消息</param>
            <param name="exception">原始异常</param>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.MessageReceiveException">
            <summary>
            表示消息接收的异常,用于集中处理,也基于透明化消息接收过程的需要
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.MessageReceiveException.#ctor(System.String,System.Exception)">
            <summary>
            构造
            </summary>
            <param name="msg">消息</param>
            <param name="exception">原始异常</param>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.MessageReceiverBase">
            <summary>
            消息接收对象基类
            </summary>
            <remarks>
            实现了IMessagePoster自注册,可以做到本进程调用不会提升到网络层面
            </remarks>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.MessageReceiverBase.Logger">
            <summary>
            日志记录器
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.MessageReceiverBase.Service">
            <summary>
            服务
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.MessageReceiverBase.State">
            <summary>
            运行状态
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.MessageReceiverBase.Initialize">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.MessageReceiverBase.Post(ZeroTeam.MessageMVC.Messages.IMessageItem)">
            <summary>
            生产消息
            </summary>
            <param name="message">消息</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.MessageReceiverBase.Serialize(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.MessageReceiverBase.Deserialize(System.Object,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.MessageReceiverBase.ToObject``1(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.MessageReceiverBase.ToObject(System.String,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.MessageReceiverBase.ToString(System.Object,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.IMessageMiddleware">
            <summary>
            消息处理中间件
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IMessageMiddleware.Level">
            <summary>
            层级
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IMessageMiddleware.Scope">
            <summary>
            消息中间件的处理范围
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.IMessageMiddleware.Processor">
            <summary>
            当前处理器
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IMessageMiddleware.Prepare(ZeroTeam.MessageMVC.Services.IService,ZeroTeam.MessageMVC.Messages.IInlineMessage,System.Object)">
            <summary>
            准备
            </summary>
            <param name="service">当前服务</param>
            <param name="message">当前消息</param>
            <param name="tag">扩展信息</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IMessageMiddleware.Handle(ZeroTeam.MessageMVC.Services.IService,ZeroTeam.MessageMVC.Messages.IInlineMessage,System.Object,System.Func{System.Threading.Tasks.Task})">
            <summary>
            处理消息
            </summary>
            <param name="service">当前服务</param>
            <param name="message">当前消息</param>
            <param name="tag">扩展信息</param>
            <param name="next">下一个处理方法</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IMessageMiddleware.OnGlobalException(ZeroTeam.MessageMVC.Services.IService,ZeroTeam.MessageMVC.Messages.IInlineMessage,System.Object)">
            <summary>
            全局异常发生时
            </summary>
            <param name="service">当前服务</param>
            <param name="message">当前消息</param>
            <param name="tag">扩展信息</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.IMessageMiddleware.OnEnd(ZeroTeam.MessageMVC.Messages.IInlineMessage)">
            <summary>
            处理结束时(结果交付Service后)
            </summary>
            <param name="message">当前消息</param>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.MessageHandleScope">
            <summary>
            消息的处理范围
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageHandleScope.None">
            <summary>
            什么也不处理
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageHandleScope.Prepare">
            <summary>
            准备
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageHandleScope.Handle">
            <summary>
            处理消息
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageHandleScope.Exception">
            <summary>
            处理全局异常
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageHandleScope.End">
            <summary>
            处理最终结果
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.MessageProcessor">
            <summary>
               消息处理器
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageProcessor.Service">
            <summary>
            当前站点
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageProcessor.Message">
            <summary>
            调用的内容
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageProcessor.Original">
            <summary>
            调用的原始内容
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageProcessor.DefaultOriginal">
            <summary>
            缺省原始内容,用于区别内部直连
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.MessageProcessor.OnMessagePush(ZeroTeam.MessageMVC.Services.IService,ZeroTeam.MessageMVC.Messages.IInlineMessage,System.Object)">
            <summary>
            消息处理(异步)
            </summary>
            <param name="service"></param>
            <param name="message"></param>
            <param name="original"></param>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageProcessor.middlewares">
            <summary>
            所有消息处理中间件
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.MessageProcessor.index">
            <summary>
            当前中间件序号
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.MessageProcessor.Prepare">
            <summary>
            准备处理
            </summary>
            <returns>是否需要正式处理</returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.MessageProcessor.DoHandle">
            <summary>
            中间件链式处理
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.MessageProcessor.Handle">
            <summary>
            中间件链式处理
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.MessageProcessor.PushResult">
            <summary>
            结果推到调用处
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.MessageProcessor.OnMessageError(System.Exception)">
            <summary>
            错误发生时处理
            </summary>
            <remarks>
            默认实现为保证OnCallEnd可控制且不再抛出异常,无特殊需要不应再次实现
            </remarks>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.MessageProcessor.OnEnd">
            <summary>
            数据发送结束
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.MessageBusinessException">
            <summary>
            表示消息业务处理过程的异常,用于集中处理,也基于透明化消息接收过程的需要
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.MessageBusinessException.#ctor(System.String,System.Exception)">
            <summary>
            构造
            </summary>
            <param name="msg">消息</param>
            <param name="exception">原始异常</param>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.CDataXmlSerializeProxy">
            <summary>
            Xml序列化装饰器
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.CDataXmlSerializeProxy.Serialize(System.Object)">
            <summary>
            序列化
            </summary>
            <param name="obj">对象</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.CDataXmlSerializeProxy.Deserialize(System.Object,System.Type)">
            <summary>
            反序列化
            </summary>
            <param name="obj">源内容(一般都是文本)</param>
            <param name="type">类型</param>
            <returns>结果对象，可能因为格式不良好而产生异常</returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.CDataXmlSerializeProxy.ToObject``1(System.String)">
            <summary>
            反序列化
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.CDataXmlSerializeProxy.ToObject(System.String,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.CDataXmlSerializeProxy.ToString(System.Object,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.IBsonSerializeProxy">
            <summary>
            Bson序列化装饰器
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.IJsonSerializeProxy">
            <summary>
            Json序列化装饰器
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.ISerializeProxy">
            <summary>
            表示一个序列化代理
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.ISerializeProxy.Serialize(System.Object)">
            <summary>
            序列化
            </summary>
            <param name="soruce">对象</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.ISerializeProxy.Deserialize(System.Object,System.Type)">
            <summary>
            反序列化
            </summary>
            <param name="soruce">文本</param>
            <param name="type">类型</param>
            <returns>结果对象，可能因为格式不良好而产生异常</returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.ISerializeProxy.TryDeserialize(System.Object,System.Type,System.Object@)">
            <summary>
            反序列化
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.ISerializeProxy.ToObject``1(System.String)">
            <summary>
            反序列化
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.ISerializeProxy.ToObject(System.String,System.Type)">
            <summary>
            反序列化
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.ISerializeProxy.ToString(System.Object,System.Boolean)">
            <summary>
            序列化
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.IXmlSerializeProxy">
            <summary>
            Xml序列化装饰器
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.JsonSerializeProxy">
            <summary>
            Json序列化装饰器
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.JsonSerializeProxy.Serialize(System.Object)">
            <summary>
            序列化
            </summary>
            <param name="obj">对象</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.JsonSerializeProxy.Deserialize(System.Object,System.Type)">
            <summary>
            反序列化
            </summary>
            <param name="soruce">源内容(一般都是文本)</param>
            <param name="type">类型</param>
            <returns>结果对象，可能因为格式不良好而产生异常</returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.JsonSerializeProxy.ToObject``1(System.String)">
            <summary>
            反序列化
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.JsonSerializeProxy.ToObject(System.String,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.JsonSerializeProxy.ToString(System.Object,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.NewtonJsonSerializeProxy">
            <summary>
            Json序列化装饰器
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.NewtonJsonSerializeProxy.Serialize(System.Object)">
            <summary>
            序列化
            </summary>
            <param name="obj">对象</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.NewtonJsonSerializeProxy.Deserialize(System.Object,System.Type)">
            <summary>
            反序列化
            </summary>
            <param name="soruce">源内容(一般都是文本)</param>
            <param name="type">类型</param>
            <returns>结果对象，可能因为格式不良好而产生异常</returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.NewtonJsonSerializeProxy.ToObject``1(System.String)">
            <summary>
            反序列化
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.NewtonJsonSerializeProxy.ToObject(System.String,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.NewtonJsonSerializeProxy.ToString(System.Object,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.SerializeProxy">
            <summary>
            值类型序列化代理
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.SerializeProxy.Convert">
            <summary>
            转换器
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.SerializeProxy.Serialize(System.Object)">
            <summary>
            序列化
            </summary>
            <param name="obj">源对象</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.SerializeProxy.Deserialize(System.Object,System.Type)">
            <summary>
            反序列化
            </summary>
            <param name="obj">源内容(一般都是文本)</param>
            <param name="type">类型</param>
            <returns>结果对象，可能因为格式不良好而产生异常</returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.SerializeProxy.ToObject``1(System.String)">
            <summary>
            反序列化
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.SerializeProxy.ToObject(System.String,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.SerializeProxy.ToString(System.Object,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.SerializeType">
            <summary>
            序列化类型
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.SerializeType.None">
            <summary>
            不需要
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.SerializeType.Json">
            <summary>
            JSON
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.SerializeType.NewtonJson">
            <summary>
            Newtonsoft的JSON
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.SerializeType.Xml">
            <summary>
            XML
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.SerializeType.Bson">
            <summary>
            gRPC的BSON
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.SerializeType.Custom">
            <summary>
            自定义
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.ArgumentScope">
            <summary>
            序列化类型
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.ArgumentScope.Content">
            <summary>
            内容
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.ArgumentScope.HttpArgument">
            <summary>
            HTTP的URL的参数
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Messages.ArgumentScope.HttpForm">
            <summary>
            HTTP的Form
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.ArgumentScopeAttribute">
            <summary>
            表示自自定义序列化
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.ArgumentScopeAttribute.Scope">
            <summary>
            类型
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.ArgumentScopeAttribute.#ctor(ZeroTeam.MessageMVC.Messages.ArgumentScope)">
            <summary>
            构造
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.SerializeTypeAttribute">
            <summary>
            表示自自定义序列化
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.SerializeTypeAttribute.Type">
            <summary>
            类型
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.SerializeTypeAttribute.#ctor(ZeroTeam.MessageMVC.Messages.SerializeType)">
            <summary>
            构造
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.ArgumentSerializeTypeAttribute">
            <summary>
            参数序列化
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.ArgumentSerializeTypeAttribute.Type">
            <summary>
            类型
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.ArgumentSerializeTypeAttribute.#ctor(ZeroTeam.MessageMVC.Messages.SerializeType)">
            <summary>
            构造
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.ResultSerializeTypeAttribute">
            <summary>
            返回值序列化
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Messages.ResultSerializeTypeAttribute.Type">
            <summary>
            类型
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.ResultSerializeTypeAttribute.#ctor(ZeroTeam.MessageMVC.Messages.SerializeType)">
            <summary>
            构造
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Messages.XmlSerializeProxy">
            <summary>
            Xml序列化装饰器
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.XmlSerializeProxy.Serialize(System.Object)">
            <summary>
            序列化
            </summary>
            <param name="obj">对象</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.XmlSerializeProxy.Deserialize(System.Object,System.Type)">
            <summary>
            反序列化
            </summary>
            <param name="obj">源内容(一般都是文本)</param>
            <param name="type">类型</param>
            <returns>结果对象，可能因为格式不良好而产生异常</returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.XmlSerializeProxy.ToObject``1(System.String)">
            <summary>
            反序列化
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.XmlSerializeProxy.ToObject(System.String,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Messages.XmlSerializeProxy.ToString(System.Object,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ZeroTeam.MessageMVC.MessagePoster">
            <summary>
            消息投递
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.MessagePoster.Default">
            <summary>
            默认的生产者
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessagePoster.ZeroTeam#MessageMVC#IFlowMiddleware#Initialize">
            <summary>
                初始化
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessagePoster.RegistPoster``1(System.String[])">
            <summary>
                手动注册
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessagePoster.RegistPoster(System.Object,System.String[])">
            <summary>
                手动注册
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessagePoster.GetService(System.String)">
            <summary>
            发现传输对象
            </summary>
            <param name="name">服务名称</param>
            <returns>传输对象构造器</returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessagePoster.Post(ZeroTeam.MessageMVC.Messages.IMessageItem)">
            <summary>
            投递消息
            </summary>
            <param name="item">消息</param>
            <returns>返回值</returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessagePoster.Publish``1(System.String,System.String,``0)">
            <summary>
            生产消息
            </summary>
            <param name="topic">消息分类</param>
            <param name="title">消息标题</param>
            <param name="content">消息内容</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessagePoster.Publish(System.String,System.String,System.String)">
            <summary>
            生产消息
            </summary>
            <param name="topic">消息分类</param>
            <param name="title">消息标题</param>
            <param name="content">消息内容</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessagePoster.PublishAsync``1(System.String,System.String,``0)">
            <summary>
            生产消息
            </summary>
            <param name="topic">消息分类</param>
            <param name="title">消息标题</param>
            <param name="content">消息内容</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessagePoster.PublishAsync(System.String,System.String,System.String)">
            <summary>
            生产消息
            </summary>
            <param name="topic">消息分类</param>
            <param name="title">消息标题</param>
            <param name="content">消息内容</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessagePoster.Call``2(System.String,System.String,``0)">
            <summary>
            远程调用
            </summary>
            <param name="service">服务名称</param>
            <param name="api">接口名称</param>
            <param name="args">接口参数</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessagePoster.Call``1(System.String,System.String,``0)">
            <summary>
            远程调用
            </summary>
            <param name="service">服务名称</param>
            <param name="api">接口名称</param>
            <param name="args">接口参数</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessagePoster.Call``1(System.String,System.String)">
            <summary>
            远程调用
            </summary>
            <param name="service">服务名称</param>
            <param name="api">接口名称</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessagePoster.Call(System.String,System.String,System.String)">
            <summary>
            远程调用
            </summary>
            <param name="service">服务名称</param>
            <param name="api">接口名称</param>
            <param name="args">接口参数</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessagePoster.CallAsync``2(System.String,System.String,``0)">
            <summary>
            远程调用
            </summary>
            <param name="service">服务名称</param>
            <param name="api">接口名称</param>
            <param name="args">接口参数</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessagePoster.CallAsync``1(System.String,System.String,``0)">
            <summary>
            远程调用
            </summary>
            <param name="service">服务名称</param>
            <param name="api">接口名称</param>
            <param name="args">接口参数</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessagePoster.CallAsync``1(System.String,System.String)">
            <summary>
            远程调用
            </summary>
            <param name="service">服务名称</param>
            <param name="api">接口名称</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.MessagePoster.CallAsync(System.String,System.String,System.String)">
            <summary>
            远程调用
            </summary>
            <param name="service">服务名称</param>
            <param name="api">接口名称</param>
            <param name="args">接口参数</param>
            <returns></returns>
        </member>
        <member name="T:Agebull.EntityModel.Common.DataRuleAttribute">
            <summary>
            数据规则(仅用于文档生成)
            </summary>
        </member>
        <member name="P:Agebull.EntityModel.Common.DataRuleAttribute.CanNull">
            <summary>
            能否为空
            </summary>
        </member>
        <member name="P:Agebull.EntityModel.Common.DataRuleAttribute.Regex">
            <summary>
            正则校验(文本)
            </summary>
        </member>
        <member name="P:Agebull.EntityModel.Common.DataRuleAttribute.Min">
            <summary>
            最小(包含的数值或文本长度)
            </summary>
        </member>
        <member name="P:Agebull.EntityModel.Common.DataRuleAttribute.Max">
            <summary>
            最大(包含的数值或文本长度)
            </summary>
        </member>
        <member name="T:Newtonsoft.Json.JsonEnumConverter">
            <summary>
                枚举序列化器
            </summary>
        </member>
        <member name="P:Newtonsoft.Json.JsonEnumConverter.CanRead">
            <inheritdoc />
        </member>
        <member name="M:Newtonsoft.Json.JsonEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc />
        </member>
        <member name="M:Newtonsoft.Json.JsonEnumConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc />
        </member>
        <member name="M:Newtonsoft.Json.JsonEnumConverter.CanConvert(System.Type)">
            <inheritdoc />
        </member>
        <member name="T:Newtonsoft.Json.JsonNumberConverter">
            <summary>
                大数字序列化器
            </summary>
        </member>
        <member name="P:Newtonsoft.Json.JsonNumberConverter.CanRead">
            <inheritdoc />
        </member>
        <member name="M:Newtonsoft.Json.JsonNumberConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc />
        </member>
        <member name="M:Newtonsoft.Json.JsonNumberConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc />
        </member>
        <member name="M:Newtonsoft.Json.JsonNumberConverter.CanConvert(System.Type)">
            <inheritdoc />
        </member>
    </members>
</doc>
