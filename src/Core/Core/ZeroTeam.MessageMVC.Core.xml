<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ZeroTeam.MessageMVC.Core</name>
    </assembly>
    <members>
        <member name="T:ZeroTeam.MessageMVC.AddIn.AddInImporter">
            <summary>
            MEF插件导入器
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.AddIn.AddInImporter.Import">
            <summary>
            插件对象
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.AddIn.AddInImporter.registers">
            <summary>
            所有自动注册对象
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.AddIn.AddInImporter.LoadAddIn(Microsoft.Extensions.Logging.ILogger)">
            <summary>
            载入插件
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.AddIn.AddInImporter.AutoRegist(Microsoft.Extensions.Logging.ILogger)">
            <summary>
            载入插件
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.AddIn.AddInImporter.LateConfigRegist(Microsoft.Extensions.Logging.ILogger)">
            <summary>
            载入插件
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.ApiAction">
            <summary>
                Api站点
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiAction.RouteName">
            <summary>
                Api路由名称
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiAction.IsApiContract">
            <summary>
                是合符合API契约规定
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiAction.Info">
            <summary>
            接口信息
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiAction.Option">
            <summary>
                访问控制
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiAction.NeedLogin">
            <summary>
                需要登录
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiAction.IsPublic">
            <summary>
                是否公开接口
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiAction.ResultType">
            <summary>
               返回值类型
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiAction.ResultSerializeType">
            <summary>
            反序列化类型
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiAction.ResultSerializer">
            <summary>
                返回值序列化对象
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiAction.ResultCreater">
            <summary>
                返回值构造对象
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiAction.ArgumentSerializeType">
            <summary>
            反序列化类型
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiAction.ArgumentScope">
            <summary>
            反序列化类型
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiAction.ArgumentSerializer">
            <summary>
                参数反序列化对象
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiAction.ArgumentName">
            <summary>
                参数名称
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiAction.ArgumentType">
            <summary>
                参数类型
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiAction.RestoreArgument(ZeroTeam.MessageMVC.Messages.IInlineMessage)">
            <summary>
                还原参数
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiAction.ValidateArgument(ZeroTeam.MessageMVC.Messages.IInlineMessage,ZeroTeam.MessageMVC.ZeroApis.IOperatorStatus@)">
            <summary>
                参数校验
            </summary>
            <param name="data"></param>
            <param name="status"></param>
            <returns></returns>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiAction.IsAsync">
            <summary>
                是否异步任务
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiAction.Function">
            <summary>
                执行行为
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiAction.Execute(ZeroTeam.MessageMVC.Messages.IInlineMessage,ZeroTeam.MessageMVC.Messages.ISerializeProxy)">
            <summary>
                执行
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiAction.Initialize">
            <summary>
            初始化
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.ApiDiscover">
            <summary>
            Controler发现工具,解析并生成服务对象及路由对象
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiDiscover.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiDiscover.Discover(System.Reflection.Assembly)">
            <summary>
            查找API
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiDiscover.Discover(System.Type)">
            <summary>
            查找API
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiDiscover.Assembly">
            <summary>
            主调用程序集
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.ApiDiscover.ServiceInfos">
            <summary>
            站点文档信息
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiDiscover.#cctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiDiscover.FindAppDomain">
            <summary>
                发现
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiDiscover.FindApies(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
            <summary>
                发现
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiDiscover.FindApies(System.Reflection.Assembly)">
            <summary>
            查找API
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiDiscover.FindApies">
            <summary>
            查找API
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiDiscover.FindApi(System.Type)">
            <summary>
            查找API
            </summary>
            <param name="type"></param>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.ApiMethodBuilder">
            <summary>
            接口方法生成器
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.ApiMethodBuilder.TypeInfo">
            <summary>
            调用对象类型
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.ApiMethodBuilder.ActionInfo">
            <summary>
            调用对象类型
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.ApiMethodBuilder.isAsync">
            <summary>
            此调用是否异步方法
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiMethodBuilder.CreateMethod">
            <summary>生成动态匿名调用内部方法（参数由TArg转为实际类型后调用，并将调用返回值转为TRes）</summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.ReceiverDiscover">
            <summary>
            默认消息接收对象发现
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ReceiverDiscover.DiscoverNetTransport(System.Type,System.String@)">
            <summary>
            发现传输对象
            </summary>
            <param name="type">控制器类型</param>
            <param name="name">发现的服务名称</param>
            <returns>传输对象构造器</returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.ApiExecuter">
            <summary>
                Api调用器
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiExecuter.ZeroTeam#MessageMVC#Messages#IMessageMiddleware#Level">
            <summary>
            层级
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiExecuter.ZeroTeam#MessageMVC#Messages#IMessageMiddleware#Scope">
            <summary>
            消息中间件的处理范围
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.ApiExecuter.Service">
            <summary>
            当前站点
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.ApiExecuter.Message">
            <summary>
            调用的内容
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.ApiExecuter.Tag">
            <summary>
            调用的内容
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiExecuter.ZeroTeam#MessageMVC#Messages#IMessageMiddleware#Prepare(ZeroTeam.MessageMVC.Services.IService,ZeroTeam.MessageMVC.Messages.IInlineMessage,System.Object)">
            <summary>
            准备
            </summary>
            <param name="service">当前服务</param>
            <param name="message">当前消息</param>
            <param name="tag">扩展信息</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiExecuter.ZeroTeam#MessageMVC#Messages#IMessageMiddleware#Handle(ZeroTeam.MessageMVC.Services.IService,ZeroTeam.MessageMVC.Messages.IInlineMessage,System.Object,System.Func{System.Threading.Tasks.Task})">
            <summary>
            处理
            </summary>
            <param name="service">当前服务</param>
            <param name="message">当前消息</param>
            <param name="tag"></param>
            <param name="next">下一个处理方法</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiExecuter.Handle">
            <summary>
            处理
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiExecuter.ArgumentPrepare(ZeroTeam.MessageMVC.ZeroApis.IApiAction)">
            <summary>
               参数校验
            </summary>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ConfigChecker">
            <summary>
            配置的全局对象
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ConfigChecker.CheckLast(ZeroTeam.MessageMVC.ZeroAppOption,Microsoft.Extensions.Logging.ILogger)">
            <summary>
                配置校验,作为第一步
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ConfigChecker.CheckBaseConfig">
            <summary>
                配置校验
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApp">
            <summary>
            应用扩展方法
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApp.UseMessageMVC(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})">
            <summary>
                配置使用MessageMVC
            </summary>
            <param name="builder">主机生成器</param>
            <param name="registAction">配置注册方法</param>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApp.UseMessageMVC(Microsoft.Extensions.Hosting.IHostBuilder,System.Boolean,System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})">
            <summary>
                配置使用MessageMVC
            </summary>
            <param name="builder">主机生成器</param>
            <param name="autoDiscove">是否自动发现API方法</param>
            <param name="registAction">配置注册方法</param>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApp.UseMessageMVC(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection},System.Action)">
            <summary>
                配置使用MessageMVC
            </summary>
            <param name="builder">主机生成器</param>
            <param name="registAction">配置注册方法</param>
            <param name="discovery">自定义API发现方法</param>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApp.UseMessageMVC(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection},System.Boolean,System.Action)">
            <summary>
                配置使用MessageMVC
            </summary>
            <param name="builder">主机生成器</param>
            <param name="registAction">配置注册方法</param>
            <param name="autoDiscovery">自动发现</param>
            <param name="discovery">自定义API发现方法</param>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApp.AddDependency(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            检查并注入配置
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApp.UseTest(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Reflection.Assembly)">
            <summary>
            启动主流程控制器，发现指定程序集的Api，适用于测试的场景
            </summary>
            <param name="services">依赖服务</param>
            <param name="assembly">需要发现服务的程序集</param>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroFlowControl">
            <summary>
                主流程控制器
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroFlowControl.WaiteAll(System.Collections.Generic.List{System.Threading.Tasks.Task})">
            <summary>
            等所有Task完成
            </summary>
            <param name="tasks"></param>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroFlowControl.LoadAddIn">
            <summary>
                插件载入,作为第零步
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroFlowControl.LoadConfig">
            <summary>
                配置校验,作为第一步
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroFlowControl.CheckConfig">
            <summary>
                配置校验,作为第一步
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroFlowControl.Discove(System.Reflection.Assembly)">
            <summary>
                发现
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroFlowControl.Discove">
            <summary>
                发现
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroFlowControl.Discove(System.Reflection.Assembly[])">
            <summary>
                发现
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroFlowControl.Initialize">
            <summary>
                初始化
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroFlowControl.RunAsync">
            <summary>
                运行
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroFlowControl.Shutdown">
            <summary>
                关闭
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroFlowControl.CloseAll">
            <summary>
                关闭
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroFlowControl.DestoryAll">
            <summary>
                注销
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroFlowControl.FlowServices">
            <summary>
            需要运行流程的服务
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroFlowControl.OnObjectActive(ZeroTeam.MessageMVC.Services.IService)">
            <summary>
                对象活动时登记
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroFlowControl.OnObjectFailed(ZeroTeam.MessageMVC.Services.IService)">
            <summary>
                对象关闭时登记
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroFlowControl.OnObjectClose(ZeroTeam.MessageMVC.Services.IService)">
            <summary>
                对象关闭时登记
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroFlowControl.WaitAllObjectSafeClose">
            <summary>
                等待所有对象信号(全开或全关)
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroFlowControl.DiscoverAll">
            <summary>
                发现
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroFlowControl.InitializeAll">
            <summary>
                初始化
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroFlowControl.OpenAll">
            <summary>
                系统启动时调用
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroFlowControl.StartFailed">
            <summary>
                重新启动未正常启动的项目
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroFlowControl.Services">
            <summary>
            已注册的对象
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroFlowControl.ActiveObjects">
            <summary>
            活动对象(执行中)
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroFlowControl.FailedObjects">
            <summary>
            活动对象(执行中)
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroFlowControl.ActiveSemaphore">
            <summary>
                对象活动状态记录器锁定
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroFlowControl.GetService(System.String)">
            <summary>
                取服务，内部使用
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroFlowControl.TryGetZeroObject(System.String)">
            <summary>
                取已注册对象
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroFlowControl.RegistService(ZeroTeam.MessageMVC.Services.IService)">
            <summary>
                注册服务
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroFlowControl.RegistService(ZeroTeam.MessageMVC.Services.IService@)">
            <summary>
                注册服务
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroHostedService">
            <summary>
            主机服务
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroHostedService.#ctor(Microsoft.Extensions.Logging.ILogger{ZeroTeam.MessageMVC.ZeroHostedService},Microsoft.Extensions.Hosting.IHostApplicationLifetime)">
            <summary>
            构造
            </summary>
            <param name="logger"></param>
            <param name="appLifetime"></param>
        </member>
        <member name="T:ZeroTeam.MessageMVC.EmptyReceiver">
            <summary>
               空接收器
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.EmptyReceiver.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.EmptyReceiver.ZeroTeam#MessageMVC#Messages#IMessageReceiver#PosterName">
            <summary>
            对应发送器名称
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.EmptyReceiver.ZeroTeam#MessageMVC#ILifeFlow#Closing">
            <summary>
            关闭
            </summary>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ParallelPoster">
            <summary>
                并行生产者
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ParallelPoster.logger">
            <summary>
            调用的内容
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ParallelPoster.ZeroTeam#MessageMVC#IZeroDependency#Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ParallelPoster.#ctor">
            <summary>
                初始化
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ParallelPoster.ZeroTeam#MessageMVC#Messages#IMessagePoster#Post(ZeroTeam.MessageMVC.Messages.IInlineMessage)">
            <summary>
            生产消息
            </summary>
            <param name="message">消息</param>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Context.UserInfo">
            <summary>
             用户信息
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Context.UserInfo.IsLoginUser(ZeroTeam.MessageMVC.Context.IUser)">
            <summary>
            是否一个有效用户
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Context.UserInfo.IsLogin">
            <summary>
            是否一个有效用户
            </summary>
            <returns></returns>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.UserInfo.UserId">
            <summary>
                应用用户数字标识
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.UserInfo.NickName">
            <summary>
                用户昵称
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.UserInfo.OrganizationId">
            <summary>
                用户组织数字标识
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.UserInfo.CurrentPermission">
            <summary>
                确定后的当前权限信息
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.UserInfo.Permissions">
            <summary>
                所有权限信息
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Context.UserInfo.claims">
            <summary>
            JWT信息字典
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.UserInfo.Claims">
            <summary>
            快捷读写字典
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Context.UserInfo.Item(System.String)">
            <summary>
            快捷读写字典
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Context.UserInfo.SetClaim(System.String,System.String)">
            <summary>
            设置节点名称
            </summary>
            <param name="type"></param>
            <param name="value"></param>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Context.UserInfo.ZeroTeam#MessageMVC#Context#IDictionaryTransfer#ToDictionary">
            <summary>
            转为可传输的对象
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Context.UserInfo.ZeroTeam#MessageMVC#Context#IDictionaryTransfer#Reset(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            转为可传输的对象
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Services.StateMachine.CloseStateMachine">
            <summary>
            监控状态机
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Services.StateMachine.CloseStateMachine.ZeroTeam#MessageMVC#Services#StateMachine#IStationStateMachine#Start">
            <summary>
                开始的处理
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Services.StateMachine.CloseStateMachine.ZeroTeam#MessageMVC#Services#StateMachine#IStationStateMachine#Closing">
            <summary>
                结束的处理
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Services.StateMachine.EmptyStateMachine">
            <summary>
            监控状态机
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Services.StateMachine.EmptyStateMachine.ZeroTeam#MessageMVC#Services#StateMachine#IStationStateMachine#Close">
            <summary>
                结束的处理
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Services.StateMachine.EmptyStateMachine.ZeroTeam#MessageMVC#Services#StateMachine#IStationStateMachine#End">
            <summary>
                结束的处理
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Services.StateMachine.FailedStateMachine">
            <summary>
            监控状态机
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Services.StateMachine.FailedStateMachine.ZeroTeam#MessageMVC#Services#StateMachine#IStationStateMachine#Start">
            <summary>
                开始的处理
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Services.StateMachine.IStationStateMachine">
            <summary>
            站点状态机
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Services.StateMachine.IStationStateMachine.Service">
            <summary>
            站点
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Services.StateMachine.IStationStateMachine.Control">
            <summary>
            站点
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Services.StateMachine.IStationStateMachine.IsDisposed">
            <summary>
            是否已析构
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Services.StateMachine.IStationStateMachine.Start">
            <summary>
                开始的处理
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Services.StateMachine.IStationStateMachine.Closing">
            <summary>
                关闭的处理
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Services.StateMachine.IStationStateMachine.Close">
            <summary>
                关闭的处理
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Services.StateMachine.IStationStateMachine.End">
            <summary>
                结束的处理
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Services.StateMachine.RunStateMachine">
            <summary>
            监控状态机
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Services.StateMachine.RunStateMachine.ZeroTeam#MessageMVC#Services#StateMachine#IStationStateMachine#Closing">
            <summary>
                关闭的处理
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Services.StateMachine.StartStateMachine">
            <summary>
            监控状态机
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Services.StateMachine.StartStateMachine.ZeroTeam#MessageMVC#Services#StateMachine#IStationStateMachine#Start">
            <summary>
                开始的处理
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Services.StateMachine.StateMachineBase">
            <summary>
            监控状态机
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Services.StateMachine.StateMachineBase.Service">
            <summary>
            站点
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Services.StateMachine.StateMachineBase.Control">
            <summary>
            站点
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Services.StateMachine.StateMachineBase.IsDisposed">
            <summary>
            是否已析构
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Services.EmptyService">
            <summary>
            一个服务
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Services.EmptyService.CanRun">
            <summary>
                是否可以运行的判断方法
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Services.EmptyService.ZeroTeam#MessageMVC#IZeroMiddleware#Level">
            <summary>
            等级,用于确定中间件优先级
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Services.EmptyService.ServiceName">
            <summary>
            站点名称
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Services.EmptyService.Receiver">
            <summary>
            消息接收对象
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Services.EmptyService.IsAutoService">
            <summary>
            是否自动发现对象
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Services.EmptyService.RealState">
            <summary>
                运行状态
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Services.EmptyService.ConfigState">
            <summary>
                配置状态
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Services.EmptyService.Serialize">
            <summary>
            序列化对象
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Services.EmptyService.WildcardAction">
            <summary>
            通配事件
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Services.EmptyService.ApiActions">
            <summary>
            注册的方法
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Services.EmptyService.GetApiAction(System.String)">
            <summary>
             取得API信息
            </summary>
            <param name="api"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Services.EmptyService.ZeroTeam#MessageMVC#Services#IService#RegistWildcardAction(ZeroTeam.MessageMVC.Documents.ApiActionInfo)">
            <summary>
                注册通配方法
            </summary>
            <param name="info">反射信息</param>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Services.EmptyService.ZeroTeam#MessageMVC#Services#IService#RegistAction(System.String,ZeroTeam.MessageMVC.Documents.ApiActionInfo)">
            <summary>
                注册方法
            </summary>
            <param name="route">方法外部方法名称，如 v1/auto/getdid </param>
            <param name="info">反射信息</param>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Services.ZeroService">
            <summary>
            一个服务
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Services.ZeroService.CanRun">
            <summary>
                是否可以运行的判断方法
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Services.ZeroService.ZeroTeam#MessageMVC#IZeroMiddleware#Level">
            <summary>
            等级,用于确定中间件优先级
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Services.ZeroService.ServiceName">
            <summary>
            站点名称
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Services.ZeroService.Receiver">
            <summary>
            消息接收对象
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Services.ZeroService.IsAutoService">
            <summary>
            是否自动发现对象
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Services.ZeroService._realState">
            <summary>
                运行状态
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Services.ZeroService.RealState">
            <summary>
                运行状态
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Services.ZeroService.StateMachine">
            <summary>
            状态机
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Services.ZeroService.ConfigState">
            <summary>
                配置状态
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Services.ZeroService.ResetStateMachine">
            <summary>
            重置状态机,请谨慎使用
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Services.ZeroService.CancelToken">
            <summary>
            取消标记
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Services.ZeroService.eventSlim">
            <summary>
            Run与Start互斥执行的事件对象
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Services.ZeroService.DoStart">
            <summary>
            开始
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Services.ZeroService.Run">
            <summary>
            命令轮询
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Services.ZeroService.LoopBegin">
            <summary>
            同步运行状态
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Services.ZeroService.LoopComplete">
            <summary>
            同步关闭状态
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Services.ZeroService.OnLoopIdle">
            <summary>
            空转
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Services.ZeroService.DoEnd">
            <summary>
            析构
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Services.ZeroService.ZeroTeam#MessageMVC#ILifeFlow#Destroy">
            <inheritdoc/>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Services.ZeroService.ZeroTeam#MessageMVC#IStateMachineControl#DoEnd">
            <summary>
            析构
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Services.ZeroService.Serialize">
            <summary>
            序列化对象
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Services.ZeroService.WildcardAction">
            <summary>
            通配事件
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Services.ZeroService.ApiActions">
            <summary>
            注册的方法
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Services.ZeroService.GetApiAction(System.String)">
            <summary>
             取得API信息
            </summary>
            <param name="api"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Services.ZeroService.ZeroTeam#MessageMVC#Services#IService#RegistWildcardAction(ZeroTeam.MessageMVC.Documents.ApiActionInfo)">
            <summary>
                注册通配方法
            </summary>
            <param name="info">反射信息</param>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Services.ZeroService.ZeroTeam#MessageMVC#Services#IService#RegistAction(System.String,ZeroTeam.MessageMVC.Documents.ApiActionInfo)">
            <summary>
                注册方法
            </summary>
            <param name="route">方法外部方法名称，如 v1/auto/getdid </param>
            <param name="info">反射信息</param>
        </member>
        <member name="T:ZeroTeam.MessageMVC.IStateMachineControl">
            <summary>
            受状态机控制的对象
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.IStateMachineControl.DoStart">
            <summary>
            系统启动时调用
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.IStateMachineControl.DoClosing">
            <summary>
            系统关闭时调用
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.IStateMachineControl.DoClose">
            <summary>
            系统关闭时调用
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.IStateMachineControl.DoEnd">
            <summary>
            注销时调用
            </summary>
        </member>
    </members>
</doc>
