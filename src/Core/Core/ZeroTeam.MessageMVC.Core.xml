<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ZeroTeam.MessageMVC.Core</name>
    </assembly>
    <members>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.AddInImporter">
            <summary>
            MEF插件导入器
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.AddInImporter.State">
            <summary>
            运行状态
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.AddInImporter.ZeroTeam#MessageMVC#IZeroMiddleware#Name">
            <summary>
            实例名称
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.AddInImporter.ZeroTeam#MessageMVC#IZeroMiddleware#Level">
            <summary>
            等级
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.AddInImporter.Registers">
            <summary>
            插件对象
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.AddInImporter.CheckOption(ZeroTeam.MessageMVC.ZeroAppOption)">
            <summary>
                配置校验,作为第一步
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.AddInImporter.Initialize">
            <summary>
            初始化
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.ApiAction">
            <summary>
                Api站点
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiAction.Argument">
            <summary>
                参数
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiAction.Name">
            <summary>
                Api名称
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiAction.IsApiContract">
            <summary>
                是合符合API契约规定
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiAction.Access">
            <summary>
                访问控制
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiAction.NeedLogin">
            <summary>
                需要登录
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiAction.IsPublic">
            <summary>
                是否公开接口
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiAction.ArgumentType">
            <summary>
                参数类型
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiAction.ResultType">
            <summary>
               返回值类型
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiAction.IsAsync">
            <summary>
                是否异步任务
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiAction.Function">
            <summary>
                执行行为
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiAction.ArgumentConvert">
            <summary>
                参数转换方法
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiAction.RestoreArgument(System.String)">
            <summary>
                还原参数
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiAction.Validate(System.String@)">
            <summary>
                参数校验
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiAction.Execute">
            <summary>
                执行
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiAction.Initialize">
            <summary>
            初始化
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.ApiDiscover">
            <summary>
            Controler发现工具,解析并生成服务对象及路由对象
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiDiscover.Assembly">
            <summary>
            主调用程序集
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.ApiDiscover.ServiceInfos">
            <summary>
            站点文档信息
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiDiscover.#cctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiDiscover.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiDiscover.FindApies(System.Type)">
            <summary>
            查找API
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiDiscover.FindApies">
            <summary>
            查找API
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiDiscover.FindApi(System.Type,System.Boolean)">
            <summary>
            查找API
            </summary>
            <param name="type"></param>
            <param name="onlyDoc"></param>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiDiscover.CreateMethod(System.Reflection.TypeInfo,System.String,System.Reflection.ParameterInfo@,System.Boolean@)">
            <summary>生成动态匿名调用内部方法（参数由TArg转为实际类型后调用，并将调用返回值转为TRes）</summary>
            <param name="callInfo">调用对象类型</param>
            <param name="isAsync">此调用是否异步方法</param>
            <param name="methodName">原始调用方法</param>
            <param name="argInfo">参数类型</param>
            <returns>匿名委托</returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.ApiExecuter">
            <summary>
                Api调用器
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiExecuter.Processor">
            <summary>
            当前处理器
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiExecuter.ZeroTeam#MessageMVC#ZeroApis#IMessageMiddleware#Level">
            <summary>
            层级
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.ApiExecuter.Service">
            <summary>
            当前站点
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.ApiExecuter.Message">
            <summary>
            调用的内容
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.ApiExecuter.Tag">
            <summary>
            调用的内容
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiExecuter.Handle(ZeroTeam.MessageMVC.ZeroApis.IService,ZeroTeam.MessageMVC.Messages.IMessageItem,System.Object,System.Func{System.Threading.Tasks.Task})">
            <summary>
            处理
            </summary>
            <param name="service">当前服务</param>
            <param name="message">当前消息</param>
            <param name="tag"></param>
            <param name="next">下一个处理方法</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiExecuter.CommandPrepare(ZeroTeam.MessageMVC.ZeroApis.IApiAction@)">
            <summary>
               准备,取出方法,参数校验
            </summary>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.ApiResultDefault">
            <summary>API返回基类</summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiResultDefault.SerializeObject``1(``0)">
            <summary>
            序列化
            </summary>
            <typeparam name="T"></typeparam>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiResultDefault.DeserializeObject(System.String)">
            <summary>
            反序列化
            </summary>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiResultDefault.DeserializeObject``1(System.String)">
            <summary>
            反序列化
            </summary>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiResultDefault.Build(System.Int32,System.String)">
            <summary>
                生成一个包含错误码的标准返回
            </summary>
            <param name="errCode">错误码</param>
            <param name="message">错误消息</param>
            <returns></returns>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiResultDefault.Ok">
            <summary>成功</summary>
            <remarks>成功</remarks>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiResultDefault.NoFind">
            <summary>页面不存在</summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiResultDefault.NotSupport">
            <summary>不支持的操作</summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiResultDefault.ArgumentError">
            <summary>参数错误字符串</summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiResultDefault.LogicalError">
            <summary>逻辑错误字符串</summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiResultDefault.DenyAccess">
            <summary>拒绝访问</summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiResultDefault.RemoteEmptyError">
            <summary>服务器无返回值的字符串</summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiResultDefault.NetworkError">
            <summary>服务器访问异常</summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiResultDefault.LocalError">
            <summary>本地错误</summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiResultDefault.LocalException">
            <summary>本地访问异常</summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiResultDefault.NoReady">
            <summary>系统未就绪</summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiResultDefault.Pause">
            <summary>暂停服务</summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiResultDefault.UnknowError">
            <summary>未知错误</summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiResultDefault.NetTimeOut">
            <summary>网络超时</summary>
            <remarks>调用其它Api时时抛出未处理异常</remarks>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiResultDefault.ExecTimeOut">
            <summary>执行超时</summary>
            <remarks>Api执行超时</remarks>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiResultDefault.InnerError">
            <summary>内部错误</summary>
            <remarks>执行方法时抛出未处理异常</remarks>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiResultDefault.Unavailable">
            <summary>服务不可用</summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiResultDefault.Succees(System.String)">
            <summary>
                生成一个成功的标准返回
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiResultDefault.Error(System.Int32)">
            <summary>
                生成一个包含错误码的标准返回
            </summary>
            <param name="errCode">错误码</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiResultDefault.Error(System.Int32,System.String)">
            <summary>
                生成一个包含错误码的标准返回
            </summary>
            <param name="errCode">错误码</param>
            <param name="message">错误消息</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiResultDefault.Error(System.Int32,System.String,System.String)">
            <summary>
                生成一个包含错误码的标准返回
            </summary>
            <param name="errCode">错误码</param>
            <param name="message">错误消息</param>
            <param name="innerMessage">内部说明</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiResultDefault.Error(System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
                生成一个包含错误码的标准返回
            </summary>
            <param name="errCode">错误码</param>
            <param name="message">错误消息</param>
            <param name="innerMessage">内部说明</param>
            <param name="guide">错误指导</param>
            <param name="describe">错误解释</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiResultDefault.Error(System.Int32,System.String,System.String,System.String,System.String,System.String)">
            <summary>
                生成一个包含错误码的标准返回
            </summary>
            <param name="errCode">错误码</param>
            <param name="message">错误消息</param>
            <param name="innerMessage">内部说明</param>
            <param name="point">错误点</param>
            <param name="guide">错误指导</param>
            <param name="describe">错误解释</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiResultDefault.Succees``1(``0,System.String)">
            <summary>
                生成一个成功的标准返回
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiResultDefault.Error``1(System.Int32)">
            <summary>
                生成一个包含错误码的标准返回
            </summary>
            <param name="errCode">错误码</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiResultDefault.Error``1(System.Int32,System.String)">
            <summary>
                生成一个包含错误码的标准返回
            </summary>
            <param name="errCode">错误码</param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiResultDefault.Error``1(System.Int32,System.String,System.String)">
            <summary>
                生成一个包含错误码的标准返回
            </summary>
            <param name="errCode">错误码</param>
            <param name="message">错误消息</param>
            <param name="innerMessage">内部说明</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiResultDefault.Error``1(System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
                生成一个包含错误码的标准返回
            </summary>
            <param name="errCode">错误码</param>
            <param name="message">错误消息</param>
            <param name="innerMessage">内部说明</param>
            <param name="guide">错误指导</param>
            <param name="describe">错误解释</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiResultDefault.Error``1(System.Int32,System.String,System.String,System.String,System.String,System.String)">
            <summary>
                生成一个包含错误码的标准返回
            </summary>
            <param name="errCode">错误码</param>
            <param name="message">错误消息</param>
            <param name="innerMessage">内部说明</param>
            <param name="point">错误点</param>
            <param name="guide">错误指导</param>
            <param name="describe">错误解释</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiResultDefault.Error">
            <summary>
                生成一个成功的标准返回
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiResultDefault.Error``1">
            <summary>
                生成一个成功的标准返回
            </summary>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.TransportDiscover">
            <summary>
            默认网络传输对象发现
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.TransportDiscover.ZeroTeam#MessageMVC#ZeroApis#ITransportDiscory#DiscoryNetTransport(System.Type,System.String@)">
            <summary>
            发现传输对象
            </summary>
            <param name="type">控制器类型</param>
            <param name="name">发现的服务名称</param>
            <returns>传输对象构造器</returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.TransportDiscover.DiscoryNetTransport(System.Type,System.String@)">
            <summary>
            发现传输对象
            </summary>
            <param name="type">控制器类型</param>
            <param name="name">发现的服务名称</param>
            <returns>传输对象构造器</returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.GlobalContextMiddleware">
            <summary>
            上下文对象
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.GlobalContextMiddleware.ZeroTeam#MessageMVC#ZeroApis#IMessageMiddleware#Level">
            <summary>
            层级
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.GlobalContextMiddleware.Processor">
            <summary>
            当前处理器
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.GlobalContextMiddleware.ZeroTeam#MessageMVC#ZeroApis#IMessageMiddleware#Handle(ZeroTeam.MessageMVC.ZeroApis.IService,ZeroTeam.MessageMVC.Messages.IMessageItem,System.Object,System.Func{System.Threading.Tasks.Task})">
            <summary>
            准备
            </summary>
            <param name="service">当前服务</param>
            <param name="message">当前消息</param>
            <param name="tag">扩展信息</param>
            <param name="next">下一个处理方法</param>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.LoggerMiddleware">
            <summary>
            日志处理中间件
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.LoggerMiddleware.Processor">
            <summary>
            当前处理器
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.LoggerMiddleware.ZeroTeam#MessageMVC#ZeroApis#IMessageMiddleware#Level">
            <summary>
            层级
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.LoggerMiddleware.ZeroTeam#MessageMVC#ZeroApis#IMessageMiddleware#Handle(ZeroTeam.MessageMVC.ZeroApis.IService,ZeroTeam.MessageMVC.Messages.IMessageItem,System.Object,System.Func{System.Threading.Tasks.Task})">
            <summary>
            准备
            </summary>
            <param name="service">当前服务</param>
            <param name="message">当前消息</param>
            <param name="tag">扩展信息</param>
            <param name="next">下一个处理方法</param>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.MarkPointMiddleware">
            <summary>
            埋点发出中间件
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.MarkPointMiddleware.Processor">
            <summary>
            当前处理器
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.MarkPointMiddleware.ZeroTeam#MessageMVC#ZeroApis#IMessageMiddleware#Level">
            <summary>
            层级
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.MarkPointMiddleware.ZeroTeam#MessageMVC#ZeroApis#IMessageMiddleware#Handle(ZeroTeam.MessageMVC.ZeroApis.IService,ZeroTeam.MessageMVC.Messages.IMessageItem,System.Object,System.Func{System.Threading.Tasks.Task})">
            <summary>
            准备
            </summary>
            <param name="service">当前服务</param>
            <param name="message">当前消息</param>
            <param name="tag">扩展信息</param>
            <param name="next">下一个处理方法</param>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.StorageMiddleware">
            <summary>
            消息存储中间件
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.StorageMiddleware.Processor">
            <summary>
            当前处理器
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.StorageMiddleware.ZeroTeam#MessageMVC#ZeroApis#IMessageMiddleware#Level">
            <summary>
            层级
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.StorageMiddleware.ZeroTeam#MessageMVC#ZeroApis#IMessageMiddleware#Handle(ZeroTeam.MessageMVC.ZeroApis.IService,ZeroTeam.MessageMVC.Messages.IMessageItem,System.Object,System.Func{System.Threading.Tasks.Task})">
            <summary>
            准备
            </summary>
            <param name="service">当前服务</param>
            <param name="message">当前消息</param>
            <param name="tag">扩展信息</param>
            <param name="next">下一个处理方法</param>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.ReverseProxyMiddleware">
            <summary>
            反向代理中间件
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ReverseProxyMiddleware.Processor">
            <summary>
            当前处理器
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ReverseProxyMiddleware.ZeroTeam#MessageMVC#ZeroApis#IMessageMiddleware#Level">
            <summary>
            层级
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ReverseProxyMiddleware.ZeroTeam#MessageMVC#ZeroApis#IMessageMiddleware#Handle(ZeroTeam.MessageMVC.ZeroApis.IService,ZeroTeam.MessageMVC.Messages.IMessageItem,System.Object,System.Func{System.Threading.Tasks.Task})">
            <summary>
            准备
            </summary>
            <param name="service">当前服务</param>
            <param name="message">当前消息</param>
            <param name="tag">扩展信息</param>
            <param name="next">下一个处理方法</param>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.StateMachine.CloseStateMachine">
            <summary>
            监控状态机
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.StateMachine.CloseStateMachine.ZeroTeam#MessageMVC#ZeroApis#StateMachine#IStationStateMachine#Start">
            <summary>
                开始的处理
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.StateMachine.CloseStateMachine.ZeroTeam#MessageMVC#ZeroApis#StateMachine#IStationStateMachine#Close">
            <summary>
                关闭的处理
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.StateMachine.CloseStateMachine.ZeroTeam#MessageMVC#ZeroApis#StateMachine#IStationStateMachine#End">
            <summary>
                结束的处理
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.StateMachine.EmptyStateMachine">
            <summary>
            监控状态机
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.StateMachine.EmptyStateMachine.ZeroTeam#MessageMVC#ZeroApis#StateMachine#IStationStateMachine#Start">
            <summary>
                开始的处理
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.StateMachine.EmptyStateMachine.ZeroTeam#MessageMVC#ZeroApis#StateMachine#IStationStateMachine#End">
            <summary>
                结束的处理
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.StateMachine.EmptyStateMachine.ZeroTeam#MessageMVC#ZeroApis#StateMachine#IStationStateMachine#Close">
            <summary>
                关闭的处理
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.StateMachine.FailedStateMachine">
            <summary>
            监控状态机
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.StateMachine.FailedStateMachine.ZeroTeam#MessageMVC#ZeroApis#StateMachine#IStationStateMachine#Start">
            <summary>
                开始的处理
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.StateMachine.FailedStateMachine.ZeroTeam#MessageMVC#ZeroApis#StateMachine#IStationStateMachine#Close">
            <summary>
                关闭的处理
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.StateMachine.FailedStateMachine.ZeroTeam#MessageMVC#ZeroApis#StateMachine#IStationStateMachine#End">
            <summary>
                结束的处理
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.StateMachine.IStationStateMachine">
            <summary>
            站点状态机
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.StateMachine.IStationStateMachine.Service">
            <summary>
            站点
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.StateMachine.IStationStateMachine.IsDisposed">
            <summary>
            是否已析构
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.StateMachine.IStationStateMachine.Start">
            <summary>
                开始的处理
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.StateMachine.IStationStateMachine.Close">
            <summary>
                关闭的处理
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.StateMachine.IStationStateMachine.End">
            <summary>
                结束的处理
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.StateMachine.RunStateMachine">
            <summary>
            监控状态机
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.StateMachine.RunStateMachine.ZeroTeam#MessageMVC#ZeroApis#StateMachine#IStationStateMachine#Start">
            <summary>
                开始的处理
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.StateMachine.RunStateMachine.ZeroTeam#MessageMVC#ZeroApis#StateMachine#IStationStateMachine#Close">
            <summary>
                结束的处理
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.StateMachine.RunStateMachine.ZeroTeam#MessageMVC#ZeroApis#StateMachine#IStationStateMachine#End">
            <summary>
                结束的处理
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.StateMachine.StartStateMachine">
            <summary>
            监控状态机
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.StateMachine.StartStateMachine.ZeroTeam#MessageMVC#ZeroApis#StateMachine#IStationStateMachine#Start">
            <summary>
                开始的处理
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.StateMachine.StartStateMachine.ZeroTeam#MessageMVC#ZeroApis#StateMachine#IStationStateMachine#Close">
            <summary>
                关闭的处理
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.StateMachine.StartStateMachine.ZeroTeam#MessageMVC#ZeroApis#StateMachine#IStationStateMachine#End">
            <summary>
                结束的处理
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.StateMachine.StateMachineBase">
            <summary>
            监控状态机
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.StateMachine.StateMachineBase.Service">
            <summary>
            站点
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.StateMachine.StateMachineBase.Control">
            <summary>
            站点
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.StateMachine.StateMachineBase.IsDisposed">
            <summary>
            是否已析构
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.ZeroService">
            <summary>
            一个服务
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ZeroService.Level">
            <summary>
            等级,用于确定中间件优先级
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ZeroService.ServiceName">
            <summary>
            站点名称
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ZeroService.Transport">
            <summary>
            网络传输对象
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ZeroService.IsDiscover">
            <summary>
            是否自动发现对象
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ZeroService.TransportBuilder">
            <summary>
            网络传输对象构造器
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.ZeroService._realState">
            <summary>
                运行状态
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ZeroService.RealState">
            <summary>
                运行状态
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ZeroService.StateMachine">
            <summary>
            状态机
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ZeroService.ConfigState">
            <summary>
                配置状态
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ZeroService.ResetStateMachine">
            <summary>
            重置状态机,请谨慎使用
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ZeroService.CancelToken">
            <summary>
            取消标记
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ZeroService.CanLoop">
            <summary>
            能不能循环处理
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.ZeroService.eventSlim">
            <summary>
            Run与Start互斥执行的事件对象
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ZeroService.Initialize">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ZeroService.DoStart">
            <summary>
            开始
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ZeroService.Run">
            <summary>
            命令轮询
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ZeroService.LoopBegin">
            <summary>
            同步运行状态
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ZeroService.LoopComplete">
            <summary>
            同步关闭状态
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ZeroService.OnLoopIdle">
            <summary>
            空转
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ZeroService.DoEnd">
            <summary>
            析构
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ZeroService.ZeroTeam#MessageMVC#IFlowMiddleware#Start">
            <summary>
            开始
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ZeroService.ZeroTeam#MessageMVC#IFlowMiddleware#End">
            <inheritdoc/>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ZeroService.ZeroTeam#MessageMVC#IStateMachineControl#DoEnd">
            <summary>
            析构
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ZeroService.ZeroTeam#MessageMVC#ZeroApis#IService#Actions">
            <summary>
            注册的方法
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ZeroService.RegistAction(System.String,ZeroTeam.MessageMVC.ZeroApis.ApiAction,ZeroTeam.MessageMVC.ApiDocuments.ApiActionInfo)">
            <summary>
                注册方法
            </summary>
            <param name="name">方法外部方法名称，如 v1/auto/getdid </param>
            <param name="action">动作</param>
            <param name="info">反射信息</param>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ConfigMiddleware">
            <summary>
            配置的全局对象
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ConfigMiddleware.ZeroTeam#MessageMVC#IZeroMiddleware#Name">
            <summary>
            实例名称
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ConfigMiddleware.ZeroTeam#MessageMVC#IZeroMiddleware#Level">
            <summary>
            等级
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ConfigMiddleware.ZeroTeam#MessageMVC#IFlowMiddleware#CheckOption(ZeroTeam.MessageMVC.ZeroAppOption)">
            <summary>
                配置校验,作为第一步
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ConfigMiddleware.CheckConfig(ZeroTeam.MessageMVC.ZeroAppOption)">
            <summary>
                配置校验
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApp">
            <summary>
            应用扩展方法
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApp.CheckOption(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            检查并注入配置
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApp.UseFlow(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Reflection.Assembly,System.Boolean)">
            <summary>
            使用主流程控制器
            </summary>
            <param name="services"></param>
            <param name="assembly">需要发现服务的程序集</param>
            <param name="waitEnd"></param>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApp.UseTest(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Reflection.Assembly)">
            <summary>
            使用主流程控制器
            </summary>
            <param name="services"></param>
            <param name="assembly">需要发现服务的程序集</param>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApp.UseFlow(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            使用主流程控制器
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApp.UseFlowByAutoDiscory(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            使用主流程控制器
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApp.UseFlowAsync(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            使用主流程控制器
            </summary>
            <param name="services"></param>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroFlowControl">
            <summary>
                主流程控制器
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroFlowControl.AppName">
            <summary>
                当前应用名称
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroFlowControl.Config">
            <summary>
                站点配置
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroFlowControl._appState">
            <summary>
                运行状态
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroFlowControl.ApplicationState">
            <summary>
                状态
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroFlowControl.SetFailed">
            <summary>
            设置ZeroCenter与Application状态都为Failed
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroFlowControl.ApplicationIsRun">
            <summary>
                本地应用是否正在运行
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroFlowControl.CanDo">
            <summary>
                运行状态（本地与服务器均正常）
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroFlowControl.IsAlive">
            <summary>
                运行状态（本地未关闭）
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroFlowControl.IsDestroy">
            <summary>
                已销毁
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroFlowControl.IsClosed">
            <summary>
                已关闭
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroFlowControl.CheckOption">
            <summary>
                配置校验,作为第一步
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroFlowControl.Discove(System.Reflection.Assembly)">
            <summary>
                发现
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroFlowControl.Discove">
            <summary>
                发现
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroFlowControl.Initialize">
            <summary>
                初始化
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroFlowControl.Run">
            <summary>
                运行
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroFlowControl.RunAsync">
            <summary>
                运行
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroFlowControl.RunAwaite">
            <summary>
                执行并等待
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroFlowControl.RunAwaiteAsync">
            <summary>
                执行并等待
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroFlowControl.Shutdown">
            <summary>
                关闭
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroFlowControl.Services">
            <summary>
            已注册的对象
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroFlowControl.ActiveObjects">
            <summary>
            活动对象(执行中)
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroFlowControl.FailedObjects">
            <summary>
            活动对象(执行中)
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroFlowControl.ActiveSemaphore">
            <summary>
                对象活动状态记录器锁定
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroFlowControl.GetService(System.String)">
            <summary>
                取服务，内部使用
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroFlowControl.OnObjectActive(ZeroTeam.MessageMVC.ZeroApis.IService)">
            <summary>
                对象活动时登记
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroFlowControl.OnObjectFailed(ZeroTeam.MessageMVC.ZeroApis.IService)">
            <summary>
                对象关闭时登记
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroFlowControl.OnObjectClose(ZeroTeam.MessageMVC.ZeroApis.IService)">
            <summary>
                对象关闭时登记
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroFlowControl.WaitAllObjectSafeClose">
            <summary>
                等待所有对象信号(全开或全关)
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroFlowControl.TryGetZeroObject(System.String)">
            <summary>
                取已注册对象
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroFlowControl.RegistService(ZeroTeam.MessageMVC.ZeroApis.IService)">
            <summary>
                注册对象
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroFlowControl.OnZeroInitialize">
            <summary>
                系统启动时调用
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroFlowControl.OnZeroStart">
            <summary>
                系统启动时调用
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroFlowControl.StartFailed">
            <summary>
                重新启动未正常启动的项目
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroFlowControl.OnZeroClose">
            <summary>
                注销时调用
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroFlowControl.OnZeroEnd">
            <summary>
                注销时调用
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ReConsumerMiddleware">
            <summary>
            重新消费未正确处理消息的中间件
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ReConsumerMiddleware.ZeroTeam#MessageMVC#IZeroMiddleware#Name">
            <summary>
            实例名称
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ReConsumerMiddleware.ZeroTeam#MessageMVC#IZeroMiddleware#Level">
            <summary>
            等级
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ReConsumerMiddleware.ZeroTeam#MessageMVC#IFlowMiddleware#Close">
            <summary>
                关闭
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ReConsumerMiddleware.ZeroTeam#MessageMVC#IFlowMiddleware#CheckOption(ZeroTeam.MessageMVC.ZeroAppOption)">
            <summary>
                配置校验,作为第一步
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ReConsumerMiddleware.ZeroTeam#MessageMVC#IFlowMiddleware#Start">
            <summary>
            开启
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ReConsumerMiddleware.ReConsumer">
            <summary>
                重新消费错误消息
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.IStateMachineControl">
            <summary>
            受状态机控制的对象
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.IStateMachineControl.DoStart">
            <summary>
            系统启动时调用
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.IStateMachineControl.DoClose">
            <summary>
            系统关闭时调用
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.IStateMachineControl.DoEnd">
            <summary>
            注销时调用
            </summary>
        </member>
    </members>
</doc>
