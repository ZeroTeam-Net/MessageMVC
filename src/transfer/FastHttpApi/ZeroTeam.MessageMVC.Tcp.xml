<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ZeroTeam.MessageMVC.FastHttpApi</name>
    </assembly>
    <members>
        <member name="T:BeetleX.FastHttpApi.HttpContext">
            <summary>
            HttApi的上下文
            </summary>
        </member>
        <member name="M:BeetleX.FastHttpApi.HttpContext.#ctor(BeetleX.FastHttpApi.HttpApiServer,BeetleX.FastHttpApi.HttpRequest,BeetleX.FastHttpApi.HttpResponse,BeetleX.FastHttpApi.Data.IDataContext)">
            <summary>
            构造
            </summary>
            <param name="server"></param>
            <param name="request"></param>
            <param name="response"></param>
            <param name="dataContext"></param>
        </member>
        <member name="P:BeetleX.FastHttpApi.HttpContext.RequestID">
            <summary>
            请求标识
            </summary>
        </member>
        <member name="P:BeetleX.FastHttpApi.HttpContext.Request">
            <summary>
            请求
            </summary>
        </member>
        <member name="P:BeetleX.FastHttpApi.HttpContext.Response">
            <summary>
            返回
            </summary>
        </member>
        <member name="P:BeetleX.FastHttpApi.HttpContext.Server">
            <summary>
            服务
            </summary>
        </member>
        <member name="P:BeetleX.FastHttpApi.HttpContext.Session">
            <summary>
            Section
            </summary>
        </member>
        <member name="P:BeetleX.FastHttpApi.HttpContext.Item(System.String)">
            <summary>
            取Session内容
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:BeetleX.FastHttpApi.HttpContext.ActionUrl">
            <summary>
            当前Url
            </summary>
        </member>
        <member name="P:BeetleX.FastHttpApi.HttpContext.Data">
            <summary>
            上下文数据
            </summary>
        </member>
        <member name="M:BeetleX.FastHttpApi.HttpContext.Result(System.Object)">
            <summary>
            写返回值
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:BeetleX.FastHttpApi.HttpContext.ZeroTeam#MessageMVC#Messages#IMessageWriter#OnResult(ZeroTeam.MessageMVC.Messages.IInlineMessage,System.Object)">
            <summary>
            标明调用结束
            </summary>
            <returns>是否发送成功</returns>
        </member>
        <member name="M:BeetleX.FastHttpApi.HttpContext.WriteResult(ZeroTeam.MessageMVC.ZeroApis.IApiResult)">
            <summary>
            标明调用结束
            </summary>
            <returns>是否发送成功</returns>
        </member>
        <member name="T:BeetleX.FastHttpApi.HttpMessageReader">
            <summary>
            Http消息体读取器
            </summary>
        </member>
        <member name="F:BeetleX.FastHttpApi.HttpMessageReader.Request">
            <summary>
                请求的内容
            </summary>
        </member>
        <member name="F:BeetleX.FastHttpApi.HttpMessageReader.Message">
            <summary>
            消息体
            </summary>
        </member>
        <member name="M:BeetleX.FastHttpApi.HttpMessageReader.CheckRequest(BeetleX.FastHttpApi.HttpApiServer,BeetleX.FastHttpApi.HttpRequest,BeetleX.FastHttpApi.HttpResponse)">
            <summary>
                调用检查
            </summary>
        </member>
        <member name="M:BeetleX.FastHttpApi.HttpMessageReader.CheckApiRoute">
            <summary>
                检查调用内容
            </summary>
            <returns></returns>
        </member>
        <member name="M:BeetleX.FastHttpApi.HttpMessageReader.Prepare">
            <summary>
            准备在线(框架内调用)
            </summary>
            <returns></returns>
        </member>
        <member name="T:BeetleX.FastHttpApi.FastHttpApiApp">
            <summary>
            Http应用
            </summary>
        </member>
        <member name="M:BeetleX.FastHttpApi.FastHttpApiApp.AddMessageMvcFastHttpApi(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                初始化
            </summary>
        </member>
        <member name="T:BeetleX.FastHttpApi.FastHttpApiLifeFlow">
            <summary>
            Http的流程
            </summary>
        </member>
        <member name="F:BeetleX.FastHttpApi.FastHttpApiLifeFlow.Instance">
            <summary>
            唯一实例
            </summary>
        </member>
        <member name="P:BeetleX.FastHttpApi.FastHttpApiLifeFlow.ZeroTeam#MessageMVC#IZeroDependency#Name">
            <summary>
            实例名称
            </summary>
        </member>
        <member name="P:BeetleX.FastHttpApi.FastHttpApiLifeFlow.ZeroTeam#MessageMVC#IZeroMiddleware#Level">
            <summary>
            等级
            </summary>
        </member>
        <member name="P:BeetleX.FastHttpApi.FastHttpApiLifeFlow.Server">
            <summary>
            当前服务
            </summary>
        </member>
        <member name="F:BeetleX.FastHttpApi.FastHttpApiLifeFlow.HttpDisconnectHandlers">
            <summary>
            连接关闭的事件注册
            </summary>
        </member>
        <member name="M:BeetleX.FastHttpApi.FastHttpApiLifeFlow.ZeroTeam#MessageMVC#ILifeFlow#Open">
            <summary>
            关闭
            </summary>
        </member>
        <member name="M:BeetleX.FastHttpApi.FastHttpApiLifeFlow.ZeroTeam#MessageMVC#ILifeFlow#Closing">
            <summary>
            关闭
            </summary>
        </member>
        <member name="T:BeetleX.FastHttpApi.HttpWriter">
            <summary>
                Http进站出站的处理类
            </summary>
        </member>
        <member name="M:BeetleX.FastHttpApi.HttpWriter.ZeroTeam#MessageMVC#Messages#IMessageWriter#OnResult(ZeroTeam.MessageMVC.Messages.IInlineMessage,System.Object)">
            <summary>
            标明调用结束
            </summary>
            <returns>是否发送成功</returns>
        </member>
        <member name="M:BeetleX.FastHttpApi.HttpWriter.WriteResult(ZeroTeam.MessageMVC.ZeroApis.IApiResult)">
            <summary>
            标明调用结束
            </summary>
            <returns>是否发送成功</returns>
        </member>
        <member name="T:BeetleX.FastHttpApi.MessageResult">
            <summary>
            标准消息返回
            </summary>
        </member>
        <member name="P:BeetleX.FastHttpApi.MessageResult.Message">
            <summary>
                返回内容
            </summary>
            <example>true</example>
        </member>
        <member name="P:BeetleX.FastHttpApi.MessageResult.ContentType">
            <summary>
            内容类型
            </summary>
        </member>
        <member name="M:BeetleX.FastHttpApi.MessageResult.Write(BeetleX.Buffers.PipeStream,BeetleX.FastHttpApi.HttpResponse)">
            <summary>
            写入
            </summary>
            <param name="stream"></param>
            <param name="response"></param>
        </member>
        <member name="T:BeetleX.FastHttpApi.ObjectResult">
            <summary>
            Http的返回值
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:BeetleX.FastHttpApi.ObjectResult.ContentType">
            <summary>
            内容类型
            </summary>
        </member>
        <member name="P:BeetleX.FastHttpApi.ObjectResult.Message">
            <summary>
                返回内容
            </summary>
            <example>true</example>
        </member>
        <member name="M:BeetleX.FastHttpApi.ObjectResult.Write(BeetleX.Buffers.PipeStream,BeetleX.FastHttpApi.HttpResponse)">
            <summary>
            写入
            </summary>
            <param name="stream"></param>
            <param name="response"></param>
        </member>
        <member name="T:BeetleX.FastHttpApi.StringResult">
            <summary>
            纯文本返回内容
            </summary>
        </member>
        <member name="P:BeetleX.FastHttpApi.StringResult.ContentType">
            <summary>
            内容类型
            </summary>
        </member>
        <member name="P:BeetleX.FastHttpApi.StringResult.Message">
            <summary>
                返回内容
            </summary>
            <example>true</example>
        </member>
        <member name="M:BeetleX.FastHttpApi.StringResult.Write(BeetleX.Buffers.PipeStream,BeetleX.FastHttpApi.HttpResponse)">
            <summary>
            写入
            </summary>
            <param name="stream"></param>
            <param name="response"></param>
        </member>
        <member name="T:BeetleX.FastHttpApi.HttpMessage">
            <summary>
                路由数据
            </summary>
        </member>
        <member name="P:BeetleX.FastHttpApi.HttpMessage.ZeroTeam#MessageMVC#Messages#IInlineMessage#MessageType">
            <summary>
            消息类型
            </summary>
        </member>
        <member name="P:BeetleX.FastHttpApi.HttpMessage.IsOutAccess">
            <summary>
            是否外部访问
            </summary>
        </member>
        <member name="P:BeetleX.FastHttpApi.HttpMessage.ArgumentData">
            <summary>
            实体参数
            </summary>
        </member>
        <member name="P:BeetleX.FastHttpApi.HttpMessage.ExtensionDictionary">
            <summary>
            字典参数
            </summary>
        </member>
        <member name="P:BeetleX.FastHttpApi.HttpMessage.BinaryDictionary">
            <summary>
            二进制字典参数
            </summary>
        </member>
        <member name="P:BeetleX.FastHttpApi.HttpMessage.ResultData">
            <summary>
            处理结果,对应状态的解释信息
            </summary>
            <remarks>
            未消费:无内容
            已接受:无内容
            格式错误 : 无内容
            无处理方法 : 无内容
            处理异常 : 异常信息
            处理失败 : 失败内容或原因
            处理成功 : 结果信息或无
            </remarks>
        </member>
        <member name="P:BeetleX.FastHttpApi.HttpMessage.ResultSerializer">
            <summary>
                返回值序列化对象
            </summary>
        </member>
        <member name="P:BeetleX.FastHttpApi.HttpMessage.ResultCreater">
            <summary>
                返回值构造对象
            </summary>
        </member>
        <member name="P:BeetleX.FastHttpApi.HttpMessage.RequestId">
            <summary>
                Http上下文
            </summary>
            <summary>
                请求的内容
            </summary>
        </member>
        <member name="P:BeetleX.FastHttpApi.HttpMessage.Request">
            <summary>
                Http上下文
            </summary>
            <summary>
                请求的内容
            </summary>
        </member>
        <member name="P:BeetleX.FastHttpApi.HttpMessage.HttpContext">
            <summary>
                Http上下文
            </summary>
            <summary>
                请求的内容
            </summary>
        </member>
        <member name="P:BeetleX.FastHttpApi.HttpMessage.Url">
            <summary>
                请求地址
            </summary>
        </member>
        <member name="P:BeetleX.FastHttpApi.HttpMessage.HttpMethod">
            <summary>
                HTTP method
            </summary>
        </member>
        <member name="P:BeetleX.FastHttpApi.HttpMessage.HttpContent">
            <summary>
                请求的内容
            </summary>
        </member>
        <member name="P:BeetleX.FastHttpApi.HttpMessage.ContentObject">
            <summary>
                请求的内容字典
            </summary>
        </member>
        <member name="P:BeetleX.FastHttpApi.HttpMessage.Start">
            <summary>
                开始时间
            </summary>
        </member>
        <member name="P:BeetleX.FastHttpApi.HttpMessage.End">
            <summary>
                结束时间
            </summary>
        </member>
        <member name="M:BeetleX.FastHttpApi.HttpMessage.GetStringArgument(System.String)">
            <summary>
            取基本参数值
            </summary>
            <param name="name">名称</param>
            <returns>值</returns>
        </member>
        <member name="M:BeetleX.FastHttpApi.HttpMessage.GetBinaryArgument(System.String)">
            <summary>
            取二进制参数值
            </summary>
            <param name="name">名称</param>
            <returns>值</returns>
        </member>
        <member name="M:BeetleX.FastHttpApi.HttpMessage.GetArgument(System.Int32,System.Int32,ZeroTeam.MessageMVC.Messages.ISerializeProxy,System.Type)">
            <summary>
            取参数值
            </summary>
            <param name="scope">参数范围</param>
            <param name="serializeType">序列化类型</param>
            <param name="serialize">序列化器</param>
            <param name="type">序列化对象</param>
            <returns>值</returns>
        </member>
        <member name="M:BeetleX.FastHttpApi.HttpMessage.GetContent(ZeroTeam.MessageMVC.Messages.ArgumentScope,ZeroTeam.MessageMVC.Messages.ISerializeProxy@)">
            <summary>
            取参数值
            </summary>
            <param name="scope">范围</param>
            <param name="serialize">序列化类型</param>
            <returns>值</returns>
        </member>
        <member name="M:BeetleX.FastHttpApi.HttpMessage.GetValueArgument(System.String,System.Int32,System.Int32,ZeroTeam.MessageMVC.Messages.ISerializeProxy,System.Type)">
            <summary>
            取参数值(动态IL代码调用)  BUG
            </summary>
            <param name="name">名称</param>
            <param name="scope">参数范围</param>
            <param name="serializeType">序列化类型</param>
            <param name="serialize">序列化器</param>
            <param name="type">序列化对象</param>
            <returns>值</returns>
        </member>
        <member name="M:BeetleX.FastHttpApi.HttpMessage.GetScopeArgument(System.String,ZeroTeam.MessageMVC.Messages.ArgumentScope)">
            <summary>
            取参数值
            </summary>
            <param name="name">名称</param>
            <param name="scope">参数范围</param>
            <returns>值</returns>
        </member>
        <member name="M:BeetleX.FastHttpApi.HttpMessage.ZeroTeam#MessageMVC#Messages#IInlineMessage#Look">
            <summary>
            跟踪消息
            </summary>
            <returns></returns>
        </member>
        <member name="T:BeetleX.FastHttpApi.HttpMessageOption">
            <summary>
            
            </summary>
        </member>
        <member name="P:BeetleX.FastHttpApi.HttpMessageOption.ServerOption">
            <summary>
            服务配置
            </summary>
        </member>
        <member name="F:BeetleX.FastHttpApi.HttpMessageOption.Instance">
            <summary>
            实例
            </summary>
        </member>
        <member name="P:BeetleX.FastHttpApi.HttpMessageOption.ZeroTeam#MessageMVC#IZeroOption#SupperUrl">
            <summary>
            支持地址
            </summary>
        </member>
        <member name="P:BeetleX.FastHttpApi.HttpMessageOption.ZeroTeam#MessageMVC#IZeroOption#OptionName">
            <summary>
            配置名称
            </summary>
        </member>
        <member name="P:BeetleX.FastHttpApi.HttpMessageOption.ZeroTeam#MessageMVC#IZeroOption#SectionName">
            <summary>
            节点名称
            </summary>
        </member>
        <member name="P:BeetleX.FastHttpApi.HttpMessageOption.ZeroTeam#MessageMVC#IZeroOption#IsDynamic">
            <summary>
            是否动态配置
            </summary>
        </member>
        <member name="T:BeetleX.FastHttpApi.HttpMessageServer">
            <summary>
            消息服务
            </summary>
        </member>
        <member name="M:BeetleX.FastHttpApi.HttpMessageServer.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="M:BeetleX.FastHttpApi.HttpMessageServer.OnHttpRequest(BeetleX.FastHttpApi.HttpRequest,BeetleX.FastHttpApi.HttpResponse)">
            <summary>
            Http消息接收处理
            </summary>
            <param name="request"></param>
            <param name="response"></param>
        </member>
        <member name="M:BeetleX.FastHttpApi.HttpMessageServer.OnWebSocketRequest(BeetleX.FastHttpApi.HttpRequest,BeetleX.ISession,BeetleX.FastHttpApi.WebSockets.DataFrame)">
            <summary>
            WebSocket消息接收处理
            </summary>
            <param name="request"></param>
            <param name="session"></param>
            <param name="data"></param>
        </member>
        <member name="T:BeetleX.FastHttpApi.WebsocketContext">
            <summary>
            WebSocket的上下文
            </summary>
        </member>
        <member name="M:BeetleX.FastHttpApi.WebsocketContext.#ctor(BeetleX.FastHttpApi.HttpApiServer,BeetleX.FastHttpApi.HttpRequest,BeetleX.FastHttpApi.Data.IDataContext)">
            <summary>
            构造
            </summary>
            <param name="server"></param>
            <param name="request"></param>
            <param name="dataContext"></param>
        </member>
        <member name="P:BeetleX.FastHttpApi.WebsocketContext.RequestID">
            <summary>
            请求标识
            </summary>
        </member>
        <member name="P:BeetleX.FastHttpApi.WebsocketContext.Request">
            <summary>
            请求
            </summary>
        </member>
        <member name="P:BeetleX.FastHttpApi.WebsocketContext.Server">
            <summary>
            服务
            </summary>
        </member>
        <member name="P:BeetleX.FastHttpApi.WebsocketContext.Session">
            <summary>
            Section
            </summary>
        </member>
        <member name="P:BeetleX.FastHttpApi.WebsocketContext.Data">
            <summary>
            上下文数据
            </summary>
        </member>
        <member name="P:BeetleX.FastHttpApi.WebsocketContext.Item(System.String)">
            <summary>
            取Session内容
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:BeetleX.FastHttpApi.WebsocketContext.ActionUrl">
            <summary>
            当前Url
            </summary>
        </member>
        <member name="M:BeetleX.FastHttpApi.WebsocketContext.Result(System.Object)">
            <summary>
            写返回值
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:BeetleX.FastHttpApi.WebsocketContext.ZeroTeam#MessageMVC#Messages#IMessageWriter#OnResult(ZeroTeam.MessageMVC.Messages.IInlineMessage,System.Object)">
            <summary>
            标明调用结束
            </summary>
            <returns>是否发送成功</returns>
        </member>
        <member name="M:BeetleX.FastHttpApi.WebsocketContext.WriteResult(ZeroTeam.MessageMVC.ZeroApis.IApiResult)">
            <summary>
            标明调用结束
            </summary>
            <returns>是否发送成功</returns>
        </member>
        <member name="T:BeetleX.FastHttpApi.WebSocketMessageReader">
            <summary>
            Http消息体读取器
            </summary>
        </member>
        <member name="F:BeetleX.FastHttpApi.WebSocketMessageReader.Message">
            <summary>
            消息体
            </summary>
        </member>
        <member name="M:BeetleX.FastHttpApi.WebSocketMessageReader.CheckRequest(BeetleX.FastHttpApi.HttpApiServer,BeetleX.FastHttpApi.HttpRequest,BeetleX.FastHttpApi.WebSockets.DataFrame)">
            <summary>
                调用检查
            </summary>
        </member>
    </members>
</doc>
