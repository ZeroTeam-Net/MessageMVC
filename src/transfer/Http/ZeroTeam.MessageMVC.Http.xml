<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ZeroTeam.MessageMVC.Http</name>
    </assembly>
    <members>
        <member name="T:ZeroTeam.MessageMVC.Http.HttpApp">
            <summary>
            Http应用
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpApp.UseHttp(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                初始化
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpApp.RunMessageMVC(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
                初始化
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Http.HttpMessage">
            <summary>
                路由数据
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpMessage.IsOutAccess">
            <summary>
            是否外部访问
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpMessage.ArgumentData">
            <summary>
            实体参数
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpMessage.Dictionary">
            <summary>
            字典参数
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpMessage.DataState">
            <summary>
            数据状态
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpMessage.ResultData">
            <summary>
            处理结果,对应状态的解释信息
            </summary>
            <remarks>
            未消费:无内容
            已接受:无内容
            格式错误 : 无内容
            无处理方法 : 无内容
            处理异常 : 异常信息
            处理失败 : 失败内容或原因
            处理成功 : 结果信息或无
            </remarks>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpMessage.ResultSerializer">
            <summary>
                返回值序列化对象
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpMessage.ResultCreater">
            <summary>
                返回值构造对象
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpMessage.HttpContext">
            <summary>
                Http上下文
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpMessage.ServiceName">
            <summary>
            服务名称,即Topic
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpMessage.ApiHost">
            <summary>
                当前请求调用的主机名称
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpMessage.ApiName">
            <summary>
                当前请求调用的API名称
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpMessage.Uri">
            <summary>
                请求地址
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpMessage.HttpMethod">
            <summary>
                HTTP method
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpMessage.Argument">
            <summary>
            接口参数,即Content
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpMessage.HttpContent">
            <summary>
                请求的内容
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpMessage.HttpArguments">
            <summary>
                请求的表单
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpMessage.HttpForms">
            <summary>
                请求的表单
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpMessage.ContentObject">
            <summary>
                请求的内容字典
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpMessage.Start">
            <summary>
                开始时间
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpMessage.End">
            <summary>
                结束时间
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpMessage.CheckRequest(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
                调用检查
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpMessage.CheckApiRoute">
            <summary>
                检查调用内容
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpMessage.GetArgument(System.Int32,System.Int32,ZeroTeam.MessageMVC.Messages.ISerializeProxy,System.Type)">
            <summary>
            取参数值
            </summary>
            <param name="scope">参数范围</param>
            <param name="serializeType">序列化类型</param>
            <param name="serialize">序列化器</param>
            <param name="type">序列化对象</param>
            <returns>值</returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpMessage.GetContent(ZeroTeam.MessageMVC.Messages.ArgumentScope,ZeroTeam.MessageMVC.Messages.ISerializeProxy@)">
            <summary>
            取参数值
            </summary>
            <param name="scope">范围</param>
            <param name="serialize">序列化类型</param>
            <returns>值</returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpMessage.FrameGetValueArgument(System.String,System.Int32,System.Int32,ZeroTeam.MessageMVC.Messages.ISerializeProxy,System.Type)">
            <summary>
            取参数值(动态IL代码调用)  BUG
            </summary>
            <param name="name">名称</param>
            <param name="scope">参数范围</param>
            <param name="serializeType">序列化类型</param>
            <param name="serialize">序列化器</param>
            <param name="type">序列化对象</param>
            <returns>值</returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpMessage.GetValueArgument(System.String,System.Int32,System.Int32,ZeroTeam.MessageMVC.Messages.ISerializeProxy,System.Type)">
            <summary>
            取参数值(动态IL代码调用)  BUG
            </summary>
            <param name="name">名称</param>
            <param name="scope">参数范围</param>
            <param name="serializeType">序列化类型</param>
            <param name="serialize">序列化器</param>
            <param name="type">序列化对象</param>
            <returns>值</returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpMessage.GetScopeArgument(System.String,ZeroTeam.MessageMVC.Messages.ArgumentScope)">
            <summary>
            取参数值
            </summary>
            <param name="name">名称</param>
            <param name="scope">参数范围</param>
            <returns>值</returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpMessage.ArgumentInline(ZeroTeam.MessageMVC.Messages.ISerializeProxy,System.Type,ZeroTeam.MessageMVC.Messages.ISerializeProxy,System.Func{System.Int32,System.String,System.Object})">
            <summary>
            如果未上线且还原参数为字典,否则什么也不做
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpMessage.PrepareInline">
            <summary>
            准备在线(框架内调用)
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpMessage.ZeroTeam#MessageMVC#Messages#IInlineMessage#TraceInfo">
            <summary>
            跟踪消息
            </summary>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Http.HttpProtocol">
            <summary>
            HTTP协议相关的支持
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpProtocol.CrosOption(Microsoft.AspNetCore.Http.HttpResponse)">
            <summary>
                跨域支持
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpProtocol.CrosCall(Microsoft.AspNetCore.Http.HttpResponse)">
            <summary>
                跨域支持
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpProtocol.FormatResponse(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.AspNetCore.Http.HttpResponse)">
            <summary>
                返回类型
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Http.HttpReceiver">
            <summary>
                Http进站出站的处理类
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpReceiver.Call(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
                调用
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpReceiver.ZeroTeam#MessageMVC#Messages#IMessageReceiver#OnResult(ZeroTeam.MessageMVC.Messages.IInlineMessage,System.Object)">
            <summary>
            标明调用结束
            </summary>
            <returns>是否发送成功</returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpReceiver.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpReceiver.ZeroTeam#MessageMVC#Messages#IMessageReceiver#PosterName">
            <summary>
            对应发送器名称
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpReceiver.ZeroTeam#MessageMVC#Messages#IMessageReceiver#Close">
            <summary>
            关闭
            </summary>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Http.HttpClientItem">
            <summary>
            HttpClient预定义服务映射配置
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpClientItem.Name">
            <summary>
            别名
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpClientItem.Url">
            <summary>
            基础地址,包含http://
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpClientItem.UserAgent">
            <summary>
            UserAgent
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpClientItem.ContentType">
            <summary>
            内容类型
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpClientItem.TimeOut">
            <summary>
            超时时间（秒）
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpClientItem.Services">
            <summary>
            绑定的服务列表,组合结果为 [Url]/[Service]/[ApiName]
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Http.HttpClientOption">
            <summary>
            HttpClient预定义服务映射配置
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpClientOption.DefaultUrl">
            <summary>
            默认地址
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpClientOption.DefaultTimeOut">
            <summary>
            默认超时（秒）
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpClientOption.Clients">
            <summary>
            所有节点
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Http.HttpClientOption.Instance">
            <summary>
            所有节点
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Http.HttpClientOption.ServiceMap">
            <summary>
            服务到HttpClientName的查找表.
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Http.MessageRouteOption">
            <summary>
                路由配置
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Http.MessageRouteOption.AgentName">
            <summary>
            标识内部调用的代理名称
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.MessageRouteOption.EnableFormFile">
            <summary>
            启用文件上传
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.MessageRouteOption.EnableAuthToken">
            <summary>
            启用身份令牌
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.MessageRouteOption.EnableHeader">
            <summary>
            启用Header跟踪(如HTTP请求头)
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.MessageRouteOption.HostPaths">
            <summary>
            特殊URL取第几个路径作为服务名称的映射表
            </summary>
            <remarks>
            当启用NGINX代理时,NGINX可能会增加一级节点,而导致默认第1个路径作为服务名称失效
            </remarks>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Http.MessageRouteOption.Instance">
            <summary>
            选项
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Http.HttpAttribute">
            <summary>
                表示Http服务
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpAttribute.#ctor(System.String)">
            <summary>
            构造
            </summary>
            <param name="name"></param>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpAttribute.ServiceName">
            <summary>
            消息节点
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Http.HttpPoster">
            <summary>
                Http生产者
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpPoster.ZeroTeam#MessageMVC#IZeroDependency#Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpPoster.ZeroTeam#MessageMVC#Messages#IMessagePoster#Post(ZeroTeam.MessageMVC.Messages.IInlineMessage)">
            <summary>
            生产消息
            </summary>
            <param name="message">消息</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpPoster.OutGet(System.String,System.String)">
            <summary>
            访问外部
            </summary>
            <param name="service">服务名称，用于查找HttpClient，不会与api拼接</param>
            <param name="api">完整的接口名称+参数</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpPoster.OutPost(System.String,System.String,System.String)">
            <summary>
            访问外部
            </summary>
            <param name="service">服务名称，用于查找HttpClient，不会与api拼接</param>
            <param name="api">完整的接口名称</param>
            <param name="content">内容</param>
            <returns></returns>
        </member>
    </members>
</doc>
