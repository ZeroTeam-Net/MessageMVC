<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ZeroTeam.MessageMVC.Http</name>
    </assembly>
    <members>
        <member name="T:ZeroTeam.MessageMVC.Http.HttpMessage">
            <summary>
                路由数据
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpMessage.ID">
            <summary>
            唯一标识
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpMessage.Extend">
            <summary>
            其他带外内容
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpMessage.Content">
            <summary>
            其他带外内容
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpMessage.Trace">
            <summary>
                跟踪信息
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpMessage.Binary">
            <summary>
            扩展的二进制
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpMessage.HttpContext">
            <summary>
                Http上下文
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpMessage.ApiHost">
            <summary>
                当前请求调用的主机名称
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpMessage.ApiName">
            <summary>
                当前请求调用的API名称
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpMessage.HttpContent">
            <summary>
                请求的内容
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpMessage.Uri">
            <summary>
                请求地址
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpMessage.HttpMethod">
            <summary>
                HTTP method
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpMessage.Arguments">
            <summary>
                请求的表单
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpMessage.Item(System.String)">
            <summary>
            取参数
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Http.HttpMessage.CacheKey">
            <summary>
                缓存键
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Http.HttpMessage.Files">
            <summary>
                文件
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Http.HttpMessage.Redirect">
            <summary>
                执行HTTP重写向吗
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpMessage.Result">
            <summary>
                返回文本值
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpMessage.Exception">
            <summary>
            异常
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Http.HttpMessage.ResultBinary">
            <summary>
                返回二进制值
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Http.HttpMessage.IsFile">
            <summary>
                返回值是否文件
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpMessage.State">
            <summary>
            处理状态
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpMessage.IsSucceed">
            <summary>
                是否正常
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpMessage.Start">
            <summary>
                开始时间
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpMessage.End">
            <summary>
                结束时间
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpMessage.Reset">
            <summary>
            刷新操作
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpMessage.GetArgument(System.String,System.Boolean)">
            <summary>
            取参数值
            </summary>
            <param name="name"></param>
            <param name="isBaseValue"></param>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpMessage.CheckRequest(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
                调用检查
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpMessage.CheckApiRoute">
            <summary>
                检查调用内容
            </summary>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Http.HttpProtocol">
            <summary>
            HTTP协议相关的支持
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpProtocol.CrosOption(Microsoft.AspNetCore.Http.HttpResponse)">
            <summary>
                跨域支持
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpProtocol.CrosCall(Microsoft.AspNetCore.Http.HttpResponse)">
            <summary>
                跨域支持
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpProtocol.FormatResponse(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.AspNetCore.Http.HttpResponse)">
            <summary>
                返回类型
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Http.HttpRoute">
            <summary>
                调用映射核心类
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpRoute.Option">
            <summary>
            选项
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpRoute.Initialize(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                初始化
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpRoute.Call(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
                POST调用
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpRoute.CallTask(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
                调用
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Http.HttpTransfer">
            <summary>
                Http进站出站的处理类
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpTransfer.ZeroTeam#MessageMVC#MessageTransfers#INetTransfer#Close">
            <summary>
            关闭
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpTransfer.ZeroTeam#MessageMVC#MessageTransfers#INetTransfer#OnResult(ZeroTeam.MessageMVC.Messages.IMessageItem,System.Object)">
            <summary>
            标明调用结束
            </summary>
            <returns>是否发送成功</returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Http.MessageRouteOption">
            <summary>
                路由配置
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.MessageRouteOption.EnableFormFile">
            <summary>
            启用文件上传
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.MessageRouteOption.EnableAuthToken">
            <summary>
            启用身份令牌
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.MessageRouteOption.FastCall">
            <summary>
            启用快速调用,即直接使用ApiExecuter
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.MessageRouteOption.EnableHeader">
            <summary>
            启用Header跟踪(如HTTP请求头)
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.MessageRouteOption.HostPaths">
            <summary>
            特殊URL取第几个路径作为服务名称的映射表
            </summary>
            <remarks>
            当启用NGINX代理时,NGINX可能会增加一级节点,而导致默认第1个路径作为服务名称失效
            </remarks>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Http.HttpPoster">
            <summary>
                Http生产者
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpPoster.State">
            <summary>
            运行状态
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Http.HttpPoster.ServiceMap">
            <summary>
            服务到HttpClientName的查找表.
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpPoster.ZeroTeam#MessageMVC#MessageTransfers#IMessagePoster#Initialize">
            <summary>
                初始化
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpPoster.ZeroTeam#MessageMVC#MessageTransfers#IMessagePoster#Post(ZeroTeam.MessageMVC.Messages.IMessageItem)">
            <summary>
            生产消息
            </summary>
            <param name="item">消息</param>
            <returns></returns>
        </member>
    </members>
</doc>
