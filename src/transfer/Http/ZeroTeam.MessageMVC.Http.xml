<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ZeroTeam.MessageMVC.Http</name>
    </assembly>
    <members>
        <member name="T:ZeroTeam.MessageMVC.Http.HttpApp">
            <summary>
            Http应用
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpApp.AddMessageMvcHttpClient(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                初始化
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpApp.AddMessageMvcHttp(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                初始化
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpApp.UseMessageMVC(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
                初始化
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpApp.UseMessageMVC(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})">
            <summary>
                配置使用MessageMVC
            </summary>
            <param name="builder">主机生成器</param>
            <param name="registAction">配置注册方法</param>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpApp.UseMessageMVC(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.Boolean,System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})">
            <summary>
                配置使用MessageMVC
            </summary>
            <param name="builder">主机生成器</param>
            <param name="autoDiscove">是否自动发现API方法</param>
            <param name="registAction">配置注册方法</param>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpApp.UseMessageMVC(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection},System.Action)">
            <summary>
                配置使用MessageMVC
            </summary>
            <param name="builder">主机生成器</param>
            <param name="registAction">配置注册方法</param>
            <param name="discovery">自定义API发现方法</param>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpApp.UseMessageMVC(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection},System.Boolean,System.Action)">
            <summary>
                配置使用MessageMVC
            </summary>
            <param name="builder">主机生成器</param>
            <param name="registAction">配置注册方法</param>
            <param name="autoDiscovery">自动发现</param>
            <param name="discovery">自定义API发现方法</param>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpApp.Call(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
                调用
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Http.HttpMessage">
            <summary>
                路由数据
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpMessage.ZeroTeam#MessageMVC#Messages#IInlineMessage#MessageType">
            <summary>
            消息类型
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpMessage.RequestId">
            <summary>
            请求ID
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpMessage.IsOutAccess">
            <summary>
            是否外部访问
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpMessage.ArgumentData">
            <summary>
            实体参数
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpMessage.ExtensionDictionary">
            <summary>
            字典参数
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpMessage.BinaryDictionary">
            <summary>
            二进制字典参数
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpMessage.ResultData">
            <summary>
            处理结果,对应状态的解释信息
            </summary>
            <remarks>
            未消费:无内容
            已接受:无内容
            格式错误 : 无内容
            无处理方法 : 无内容
            处理异常 : 异常信息
            处理失败 : 失败内容或原因
            处理成功 : 结果信息或无
            </remarks>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpMessage.ResultSerializer">
            <summary>
                返回值序列化对象
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpMessage.ResultCreater">
            <summary>
                返回值构造对象
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpMessage.HttpContext">
            <summary>
                Http上下文
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpMessage.Uri">
            <summary>
                请求地址
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpMessage.HttpMethod">
            <summary>
                HTTP method
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpMessage.HttpContent">
            <summary>
                请求的内容
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpMessage.ContentObject">
            <summary>
                请求的内容字典
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpMessage.Start">
            <summary>
                开始时间
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpMessage.End">
            <summary>
                结束时间
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpMessage.GetArgument(System.Int32,System.Int32,ZeroTeam.MessageMVC.Messages.ISerializeProxy,System.Type)">
            <summary>
            取参数值
            </summary>
            <param name="scope">参数范围</param>
            <param name="serializeType">序列化类型</param>
            <param name="serialize">序列化器</param>
            <param name="type">序列化对象</param>
            <returns>值</returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpMessage.GetContent(ZeroTeam.MessageMVC.Messages.ArgumentScope,ZeroTeam.MessageMVC.Messages.ISerializeProxy@)">
            <summary>
            取参数值
            </summary>
            <param name="scope">范围</param>
            <param name="serialize">序列化类型</param>
            <returns>值</returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpMessage.GetValueArgument(System.String,System.Int32,System.Int32,ZeroTeam.MessageMVC.Messages.ISerializeProxy,System.Type)">
            <summary>
            取参数值(动态IL代码调用)  BUG
            </summary>
            <param name="name">名称</param>
            <param name="scope">参数范围</param>
            <param name="serializeType">序列化类型</param>
            <param name="serialize">序列化器</param>
            <param name="type">序列化对象</param>
            <returns>值</returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpMessage.GetScopeArgument(System.String,ZeroTeam.MessageMVC.Messages.ArgumentScope)">
            <summary>
            取参数值
            </summary>
            <param name="name">名称</param>
            <param name="scope">参数范围</param>
            <returns>值</returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpMessage.ZeroTeam#MessageMVC#Messages#IInlineMessage#Look">
            <summary>
            跟踪消息
            </summary>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Http.HttpMessageReader">
            <summary>
            Http消息体读取器
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Http.HttpMessageReader.HttpContext">
            <summary>
                请求的内容
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Http.HttpMessageReader.Message">
            <summary>
            消息体
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpMessageReader.CheckRequest(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
                调用检查
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpMessageReader.CheckApiRoute">
            <summary>
                检查调用内容
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpMessageReader.Prepare">
            <summary>
            准备在线(框架内调用)
            </summary>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Http.HttpProtocol">
            <summary>
            HTTP协议相关的支持
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpProtocol.CrosOption(Microsoft.AspNetCore.Http.HttpResponse)">
            <summary>
                跨域支持
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpProtocol.CrosCall(Microsoft.AspNetCore.Http.HttpResponse)">
            <summary>
                跨域支持
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Http.HttpWriter">
            <summary>
                Http进站出站的处理类
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpWriter.ZeroTeam#MessageMVC#Messages#IMessageWriter#OnResult(ZeroTeam.MessageMVC.Messages.IInlineMessage,System.Object)">
            <summary>
            标明调用结束
            </summary>
            <returns>是否发送成功</returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Http.HttpClientItem">
            <summary>
            HttpClient预定义服务映射配置
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpClientItem.Name">
            <summary>
            别名
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpClientItem.Url">
            <summary>
            基础地址,包含http://
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpClientItem.UserAgent">
            <summary>
            UserAgent
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpClientItem.ContentType">
            <summary>
            内容类型
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpClientItem.TimeOut">
            <summary>
            超时时间（秒）
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpClientItem.Alias">
            <summary>
            绑定的服务别名,组合结果为 [Url]/[Service]/[ApiName]
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Http.HttpClientOption">
            <summary>
            HttpClient预定义服务映射配置
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpClientOption.DefaultUrl">
            <summary>
            默认地址
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpClientOption.DefaultTimeOut">
            <summary>
            默认超时（秒）
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpClientOption.IncludeTrace">
            <summary>
            可以包含的跟踪信息
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpClientOption.Services">
            <summary>
            所有服务
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Http.HttpClientOption.ServiceMap">
            <summary>
            服务到HttpClientName的查找表.
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Http.HttpClientOption.Instance">
            <summary>
            实例
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpClientOption.ZeroTeam#MessageMVC#IZeroOption#SupperUrl">
            <summary>
            支持地址
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpClientOption.ZeroTeam#MessageMVC#IZeroOption#OptionName">
            <summary>
            配置名称
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpClientOption.ZeroTeam#MessageMVC#IZeroOption#SectionName">
            <summary>
            节点名称
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpClientOption.ZeroTeam#MessageMVC#IZeroOption#IsDynamic">
            <summary>
            是否动态配置
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Http.MessageRouteOption">
            <summary>
                路由配置
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Http.MessageRouteOption.AgentName">
            <summary>
            标识内部调用的代理名称
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.MessageRouteOption.HostPaths">
            <summary>
            特殊URL取第几个路径作为服务名称的映射表
            </summary>
            <remarks>
            当启用NGINX代理时,NGINX可能会增加一级节点,而导致默认第1个路径作为服务名称失效
            </remarks>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Http.MessageRouteOption.Instance">
            <summary>
            选项
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Http.HttpPoster">
            <summary>
                Http生产者
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpPoster.ZeroTeam#MessageMVC#IZeroDiscover#Discovery">
            <summary>
             发现
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Http.HttpPoster.ZeroTeam#MessageMVC#IZeroDependency#Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpPoster.ZeroTeam#MessageMVC#Messages#IMessagePoster#Post(ZeroTeam.MessageMVC.Messages.IInlineMessage)">
            <summary>
            生产消息
            </summary>
            <param name="message">消息</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpPoster.OutGet(System.String,System.String)">
            <summary>
            访问外部
            </summary>
            <param name="service">服务名称，用于查找HttpClient，不会与api拼接</param>
            <param name="api">完整的接口名称+参数</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpPoster.OutPost(System.String,System.String,System.String)">
            <summary>
            访问外部
            </summary>
            <param name="service">服务名称，用于查找HttpClient，不会与api拼接</param>
            <param name="api">完整的接口名称</param>
            <param name="argument">内容</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Http.HttpPoster.OutFormPost(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            访问外部
            </summary>
            <param name="service">服务名称，用于查找HttpClient，不会与api拼接</param>
            <param name="api">完整的接口名称</param>
            <param name="forms">Form内容</param>
            <returns></returns>
        </member>
    </members>
</doc>
