<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ZeroTeam.MessageMVC.Kafka</name>
    </assembly>
    <members>
        <member name="T:ZeroTeam.MessageMVC.Kafka.KafkaConsumer">
            <summary>
            Kafka消息队列消费者
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Kafka.KafkaConsumer.CallCount">
            <summary>
            调用计数
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Kafka.KafkaConsumer.WaitCount">
            <summary>
            调用计数
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Kafka.KafkaConsumer.ErrorCount">
            <summary>
            调用计数
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.Kafka.KafkaConsumer.SuccessCount">
            <summary>
            调用计数
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Kafka.KafkaConsumer.ZeroTeam#MessageMVC#Messages#IMessageReceiver#Prepare">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Kafka.KafkaConsumer.OnMessagePush(ZeroTeam.MessageMVC.Messages.IMessageItem,Confluent.Kafka.ConsumeResult{Confluent.Kafka.Ignore,System.String})">
            <summary>
            消息处理
            </summary>
            <param name="message"></param>
            <param name="consumeResult"></param>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Kafka.KafkaConsumer.ZeroTeam#MessageMVC#Messages#IMessageReceiver#LoopBegin">
            <summary>
            同步运行状态
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Kafka.KafkaConsumer.ZeroTeam#MessageMVC#Messages#IMessageReceiver#LoopComplete">
            <summary>
            同步关闭状态
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Kafka.KafkaConsumer.ZeroTeam#MessageMVC#Messages#IMessageReceiver#OnResult(ZeroTeam.MessageMVC.Messages.IMessageItem,System.Object)">
            <summary>
            标明调用结束
            </summary>
            <returns>是否发送成功</returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Kafka.KafkaMessageMVC">
            <summary>
            KafkaMvc
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Kafka.KafkaMessageMVC.UseKafka(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            使用KafkaMVC
            </summary>
            <param name="services"></param>
        </member>
        <member name="T:ZeroTeam.MessageMVC.Kafka.KafkaPoster">
            <summary>
                Kafka消息发布
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Kafka.KafkaPoster.State">
            <summary>
            运行状态
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Kafka.KafkaPoster.ZeroTeam#MessageMVC#IZeroMiddleware#Name">
            <summary>
            实例名称
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.Kafka.KafkaPoster.ZeroTeam#MessageMVC#IZeroMiddleware#Level">
            <summary>
            等级
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Kafka.KafkaPoster.Initialize">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Kafka.KafkaPoster.ZeroTeam#MessageMVC#IFlowMiddleware#Close">
            <summary>
                关闭
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.Kafka.KafkaPoster.Post(ZeroTeam.MessageMVC.Messages.IMessageItem)">
            <summary>
            生产消息
            </summary>
            <param name="message">消息</param>
            <returns></returns>
        </member>
    </members>
</doc>
