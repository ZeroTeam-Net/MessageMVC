<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ZeroTeam.MessageMVC.RabbitMQ</name>
    </assembly>
    <members>
        <member name="T:ZeroTeam.MessageMVC.RabbitMQ.RabbitMQApp">
            <summary>
            RabbitMQ
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.RabbitMQ.RabbitMQApp.AddMessageMvcRabbitMQ(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            使用RabbitMQ
            </summary>
            <param name="services"></param>
        </member>
        <member name="T:ZeroTeam.MessageMVC.RabbitMQ.RabbitMQConsumerAttribute">
            <summary>
                表示RabbitMQ消费者
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.RabbitMQ.RabbitMQConsumerAttribute.#ctor(System.String)">
            <summary>
            构造
            </summary>
            <param name="queue">队列名称</param>
        </member>
        <member name="P:ZeroTeam.MessageMVC.RabbitMQ.RabbitMQConsumerAttribute.Queue">
            <summary>
            队列名称
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.RabbitMQ.RabbitMQConsumer">
            <summary>
            RabbitMQ消息队列消费者
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.RabbitMQ.RabbitMQConsumer.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.RabbitMQ.RabbitMQConsumer.ZeroTeam#MessageMVC#Messages#IMessageReceiver#PosterName">
            <summary>
            对应发送器名称
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.RabbitMQ.RabbitMQConsumer.channel">
            <summary>
            当前通道
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.RabbitMQ.RabbitMQConsumer.consumer">
            <summary>
            消费对象
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.RabbitMQ.RabbitMQConsumer.Option">
            <summary>
            配置
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.RabbitMQ.RabbitMQConsumer.completionSource">
            <summary>
            轮询的Task
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.RabbitMQ.RabbitMQConsumer.OnMessagePush(System.Object,RabbitMQ.Client.Events.BasicDeliverEventArgs)">
            <summary>
            消息处理
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.RabbitMQ.RabbitMQConsumer.ZeroTeam#MessageMVC#Messages#IMessageWriter#OnResult(ZeroTeam.MessageMVC.Messages.IInlineMessage,System.Object)">
            <summary>
            标明调用结束
            </summary>
            <returns>是否发送成功</returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.RabbitMQ.RabbitMQConsumer.ZeroTeam#MessageMVC#ILifeFlow#Closing">
            <summary>
            同步关闭状态
            </summary>
            <returns></returns>
        </member>
        <member name="F:ZeroTeam.MessageMVC.RabbitMQ.RabbitMQConsumer.connection">
            <summary>
            连接对象
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.RabbitMQ.RabbitMQConsumer.ZeroTeam#MessageMVC#Messages#IMessageReceiver#LoopBegin">
            <summary>
            同步运行状态
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.RabbitMQ.RabbitMQConsumer.ZeroTeam#MessageMVC#ILifeFlow#Close">
            <summary>
            同步关闭状态
            </summary>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.RabbitMQ.RabbitMQFlow">
            <summary>
                RabbitMQ流程处理
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.RabbitMQ.RabbitMQFlow.Instance">
            <summary>
            单例
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.RabbitMQ.RabbitMQFlow.connection">
            <summary>
            连接对象
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.RabbitMQ.RabbitMQFlow.ZeroTeam#MessageMVC#IZeroDependency#Name">
            <summary>
            实例名称
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.RabbitMQ.RabbitMQFlow.ZeroTeam#MessageMVC#IZeroMiddleware#Level">
            <summary>
            等级
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.RabbitMQ.RabbitMQFlow.ZeroTeam#MessageMVC#ILifeFlow#Open">
            <summary>
            开启
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.RabbitMQ.RabbitMQFlow.ZeroTeam#MessageMVC#ILifeFlow#Destory">
            <summary>
            关闭
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.RabbitMQ.RabbitMQFlow.channels">
            <summary>
            当前通道
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.RabbitMQ.RabbitMQFlow.GetChannel(System.String)">
            <summary>
            取得通道
            </summary>
            <param name="name">消息</param>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.RabbitMQ.RabbitMQOption">
            <summary>
            RabbitMQ配置
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.RabbitMQ.RabbitMQOption.Instance">
            <summary>
             唯一实例 
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.RabbitMQ.RabbitMQOption.HostName">
            <summary>
            The host to connect to.
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.RabbitMQ.RabbitMQOption.Port">
            <summary>
            The port to connect on. RabbitMQ.Client.AmqpTcpEndpoint.UseDefaultPort indicates. the default for the protocol should be used.
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.RabbitMQ.RabbitMQOption.UserName">
            <summary>
            Username to use when authenticating to the server.
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.RabbitMQ.RabbitMQOption.Password">
            <summary>
            Password to use when authenticating to the server.
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.RabbitMQ.RabbitMQOption.ItemOptions">
            <summary>
            节点配置
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.RabbitMQ.RabbitMQOption.Concurrency">
            <summary>
            同时处理数据最大并发数
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.RabbitMQ.RabbitMQOption.AsyncPost">
            <summary>
            是否异步发送
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.RabbitMQ.RabbitMQWrokType">
            <summary>
            工作模式
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.RabbitMQ.RabbitMQWrokType.Default">
            <summary>
            缺省模式（无Exchange）
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.RabbitMQ.RabbitMQWrokType.Fanout">
            <summary>
            发布订阅模式
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.RabbitMQ.RabbitMQWrokType.Direct">
            <summary>
            路由模式
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.RabbitMQ.RabbitMQWrokType.Topic">
            <summary>
            通配符模式
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.RabbitMQ.RabbitMQItemOption">
            <summary>
            RabbitMQ节点配置
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.RabbitMQ.RabbitMQItemOption.WrokType">
            <summary>
            工作模式
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.RabbitMQ.RabbitMQItemOption.Qos">
            <summary>
            并行消费
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.RabbitMQ.RabbitMQItemOption.Durable">
            <summary>
            是否缓存
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.RabbitMQ.RabbitMQItemOption.AckBySuccess">
            <summary>
            是否成功后确认Ack
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.RabbitMQ.RabbitMQItemOption.AutoDelete">
            <summary>
            自动删除
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.RabbitMQ.RabbitMQItemOption.Exclusive">
            <summary>
            排外
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.RabbitMQ.RabbitMQItemOption.ExchangeName">
            <summary>
            交换机
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.RabbitMQ.RabbitMQPoster">
            <summary>
                RabbitMQ消息发布
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.RabbitMQ.RabbitMQPoster.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.RabbitMQ.RabbitMQPoster.DoPost(ZeroTeam.MessageMVC.MessageQueue.QueueItem)">
            <summary>
            生产消息
            </summary>
            <param name="item">消息</param>
            <returns></returns>
        </member>
    </members>
</doc>
