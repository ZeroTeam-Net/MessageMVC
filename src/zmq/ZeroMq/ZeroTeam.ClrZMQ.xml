<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ZeroTeam.ZeroMQ</name>
    </assembly>
    <members>
        <member name="T:ZeroTeam.ZeroMQ.ZContext">
            <summary>
            Creates <see cref="T:ZeroTeam.ZeroMQ.ZSocket"/> instances within a process boundary.
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZContext.Encoding">
            <summary>
            Gets and protected sets the default Encoding.
            Note: Do not set the Encoding after ZContext.Create.
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZContext.AliveSockets">
            <summary>
            当前活动的连接
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZContext.Initialize">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZContext.Destroy">
            <summary>
                关闭
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZContext.IsAlive">
            <summary>
            是否存活
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZContext._current">
            <summary>
            当前默认实例
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZContext.Current">
            <summary>
            当前默认实例
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZContext.#ctor">
            <summary>
            Create a <see cref="T:ZeroTeam.ZeroMQ.ZContext"/> instance.
            </summary>
            <returns><see cref="T:ZeroTeam.ZeroMQ.ZContext"/></returns>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZContext.ContextPtr">
            <summary>
            Gets a handle to the native ZeroTeam.ZeroMQ context.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZContext.Has(System.String)">
            
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZContext.Proxy(ZeroTeam.ZeroMQ.ZSocket,ZeroTeam.ZeroMQ.ZSocket)">
            <summary>
            代理
            </summary>
            <param name="frontend"></param>
            <param name="backend"></param>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZContext.Proxy(ZeroTeam.ZeroMQ.ZSocket,ZeroTeam.ZeroMQ.ZSocket,ZeroTeam.ZeroMQ.ZError@)">
            <summary>
            代理
            </summary>
            <param name="frontend"></param>
            <param name="backend"></param>
            <param name="error"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZContext.Proxy(ZeroTeam.ZeroMQ.ZSocket,ZeroTeam.ZeroMQ.ZSocket,ZeroTeam.ZeroMQ.ZSocket)">
            <summary>
            代理
            </summary>
            <param name="frontend"></param>
            <param name="backend"></param>
            <param name="capture"></param>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZContext.Proxy(ZeroTeam.ZeroMQ.ZSocket,ZeroTeam.ZeroMQ.ZSocket,ZeroTeam.ZeroMQ.ZSocket,ZeroTeam.ZeroMQ.ZError@)">
            <summary>
            代理
            </summary>
            <param name="frontend"></param>
            <param name="backend"></param>
            <param name="capture"></param>
            <param name="error"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZContext.ProxySteerable(ZeroTeam.ZeroMQ.ZSocket,ZeroTeam.ZeroMQ.ZSocket,ZeroTeam.ZeroMQ.ZSocket)">
            <summary>
            代理
            </summary>
            <param name="frontend"></param>
            <param name="backend"></param>
            <param name="control"></param>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZContext.ProxySteerable(ZeroTeam.ZeroMQ.ZSocket,ZeroTeam.ZeroMQ.ZSocket,ZeroTeam.ZeroMQ.ZSocket,ZeroTeam.ZeroMQ.ZError@)">
            <summary>
            代理
            </summary>
            <param name="frontend"></param>
            <param name="backend"></param>
            <param name="control"></param>
            <param name="error"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZContext.ProxySteerable(ZeroTeam.ZeroMQ.ZSocket,ZeroTeam.ZeroMQ.ZSocket,ZeroTeam.ZeroMQ.ZSocket,ZeroTeam.ZeroMQ.ZSocket)">
            <summary>
            代理
            </summary>
            <param name="frontend"></param>
            <param name="backend"></param>
            <param name="capture"></param>
            <param name="control"></param>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZContext.ProxySteerable(ZeroTeam.ZeroMQ.ZSocket,ZeroTeam.ZeroMQ.ZSocket,ZeroTeam.ZeroMQ.ZSocket,ZeroTeam.ZeroMQ.ZSocket,ZeroTeam.ZeroMQ.ZError@)">
            <summary>
            代理
            </summary>
            <param name="frontend"></param>
            <param name="backend"></param>
            <param name="capture"></param>
            <param name="control"></param>
            <param name="error"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZContext.SetOption(ZeroTeam.ZeroMQ.ZContextOption,System.Int32)">
            <summary>
            设置Zmq上下文配置
            </summary>
            <param name="option"></param>
            <param name="optionValue"></param>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZContext.GetOption(ZeroTeam.ZeroMQ.ZContextOption)">
            <summary>
            取Zmq上下文配置
            </summary>
            <param name="option"></param>
            <returns></returns>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZContext.ThreadPoolSize">
            <summary>
            Gets or sets the size of the thread pool for the current context (default = 1).
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZContext.MaxSockets">
            <summary>
            Gets or sets the maximum number of sockets for the current context (default = 1024).
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZContext.IPv6Enabled">
            <summary>
            Gets or sets the supported socket protocol(s) when using TCP transports. (Default = ProtocolType.Ipv4).
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZContext.Shutdown">
            <summary>
            Shutdown the ZeroTeam.ZeroMQ context.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZContext.Shutdown(ZeroTeam.ZeroMQ.ZError@)">
            <summary>
            Shutdown the ZeroTeam.ZeroMQ context.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZContext.DoDispose">
            <inheritdoc />
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZContext.AddSocket(ZeroTeam.ZeroMQ.ZSocket)">
            <summary>
            Terminate the ZeroTeam.ZeroMQ context.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZContext.RemoveSocket(ZeroTeam.ZeroMQ.ZSocket)">
            <summary>
            从资源池中删除
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZContext.Terminate(ZeroTeam.ZeroMQ.ZError@)">
            <summary>
            终止所有网络资源
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZContext.Terminate">
            <summary>
            Terminate the ZeroTeam.ZeroMQ context.
            </summary>
        </member>
        <member name="T:ZeroTeam.ZeroMQ.Devices.PubSubDevice">
            <summary>
            Device for a Publisher and Subscribers
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.Devices.PubSubDevice.FrontendType">
            <summary>
            The frontend <see cref="T:ZeroTeam.ZeroMQ.ZSocketType"/> for a forwarder device.
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.Devices.PubSubDevice.BackendType">
            <summary>
            The backend <see cref="T:ZeroTeam.ZeroMQ.ZSocketType"/> for a forwarder device.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.Devices.PubSubDevice.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ZeroTeam.ZeroMQ.Devices.PubSubDevice"/> class.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.Devices.PubSubDevice.#ctor(ZeroTeam.ZeroMQ.ZContext)">
            <summary>
            Initializes a new instance of the <see cref="T:ZeroTeam.ZeroMQ.Devices.PubSubDevice"/> class.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.Devices.PubSubDevice.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ZeroTeam.ZeroMQ.Devices.PubSubDevice"/> class.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.Devices.PubSubDevice.#ctor(ZeroTeam.ZeroMQ.ZContext,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ZeroTeam.ZeroMQ.Devices.PubSubDevice"/> class.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.Devices.PubSubDevice.FrontendHandler(ZeroTeam.ZeroMQ.ZSocket,ZeroTeam.ZeroMQ.ZMessage@,ZeroTeam.ZeroMQ.ZError@)">
            <summary>
            Forwards requests from the frontend socket to the backend socket.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.Devices.PubSubDevice.BackendHandler(ZeroTeam.ZeroMQ.ZSocket,ZeroTeam.ZeroMQ.ZMessage@,ZeroTeam.ZeroMQ.ZError@)">
            <summary>
            PubSub Forwards the Subscription messages
            </summary>
        </member>
        <member name="T:ZeroTeam.ZeroMQ.Devices.PushPullDevice">
            <summary>
            Queuing Push-Pull Device
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.Devices.PushPullDevice.FrontendType">
            <summary>
            The frontend <see cref="T:ZeroTeam.ZeroMQ.ZSocketType"/> for a streamer device.
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.Devices.PushPullDevice.BackendType">
            <summary>
            The backend <see cref="T:ZeroTeam.ZeroMQ.ZSocketType"/> for a streamer device.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.Devices.PushPullDevice.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ZeroTeam.ZeroMQ.Devices.PushPullDevice"/> class.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.Devices.PushPullDevice.#ctor(ZeroTeam.ZeroMQ.ZContext)">
            <summary>
            Initializes a new instance of the <see cref="T:ZeroTeam.ZeroMQ.Devices.PushPullDevice"/> class.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.Devices.PushPullDevice.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ZeroTeam.ZeroMQ.Devices.PushPullDevice"/> class.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.Devices.PushPullDevice.#ctor(ZeroTeam.ZeroMQ.ZContext,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ZeroTeam.ZeroMQ.Devices.PushPullDevice"/> class.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.Devices.PushPullDevice.FrontendHandler(ZeroTeam.ZeroMQ.ZSocket,ZeroTeam.ZeroMQ.ZMessage@,ZeroTeam.ZeroMQ.ZError@)">
            <summary>
            Forwards requests from the frontend socket to the backend socket.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.Devices.PushPullDevice.BackendHandler(ZeroTeam.ZeroMQ.ZSocket,ZeroTeam.ZeroMQ.ZMessage@,ZeroTeam.ZeroMQ.ZError@)">
            <summary>
            Not implemented for the <see cref="T:ZeroTeam.ZeroMQ.Devices.PushPullDevice"/>.
            </summary>
        </member>
        <member name="T:ZeroTeam.ZeroMQ.Devices.RouterDealerDevice">
            <summary>
            A Device on Routers and Dealers
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.Devices.RouterDealerDevice.FrontendType">
            <summary>
            The frontend <see cref="T:ZeroTeam.ZeroMQ.ZSocketType"/> for a queue device.
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.Devices.RouterDealerDevice.BackendType">
            <summary>
            The backend <see cref="T:ZeroTeam.ZeroMQ.ZSocketType"/> for a queue device.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.Devices.RouterDealerDevice.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ZeroTeam.ZeroMQ.Devices.RouterDealerDevice"/> class.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.Devices.RouterDealerDevice.#ctor(ZeroTeam.ZeroMQ.ZContext)">
            <summary>
            Initializes a new instance of the <see cref="T:ZeroTeam.ZeroMQ.Devices.RouterDealerDevice"/> class.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.Devices.RouterDealerDevice.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ZeroTeam.ZeroMQ.Devices.RouterDealerDevice"/> class
            and binds to the specified Frontend and Backend address.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.Devices.RouterDealerDevice.#ctor(ZeroTeam.ZeroMQ.ZContext,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ZeroTeam.ZeroMQ.Devices.RouterDealerDevice"/> class
            and binds to the specified Frontend and Backend address.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.Devices.RouterDealerDevice.FrontendHandler(ZeroTeam.ZeroMQ.ZSocket,ZeroTeam.ZeroMQ.ZMessage@,ZeroTeam.ZeroMQ.ZError@)">
            <summary>
            Forwards requests from the frontend socket to the backend socket.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.Devices.RouterDealerDevice.BackendHandler(ZeroTeam.ZeroMQ.ZSocket,ZeroTeam.ZeroMQ.ZMessage@,ZeroTeam.ZeroMQ.ZError@)">
            <summary>
            Forwards replies from the backend socket to the frontend socket.
            </summary>
        </member>
        <member name="T:ZeroTeam.ZeroMQ.Devices.StreamDealerDevice">
            <summary>
            The Stream to Dealer is a Device for reading 
            and sending REPlies to TCP
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.Devices.StreamDealerDevice.FrontendType">
            <summary>
            The frontend <see cref="T:ZeroTeam.ZeroMQ.ZSocketType"/> for a queue device.
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.Devices.StreamDealerDevice.BackendType">
            <summary>
            The backend <see cref="T:ZeroTeam.ZeroMQ.ZSocketType"/> for a queue device.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.Devices.StreamDealerDevice.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ZeroTeam.ZeroMQ.Devices.StreamDealerDevice"/> class.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.Devices.StreamDealerDevice.#ctor(ZeroTeam.ZeroMQ.ZContext)">
            <summary>
            Initializes a new instance of the <see cref="T:ZeroTeam.ZeroMQ.Devices.StreamDealerDevice"/> class.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.Devices.StreamDealerDevice.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ZeroTeam.ZeroMQ.Devices.StreamDealerDevice"/> class.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.Devices.StreamDealerDevice.#ctor(ZeroTeam.ZeroMQ.ZContext,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ZeroTeam.ZeroMQ.Devices.StreamDealerDevice"/> class.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.Devices.StreamDealerDevice.FrontendHandler(ZeroTeam.ZeroMQ.ZSocket,ZeroTeam.ZeroMQ.ZMessage@,ZeroTeam.ZeroMQ.ZError@)">
            <summary>
            Forwards requests from the frontend socket to the backend socket.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.Devices.StreamDealerDevice.BackendHandler(ZeroTeam.ZeroMQ.ZSocket,ZeroTeam.ZeroMQ.ZMessage@,ZeroTeam.ZeroMQ.ZError@)">
            <summary>
            Forwards replies from the backend socket to the frontend socket.
            </summary>
        </member>
        <member name="T:ZeroTeam.ZeroMQ.ZDevice">
            <summary>
            Forwards messages received by a front-end socket to a back-end socket, from which
            they are then sent.
            </summary>
            <remarks>
            The base implementation of <see cref="T:ZeroTeam.ZeroMQ.ZDevice"/> is <b>not</b> threadsafe. Do not construct
            a device with sockets that were created in separate threads or separate contexts.
            </remarks>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZDevice.PollingInterval">
            <summary>
            The polling interval in milliseconds.
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZDevice.Context">
            <summary>
            The ZContext reference, to not become finalized
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZDevice.FrontendSocket">
            <summary>
            The frontend socket that will normally pass messages to <see cref="F:ZeroTeam.ZeroMQ.ZDevice.BackendSocket"/>.
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZDevice.BackendSocket">
            <summary>
            The backend socket that will normally receive messages from (and possibly send replies to) <see cref="F:ZeroTeam.ZeroMQ.ZDevice.FrontendSocket"/>.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZDevice.#ctor">
            <summary>
            You are using ZContext.Current!
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZDevice.#ctor(ZeroTeam.ZeroMQ.ZSocketType,ZeroTeam.ZeroMQ.ZSocketType)">
            <summary>
            
            </summary>
            <param name="frontendType"></param>
            <param name="backendType"></param>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZDevice.#ctor(ZeroTeam.ZeroMQ.ZContext,ZeroTeam.ZeroMQ.ZSocketType,ZeroTeam.ZeroMQ.ZSocketType)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="frontendType"></param>
            <param name="backendType"></param>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZDevice.Initialize(ZeroTeam.ZeroMQ.ZSocketType,ZeroTeam.ZeroMQ.ZSocketType,ZeroTeam.ZeroMQ.ZError@)">
            <summary>
            
            </summary>
            <param name="frontendType"></param>
            <param name="backendType"></param>
            <param name="error"></param>
            <returns></returns>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZDevice.BackendSetup">
            <summary>
            Gets a <see cref="T:ZeroTeam.ZeroMQ.ZSocketSetup"/> for configuring the frontend socket.
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZDevice.FrontendSetup">
            <summary>
            Gets a <see cref="T:ZeroTeam.ZeroMQ.ZSocketSetup"/> for configuring the backend socket.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZDevice.Initialize">
            <summary>
            Initializes the frontend and backend sockets. Called automatically when starting the device.
            If called multiple times, will only execute once.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZDevice.Run">
            <summary>
            Start the device in the current thread. Should be used by implementations of the method.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZDevice.FrontendHandler(ZeroTeam.ZeroMQ.ZSocket,ZeroTeam.ZeroMQ.ZMessage@,ZeroTeam.ZeroMQ.ZError@)">
            <summary>
            
            </summary>
            <param name="socket"></param>
            <param name="message"></param>
            <param name="error"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZDevice.BackendHandler(ZeroTeam.ZeroMQ.ZSocket,ZeroTeam.ZeroMQ.ZMessage@,ZeroTeam.ZeroMQ.ZError@)">
            <summary>
            
            </summary>
            <param name="args"></param>
            <param name="message"></param>
            <param name="error"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZDevice.Dispose(System.Boolean)">
            <summary>
            Stops the device and releases the underlying sockets. Optionally disposes of managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="T:ZeroTeam.ZeroMQ.ZeroRPC.ApiCallItem">
            <summary>
            Api调用节点
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.ApiCallItem.LocalId">
            <summary>
            站点请求ID(队列使用)
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.ApiCallItem.Caller">
            <summary>
            请求者
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.ApiCallItem.CallerName">
            <summary>
            请求者
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.ApiCallItem.Title">
            <summary>
            广播标题
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.ApiCallItem.Command">
            <summary>
            命令
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.ApiCallItem.ApiName">
            <summary>
            API名称
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.ApiCallItem.Argument">
            <summary>
            请求参数
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.ApiCallItem.Extend">
            <summary>
            请求参数
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ApiCallItem.Files">
            <summary>
                文件
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.ApiCallItem.Result">
            <summary>
            返回
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.ApiCallItem.EndTag">
            <summary>
            说明帧结束标识
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.ApiCallItem.Binary">
            <summary>
            扩展的二进制
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.ApiCallItem.Status">
            <summary>
            执行状态
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.ApiCallItem.Originals">
            <summary>
            原样帧
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZeroRPC.ApiCallItem.Unpack(ZeroTeam.ZeroMQ.ZMessage,ZeroTeam.ZeroMQ.ZeroRPC.ApiCallItem@)">
            <summary>
            解析数据
            </summary>
            <param name="messages"></param>
            <param name="callItem"></param>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.ZeroMQ.ZeroRPC.IZeroState">
            <summary>
            返回值
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.IZeroState.State">
            <summary>
            逻辑操作状态
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.IZeroState.InteractiveSuccess">
            <summary>
            与服务器网络交互是否正常（特别注意：不是指逻辑操作是否成功,逻辑成功看InteractiveSuccess=true时的State）
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.IZeroState.ZmqError">
            <summary>
            ZMQ错误码
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.IZeroState.Exception">
            <summary>
            异常
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.IZeroState.ErrorMessage">
            <summary>
            消息
            </summary>
        </member>
        <member name="T:ZeroTeam.ZeroMQ.ZeroRPC.PublishItem">
            <summary>
                广播节点
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.PublishItem.IsBadValue">
            <summary>
            是否非正常值
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.PublishItem.ZeroEvent">
            <summary>
            带外事件
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.PublishItem.Publisher">
            <summary>
             发布者的Identity(可能已消失)
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.PublishItem.Title">
            <summary>
                主标题
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.PublishItem.SubTitle">
            <summary>
                副标题
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.PublishItem.Buffer">
            <summary>
                内容
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.PublishItem.Status">
            <summary>
                内容
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.PublishItem.Tson">
            <summary>
                内容
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZeroRPC.PublishItem.Unpack(ZeroTeam.ZeroMQ.ZMessage,ZeroTeam.ZeroMQ.ZeroRPC.PublishItem@)">
            <summary>
                广播消息解包
            </summary>
            <param name="msg"></param>
            <param name="publishItem"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZeroRPC.PublishItem.Unpack2``1(ZeroTeam.ZeroMQ.ZMessage,``0@)">
            <summary>
                广播消息解包
            </summary>
            <param name="msg"></param>
            <param name="publishItem"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZeroRPC.PublishItem.Unpack``1(ZeroTeam.ZeroMQ.ZMessage,``0@)">
            <summary>
                广播消息解包
            </summary>
            <param name="msg"></param>
            <param name="publishItem"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZeroRPC.PublishItem.Unpack``1(ZeroTeam.ZeroMQ.ZMessage,``0@,System.Func{``0,System.Byte,System.Byte[],System.Boolean})">
            <summary>
                广播消息解包
            </summary>
            <param name="msg"></param>
            <param name="publishItem"></param>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.ZeroMQ.ZeroRPC.SpeedLimitType">
            <summary>
            限速模式（0 按线程数限制 1 按等待数限制）
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.SpeedLimitType.None">
            <summary>
            未设置
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.SpeedLimitType.Single">
            <summary>
            单线程数处理
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.SpeedLimitType.ThreadCount">
            <summary>
            按线程数限制
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.SpeedLimitType.WaitCount">
            <summary>
            按等待数限制
            </summary>
        </member>
        <member name="T:ZeroTeam.ZeroMQ.ZeroRPC.StationState">
            <summary>
            站点状态
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.StationState.None">
            <summary>
            无，刚构造
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.StationState.ConfigError">
            <summary>
            配置错误
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.StationState.Failed">
            <summary>
            错误状态
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.StationState.Initialized">
            <summary>
            已初始化
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.StationState.Start">
            <summary>
            正在启动
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.StationState.BeginRun">
            <summary>
            开始运行
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.StationState.Run">
            <summary>
            正在运行
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.StationState.Pause">
            <summary>
            已暂停
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.StationState.Closing">
            <summary>
            将要关闭
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.StationState.Closed">
            <summary>
            已关闭
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.StationState.Destroy">
            <summary>
            已销毁，析构已调用
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.StationState.Disposed">
            <summary>
            已销毁，析构已调用
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.StationState.Stop">
            <summary>
            已被关停
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.StationState.Remove">
            <summary>
            已被移除
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZeroRPC.StationState.Text(System.Int32)">
            <summary>
            返回状态文本
            </summary>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.ZeroMQ.ZeroRPC.StationStateType">
            <summary>
            站点状态
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.StationStateType.None">
            <summary>
            无，刚构造
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.StationStateType.ConfigError">
            <summary>
            配置错误
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.StationStateType.Failed">
            <summary>
            错误状态
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.StationStateType.Initialized">
            <summary>
            已初始化
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.StationStateType.Run">
            <summary>
            正在运行
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.StationStateType.Closed">
            <summary>
            已关闭
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.StationStateType.Stop">
            <summary>
            已被关停
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.StationStateType.Remove">
            <summary>
            已被移除
            </summary>
        </member>
        <member name="T:ZeroTeam.ZeroMQ.ZeroRPC.UserOperatorStateType">
            <summary>
            一次路由执行状态
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.UserOperatorStateType.Success">
            <summary>
            正常
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.UserOperatorStateType.FormalError">
            <summary>
            非法格式
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.UserOperatorStateType.LogicalError">
            <summary>
            逻辑错误
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.UserOperatorStateType.LocalException">
            <summary>
            本地异常
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.UserOperatorStateType.LocalError">
            <summary>
            本地错误
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.UserOperatorStateType.RemoteError">
            <summary>
            远程错误
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.UserOperatorStateType.RemoteException">
            <summary>
            远程异常
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.UserOperatorStateType.NetWorkError">
            <summary>
            网络错误
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.UserOperatorStateType.Unavailable">
            <summary>
            拒绝服务
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.UserOperatorStateType.NotReady">
            <summary>
            未准备好
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.UserOperatorStateType.NotFind">
            <summary>
            页面不存在
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.UserOperatorStateType.DenyAccess">
            <summary>
            非法请求
            </summary>
        </member>
        <member name="T:ZeroTeam.ZeroMQ.ZeroRPC.ZeroByteCommand">
            <summary>
            Zmq帮助类
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroByteCommand.General">
            <summary>
            标准调用
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroByteCommand.Plan">
            <summary>
            计划任务
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroByteCommand.Proxy">
            <summary>
            代理执行
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroByteCommand.Restart">
            <summary>
            重启
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroByteCommand.GetGlobalId">
            <summary>
            全局标识
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroByteCommand.Waiting">
            <summary>
            等待结果
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroByteCommand.Find">
            <summary>
            查找结果
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroByteCommand.Close">
            <summary>
            关闭结果
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroByteCommand.Ping">
            <summary>
            Ping
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroByteCommand.HeartJoin">
            <summary>
            心跳加入
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroByteCommand.HeartReady">
            <summary>
            心跳加入
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroByteCommand.HeartPitpat">
            <summary>
            心跳进行
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroByteCommand.HeartLeft">
            <summary>
            心跳退出
            </summary>
        </member>
        <member name="T:ZeroTeam.ZeroMQ.ZeroRPC.ZeroCenterState">
            <summary>
              站点中心状态
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroCenterState.None">
            <summary>
             无，刚构造
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroCenterState.Initialize">
            <summary>
             初始化
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroCenterState.Start">
            <summary>
             正在启动
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroCenterState.Run">
            <summary>
             正在运行
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroCenterState.Pause">
            <summary>
             已暂停
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroCenterState.Failed">
            <summary>
             错误状态
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroCenterState.Closing">
            <summary>
             将要关闭
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroCenterState.Closed">
            <summary>
             已关闭
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroCenterState.Destroy">
            <summary>
             已销毁，析构已调用
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroCenterState.Stop">
            <summary>
             已关停
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroCenterState.Remove">
            <summary>
             删除
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroCenterState.NoFind">
            <summary>
             找不到
            </summary>
        </member>
        <member name="T:ZeroTeam.ZeroMQ.ZeroRPC.ZeroCommandExtend">
            <summary>
                Zmq帮助类
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.ZeroCommandExtend.AppNameBytes">
            <summary>
            应用名称字节内容
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZeroRPC.ZeroCommandExtend.ReceiveString(ZeroTeam.ZeroMQ.ZSocketEx,System.Boolean)">
            <summary>
                接收文本
            </summary>
            <param name="socket"></param>
            <param name="showError">是否显示错误</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZeroRPC.ZeroCommandExtend.Receive``1(ZeroTeam.ZeroMQ.ZSocketEx)">
            <summary>
                接收字节
            </summary>
            <param name="socket"></param>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.ZeroMQ.ZeroRPC.ZeroFrameType">
            <summary>
                帧定义
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroFrameType.End">
            <summary>
                终止符号
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroFrameType.ExtendEnd">
            <summary>
                终止符号
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroFrameType.ResultEnd">
            <summary>
                终止符号(一般返回值)
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroFrameType.ResultFileEnd">
            <summary>
                终止符号(文件返回值)
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroFrameType.GlobalId">
            <summary>
                全局标识
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroFrameType.Station">
            <summary>
                站点名称帧
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroFrameType.Status">
            <summary>
                状态帧
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroFrameType.InnerCommand">
            <summary>
                内部命令
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroFrameType.RequestId">
            <summary>
                请求ID
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroFrameType.Plan">
            <summary>
                执行计划
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroFrameType.PlanTime">
            <summary>
                计划时间
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroFrameType.SerivceKey">
            <summary>
                服务认证标识
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroFrameType.LocalId">
            <summary>
                服务认证标识
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroFrameType.StationType">
            <summary>
            调用方的站点类型
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroFrameType.CallId">
            <summary>
            调用方的全局标识
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroFrameType.DataDirection">
            <summary>
            数据方向
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroFrameType.Original1">
            <summary>
            原样参数
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroFrameType.Original2">
            <summary>
            原样参数
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroFrameType.Original3">
            <summary>
            原样参数
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroFrameType.Original4">
            <summary>
            原样参数
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroFrameType.Original5">
            <summary>
            原样参数
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroFrameType.Original6">
            <summary>
            原样参数
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroFrameType.Original7">
            <summary>
            原样参数
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroFrameType.Original8">
            <summary>
            原样参数
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroFrameType.BeginTime">
            <summary>
            开始时间
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroFrameType.EndTime">
            <summary>
            结束时间
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroFrameType.Argument">
            <summary>
                参数
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroFrameType.Requester">
            <summary>
                请求者
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroFrameType.Publisher">
            <summary>
                发布者/生产者
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroFrameType.Responser">
            <summary>
                回复者
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroFrameType.Subscriber">
            <summary>
                订阅者/浪费者
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroFrameType.Context">
            <summary>
                网络上下文信息
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroFrameType.Command">
            <summary>
                请求命令
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroFrameType.PubTitle">
            <summary>
                广播主题
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroFrameType.SubTitle">
            <summary>
                广播副题
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroFrameType.ResultText">
            <summary>
                返回文本内容
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroFrameType.ExtendText">
            <summary>
                返回文本内容
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroFrameType.TextContent">
            <summary>
                一般文本内容
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroFrameType.BinaryContent">
            <summary>
                二进制内容
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroFrameType.TsonContent">
            <summary>
                二进制内容
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZeroRPC.ZeroFrameType.FrameName(System.Byte)">
            <summary>
                说明帧解析
            </summary>
        </member>
        <member name="T:ZeroTeam.ZeroMQ.ZeroRPC.ZeroAddressHelper">
            <summary>
                命名辅助类
            </summary>
        </member>
        <member name="T:ZeroTeam.ZeroMQ.ZeroRPC.ZeroItem">
            <summary>
                分组节点
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.ZeroItem.Name">
            <summary>
                服务器唯一标识
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.ZeroItem.ServiceKey">
            <summary>
                服务器唯一标识
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.ZeroItem.ShortName">
            <summary>
                短名称
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.ZeroItem.Address">
            <summary>
                ZeroCenter主机IP地址
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.ZeroItem.MonitorPort">
            <summary>
                ZeroCenter监测端口号
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.ZeroItem.ManagePort">
            <summary>
                ZeroCenter管理端口号
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.ZeroItem.ManageAddress">
            <summary>
                ZeroCenter管理地址
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.ZeroItem.MonitorAddress">
            <summary>
                ZeroCenter监测地址
            </summary>
        </member>
        <member name="T:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetEventType">
            <summary>
            中心事件
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetEventType.None">
            <summary>
            没有事件
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetEventType.CenterSystemStart">
            <summary>
            
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetEventType.CenterSystemClosing">
            <summary>
            
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetEventType.CenterSystemStop">
            <summary>
            
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetEventType.CenterWorkerSoundOff">
            <summary>
            
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetEventType.CenterStationJoin">
            <summary>
            
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetEventType.CenterStationLeft">
            <summary>
            
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetEventType.CenterStationPause">
            <summary>
            
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetEventType.CenterStationResume">
            <summary>
            
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetEventType.CenterStationClosing">
            <summary>
            
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetEventType.CenterStationInstall">
            <summary>
            
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetEventType.CenterStationStop">
            <summary>
            
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetEventType.CenterStationRemove">
            <summary>
            
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetEventType.CenterStationTrends">
            <summary>
            站点动态
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetEventType.CenterStationUpdate">
            <summary>
            
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetEventType.CenterStationDocument">
            <summary>
            
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetEventType.CenterClientJoin">
            <summary>
             客户端加入
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetEventType.CenterClientLeft">
            <summary>
             客户端退出
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetEventType.PlanAdd">
            <summary>
            
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetEventType.PlanUpdate">
            <summary>
            
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetEventType.PlanQueue">
            <summary>
            
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetEventType.PlanExec">
            <summary>
            
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetEventType.PlanResult">
            <summary>
            
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetEventType.PlanPause">
            <summary>
            
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetEventType.PlanEnd">
            <summary>
            
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetEventType.PlanRemove">
            <summary>
            
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetEventType.AppRun">
            <summary>
            
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetEventType.ConfigUpdate">
            <summary>
            
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetEventType.AppStop">
            <summary>
            
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetEventType.AppEnd">
            <summary>
            
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetEventType.StationRun">
            <summary>
            
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetEventType.StationEnd">
            <summary>
            
            </summary>
        </member>
        <member name="T:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetMessage">
            <summary>
            一次传输的消息
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetMessage.ZeroState">
            <summary>
            第二帧(请求为命令类型,返回为状态)
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetMessage.Head">
            <summary>
                头帧
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetMessage.Description">
            <summary>
                帧说明
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetMessage.InnerCommand">
            <summary>
            内部简化命令
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetMessage.Tag">
            <summary>
            结束标识
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetMessage.RequestOrResult">
            <summary>
            请求还是返回
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetMessage.GlobalId">
            <summary>
            全局ID(本次)
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetMessage.CallId">
            <summary>
            全局ID(调用方)
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetMessage.RequestId">
            <summary>
            请求ID
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetMessage.Context">
            <summary>
             原始上下文的JSO内容
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetMessage.Content">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetMessage.CommandOrSubTitle">
            <summary>
             调用的命令或广播子标题
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetMessage.Requester">
            <summary>
             请求者
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetMessage.Station">
            <summary>
             站点
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetMessage.StationType">
            <summary>
            调用方的站点类型
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetMessage.Messages">
            <summary>
            帧内容
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetMessage.Values">
            <summary>
                内容
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetMessage._frames">
            <summary>
                内容
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetMessage.Frames">
            <summary>
            帧内容
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetMessage.RestoryContext(System.String)">
            <summary>
            还原调用上下文
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetMessage.ToString">
            <summary>
            显示到文本
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetMessage.Unpack``1(System.Boolean,System.Byte[][],``0@,System.Func{``0,System.Byte,System.Byte[],System.Boolean})">
            <summary>
            解包
            </summary>
            <param name="isResult"></param>
            <param name="messages"></param>
            <param name="message"></param>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetMessage.GetString(System.Byte[])">
            <summary>
            取文本
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetMessage.GetLong(System.Byte[])">
            <summary>
            取文本
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetMessage.Add(System.Byte,System.Byte[])">
            <summary>
            加入数据
            </summary>
            <param name="type"></param>
            <param name="value"></param>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetMessage.TryGetValue(System.Byte,System.Byte[]@)">
            <summary>
            取值
            </summary>
            <param name="name">名称</param>
            <param name="value">返回值</param>
            <returns>是否存在</returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetMessage.GetValue(System.Byte)">
            <summary>
            取值
            </summary>
            <param name="type">名称</param>
            <returns>存在返回值，不存在返回空对象</returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetMessage.TryGetValue``1(System.Byte,``0@,System.Func{System.Byte[],``0})">
            <summary>
            取值
            </summary>
            <param name="name">名称</param>
            <param name="value">返回值</param>
            <param name="parse"></param>
            <returns>是否存在</returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZeroRPC.ZeroNetMessage.GetValue``1(System.Byte,System.Func{System.Byte[],``0})">
            <summary>
            取值
            </summary>
            <param name="name">名称</param>
            <param name="parse"></param>
            <returns>存在返回值，不存在返回空对象</returns>
        </member>
        <member name="T:ZeroTeam.ZeroMQ.ZeroRPC.ZeroFrameItem">
            <summary>
            帧节点
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.ZeroFrameItem.Type">
            <summary>
            帧数据类型
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.ZeroFrameItem.Data">
            <summary>
            帧数据
            </summary>
        </member>
        <member name="T:ZeroTeam.ZeroMQ.ZeroRPC.ZeroOperatorStateType">
            <summary>
            标准操作状态
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroOperatorStateType.None">
            <summary>
            未知状态
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroOperatorStateType.Ok">
            <summary>
            操作成功
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroOperatorStateType.Plan">
            <summary>
            计划执行
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroOperatorStateType.Runing">
            <summary>
            执行中
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroOperatorStateType.Bye">
            <summary>
            告别
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroOperatorStateType.Wecome">
            <summary>
            投票欢迎
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroOperatorStateType.Waiting">
            <summary>
            投票欢迎
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroOperatorStateType.VoteSend">
            <summary>
            投票已发送
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroOperatorStateType.VoteBye">
            <summary>
            投票告别
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroOperatorStateType.VoteWaiting">
            <summary>
            投票等待执行
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroOperatorStateType.VoteStart">
            <summary>
            投票已开始
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroOperatorStateType.VoteEnd">
            <summary>
            投票结束
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroOperatorStateType.VoteClose">
            <summary>
            投票关闭
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroOperatorStateType.Failed">
            <summary>
            操作失败
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroOperatorStateType.Pause">
            <summary>
            站点被暂停
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroOperatorStateType.ExecTimeOut">
            <summary>
            执行超时
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroOperatorStateType.Bug">
            <summary>
            逻辑BUG
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroOperatorStateType.FrameInvalid">
            <summary>
            数据帧错误
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroOperatorStateType.ArgumentInvalid">
            <summary>
            参数错误
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroOperatorStateType.Error">
            <summary>
            发生错误
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroOperatorStateType.NotFind">
            <summary>
            找不到站点
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroOperatorStateType.NoWorker">
            <summary>
            没有工作对象
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroOperatorStateType.NotSupport">
            <summary>
            不支持的操作
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroOperatorStateType.NetTimeOut">
            <summary>
            超时失败
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroOperatorStateType.NetError">
            <summary>
            网络错误
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroOperatorStateType.PlanError">
            <summary>
            计划格式错误
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroOperatorStateType.RemoteSendError">
            <summary>
            远端发送错误
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroOperatorStateType.RemoteRecvError">
            <summary>
            远端接收错误
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroOperatorStateType.DenyAccess">
            <summary>
            拒绝访问
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroOperatorStateType.Unavailable">
            <summary>
            拒绝服务
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroOperatorStateType.LocalNoReady">
            <summary>
            未准备好
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroOperatorStateType.LocalZmqError">
            <summary>
            本地ZMQ发生错误
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroOperatorStateType.LocalSendError">
            <summary>
            本地发送错误
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroOperatorStateType.LocalRecvError">
            <summary>
            本地接收错误
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroOperatorStateType.LocalException">
            <summary>
            发生异常
            </summary>
        </member>
        <member name="T:ZeroTeam.ZeroMQ.ZeroRPC.ZeroResultData">
            <summary>
            返回值
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.ZeroResultData.State">
            <summary>
            逻辑操作状态
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.ZeroResultData.InteractiveSuccess">
            <summary>
            与服务器网络交互是否正常（特别注意：不是指逻辑操作是否成功,逻辑成功看InteractiveSuccess=true时的State）
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.ZeroResultData.ZmqError">
            <summary>
            ZMQ错误码
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.ZeroResultData.Exception">
            <summary>
            异常
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.ZeroResultData.ErrorMessage">
            <summary>
            消息
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZeroRPC.ZeroResultData.ToString">
            <summary>
            显示到文本
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZeroRPC.ZeroResultData.Unpack``1(ZeroTeam.ZeroMQ.ZMessage,System.Boolean,System.Func{``0,System.Byte,System.Byte[],System.Boolean})">
            <summary>
            命令解包
            </summary>
            <param name="showError"></param>
            <param name="frames"></param>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.ZeroMQ.ZeroRPC.ZeroResult">
            <summary>
            返回值
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZeroRPC.ZeroResult.TryGetString(System.Byte,System.String@)">
            <summary>
            取值
            </summary>
            <param name="name">名称</param>
            <param name="value">返回值</param>
            <returns>是否存在</returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZeroRPC.ZeroResult.GetString(System.Byte)">
            <summary>
            取值
            </summary>
            <param name="name">名称</param>
            <returns>存在返回值，不存在返回空对象</returns>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.ZeroResult.ResultType">
            <summary>
                返回值类型
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.ZeroResult.Result">
            <summary>
            返回值
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.ZeroResult.Binary">
            <summary>
            二进制内容
            </summary>
        </member>
        <member name="T:ZeroTeam.ZeroMQ.ZeroRPC.ZeroStationOption">
            <summary>
                本地站点配置
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.ZeroStationOption.SpeedLimitModel">
            <summary>
                ApiClient与ApiStation限速模式
            </summary>
            <remarks>
                Single：单线程无等待
                ThreadCount:按线程数限制,线程内无等待
                线程数计算公式 : 机器CPU数量 X TaskCpuMultiple 最小为1,请合理设置并测试
                WaitCount: 单线程,每个请求起一个新Task,直到最高未完成数量达MaxWait时,
                ApiClient休眠直到等待数量 低于 MaxWait
                ApiStation返回服务器忙(熔断)
            </remarks>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.ZeroStationOption.MaxWait">
            <summary>
                最大等待数(0xFF-0xFFFFF)
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.ZeroStationOption.TaskCpuMultiple">
            <summary>
                最大Task与Cpu核心数的倍数关系(0-128)
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.ZeroStationOption.ApiTimeout">
            <summary>
                API最大执行超时时间(单位秒)
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZeroRPC.ZeroStationOption.ApiTimeoutKill">
            <summary>
                检测到API执行超时是否强行清除资源
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZeroRPC.ZeroStationOption.CopyByEmpty(ZeroTeam.ZeroMQ.ZeroRPC.ZeroStationOption)">
            <summary>
            复制
            </summary>
            <param name="option"></param>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZeroRPC.ZeroStationOption.CopyByHase(ZeroTeam.ZeroMQ.ZeroRPC.ZeroStationOption)">
            <summary>
            复制
            </summary>
            <param name="option"></param>
        </member>
        <member name="T:ZeroTeam.ZeroMQ.ZeroRPC.ZeroStationType">
            <summary>
            站点类型
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroStationType.Dispatcher">
            <summary>
            调度器
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroStationType.Notify">
            <summary>
            广播
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroStationType.Api">
            <summary>
            API
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroStationType.Vote">
            <summary>
            投票器
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroStationType.RouteApi">
            <summary>
            定向路由API
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroStationType.Queue">
            <summary>
            队列任务
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroStationType.Trace">
            <summary>
            流程跟踪
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroStationType.Proxy">
            <summary>
            代理
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroStationType.Plan">
            <summary>
            计划任务
            </summary>
        </member>
        <member name="T:ZeroTeam.ZeroMQ.ZeroRPC.ZeroStatusValue">
            <summary>
            MicroZero状态值
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroStatusValue.ZeroStatusSuccess">
            <summary>
            正常状态
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroStatusValue.ZeroStatusBad">
            <summary>
            错误状态
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroStatusValue.ZeroCommandOk">
            <summary>
            成功
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroStatusValue.ZeroCommandPlan">
            <summary>
            计划执行
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroStatusValue.ZeroCommandError">
            <summary>
            错误
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroStatusValue.ZeroCommandRuning">
            <summary>
            正在执行
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroStatusValue.ZeroCommandBye">
            <summary>
            成功退出
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroStatusValue.ZeroCommandWecome">
            <summary>
            成功加入
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroStatusValue.ZeroVoteSended">
            <summary>
            投票已发出
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroStatusValue.ZeroVoteClosed">
            <summary>
            投票已关闭
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroStatusValue.ZeroVoteBye">
            <summary>
            已退出投票
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroStatusValue.ZeroVoteWaiting">
            <summary>
            投票正在进行中
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroStatusValue.ZeroVoteStart">
            <summary>
            投票已开始
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroStatusValue.ZeroVoteEnd">
            <summary>
            投票已完成
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroStatusValue.ZeroCommandNoFind">
            <summary>
            找不到主机
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroStatusValue.ZeroCommandInvalid">
            <summary>
            帧错误
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroStatusValue.ZeroCommandNoSupport">
            <summary>
            不支持的操作
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroStatusValue.ZeroCommandFailed">
            <summary>
            执行失败
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroStatusValue.ZeroCommandTimeout">
            <summary>
            执行超时
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroStatusValue.ZeroCommandNetError">
            <summary>
            发生网络异常
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroStatusValue.ZeroCommandNotWorker">
            <summary>
            找不到实际处理者
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroStatusValue.ZeroUnknowError">
            <summary>
            未知错误
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZeroRPC.ZeroStatusValue.DenyAccess">
            <summary>
            拒绝访问
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZeroRPC.ZeroStatusValue.Text(ZeroTeam.ZeroMQ.ZeroRPC.ZeroOperatorStateType)">
            <summary>
            状态原始文本
            </summary>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZeroRPC.ZeroStatusValue.ToOperatorStatus(ZeroTeam.ZeroMQ.ZeroRPC.ZeroOperatorStateType,System.Boolean)">
            <summary>
            状态转换
            </summary>
            <param name="state"></param>
            <param name="remote">是否远程状态</param>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.ZeroMQ.ZeroRPC.ZmqExtend">
            <summary>
            Zmq基本扩展
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZeroRPC.ZmqExtend.ToZeroBytes(System.String)">
            <summary>
            转为UTF8字节
            </summary>
            <param name="word">单词</param>
            <returns>字节</returns>
        </member>
        <member name="T:ZeroTeam.ZeroMQ.Monitoring.ZMonitor">
            <summary>
            Monitors state change events on another socket within the same context.
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.Monitoring.ZMonitor.PollingInterval">
            <summary>
            The polling interval in milliseconds.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.Monitoring.ZMonitor.Create(System.String,ZeroTeam.ZeroMQ.ZError@)">
            <summary>
            Create a socket with the current context and the specified socket type.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.Monitoring.ZMonitor.Create(ZeroTeam.ZeroMQ.ZContext,System.String,ZeroTeam.ZeroMQ.ZError@)">
            <summary>
            Create a socket with the current context and the specified socket type.
            </summary>
        </member>
        <member name="E:ZeroTeam.ZeroMQ.Monitoring.ZMonitor.Connected">
            <summary>
            Occurs when a new connection is established.
            </summary>
        </member>
        <member name="E:ZeroTeam.ZeroMQ.Monitoring.ZMonitor.ConnectDelayed">
            <summary>
            Occurs when a synchronous connection attempt failed, and its completion is being polled for.
            </summary>
        </member>
        <member name="E:ZeroTeam.ZeroMQ.Monitoring.ZMonitor.ConnectRetried">
            <summary>
            Occurs when an asynchronous connect / reconnection attempt is being handled by a reconnect timer.
            </summary>
        </member>
        <member name="E:ZeroTeam.ZeroMQ.Monitoring.ZMonitor.Listening">
            <summary>
            Occurs when a socket is bound to an address and is ready to accept connections.
            </summary>
        </member>
        <member name="E:ZeroTeam.ZeroMQ.Monitoring.ZMonitor.BindFailed">
            <summary>
            Occurs when a socket could not bind to an address.
            </summary>
        </member>
        <member name="E:ZeroTeam.ZeroMQ.Monitoring.ZMonitor.Accepted">
            <summary>
            Occurs when a connection from a remote peer has been established with a socket's listen address.
            </summary>
        </member>
        <member name="E:ZeroTeam.ZeroMQ.Monitoring.ZMonitor.AcceptFailed">
            <summary>
            Occurs when a connection attempt to a socket's bound address fails.
            </summary>
        </member>
        <member name="E:ZeroTeam.ZeroMQ.Monitoring.ZMonitor.Closed">
            <summary>
            Occurs when a connection was closed.
            </summary>
        </member>
        <member name="E:ZeroTeam.ZeroMQ.Monitoring.ZMonitor.CloseFailed">
            <summary>
            Occurs when a connection couldn't be closed.
            </summary>
        </member>
        <member name="E:ZeroTeam.ZeroMQ.Monitoring.ZMonitor.Disconnected">
            <summary>
            Occurs when the stream engine (tcp and ipc specific) detects a corrupted / broken session.
            </summary>
        </member>
        <member name="E:ZeroTeam.ZeroMQ.Monitoring.ZMonitor.Stopped">
            <summary>
            Monitoring on this socket ended.
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.Monitoring.ZMonitor.Endpoint">
            <summary>
            Gets the endpoint to which the monitor socket is connected.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.Monitoring.ZMonitor.Run">
            <summary>
            Begins monitoring for state changes, raising the appropriate events as they arrive.
            </summary>
            <remarks>NOTE: This is a blocking method and should be run from another thread.</remarks>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.Monitoring.ZMonitor.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:ZeroTeam.ZeroMQ.Monitoring.ZMonitor"/>, and optionally disposes of the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="T:ZeroTeam.ZeroMQ.Monitoring.ZMonitorEventArgs">
            <summary>
            A base class for the all ZmqMonitor events.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.Monitoring.ZMonitorEventArgs.#ctor(ZeroTeam.ZeroMQ.Monitoring.ZMonitor,ZeroTeam.ZeroMQ.Monitoring.ZMonitorEventData)">
            <summary>
            Initializes a new instance of the <see cref="T:ZeroTeam.ZeroMQ.Monitoring.ZMonitorEventArgs"/> class.
            </summary>
            <param name="monitor">The <see cref="T:ZeroTeam.ZeroMQ.Monitoring.ZMonitor"/> that triggered the event.</param>
            <param name="ed">The peer address.</param>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.Monitoring.ZMonitorEventArgs.Monitor">
            <summary>
            Gets the monitor that triggered the event.
            </summary>
        </member>
        <member name="T:ZeroTeam.ZeroMQ.Monitoring.ZMonitorEvents">
            <summary>
            Socket transport events (for TCP and IPC sockets) that can be monitored.
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.Monitoring.ZMonitorEvents.Connected">
            <summary>
            Triggered when a connection has been established to a remote peer.
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.Monitoring.ZMonitorEvents.ConnectDelayed">
            <summary>
            Triggered when an immediate connection attempt is delayed and it's completion is being polled for.
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.Monitoring.ZMonitorEvents.ConnectRetried">
            <summary>
            Triggered when a connection attempt is being handled by reconnect timer. The reconnect interval is recomputed for each attempt.
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.Monitoring.ZMonitorEvents.Listening">
            <summary>
            Triggered when a socket is successfully bound to a an interface.
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.Monitoring.ZMonitorEvents.BindFailed">
            <summary>
            Triggered when a socket could not bind to a given interface.
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.Monitoring.ZMonitorEvents.Accepted">
            <summary>
            Triggered when a connection from a remote peer has been established with a socket's listen address.
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.Monitoring.ZMonitorEvents.AcceptFailed">
            <summary>
            Triggered when a connection attempt to a socket's bound address fails.
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.Monitoring.ZMonitorEvents.Closed">
            <summary>
            Triggered when a connection's underlying descriptor has been closed.
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.Monitoring.ZMonitorEvents.CloseFailed">
            <summary>
            Triggered when a descriptor could not be released back to the OS.
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.Monitoring.ZMonitorEvents.Disconnected">
            <summary>
            Triggered when the stream engine (tcp and ipc specific) detects a corrupted / broken session.
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.Monitoring.ZMonitorEvents.Stopped">
            <summary>
            Monitoring on this socket ended.
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.Monitoring.ZMonitorEvents.AllEvents">
            <summary>
            Any <see cref="T:ZeroTeam.ZeroMQ.Monitoring.ZMonitorEvents"/> event, maybe readable from EventValue.
            </summary>
        </member>
        <member name="T:ZeroTeam.ZeroMQ.Monitoring.ZMonitorFileDescriptorEventArgs">
            <summary>
            Provides data for <see cref="E:ZeroTeam.ZeroMQ.Monitoring.ZMonitor.Connected"/>, <see cref="E:ZeroTeam.ZeroMQ.Monitoring.ZMonitor.Listening"/>, <see cref="E:ZeroTeam.ZeroMQ.Monitoring.ZMonitor.Accepted"/>, <see cref="E:ZeroTeam.ZeroMQ.Monitoring.ZMonitor.Closed"/> and <see cref="E:ZeroTeam.ZeroMQ.Monitoring.ZMonitor.Disconnected"/> events.
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.Monitoring.ZMonitorFileDescriptorEventArgs.FileDescriptor_Posix">
            <summary>
            Gets the monitor descriptor (Posix)
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.Monitoring.ZMonitorFileDescriptorEventArgs.FileDescriptor_Windows">
            <summary>
            Gets the monitor descriptor (Windows)
            </summary>
        </member>
        <member name="T:ZeroTeam.ZeroMQ.Monitoring.ZMonitorIntervalEventArgs">
            <summary>
            Provides data for <see cref="E:ZeroTeam.ZeroMQ.Monitoring.ZMonitor.ConnectRetried"/> event.
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.Monitoring.ZMonitorIntervalEventArgs.Interval">
            <summary>
            Gets the computed reconnect interval.
            </summary>
        </member>
        <member name="T:ZeroTeam.ZeroMQ.Monitoring.ZMonitors">
            <summary>
            Defines extension methods related to monitoring for <see cref="T:ZeroTeam.ZeroMQ.ZSocket"/> instances.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.Monitoring.ZMonitors.Monitor(ZeroTeam.ZeroMQ.ZSocket,System.String)">
            <summary>
            Spawns a <see cref="F:ZeroTeam.ZeroMQ.ZSocketType.PAIR"/> socket that publishes all events for
            the specified socket over the inproc transport at the given endpoint.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.Monitoring.ZMonitors.Monitor(ZeroTeam.ZeroMQ.ZSocket,System.String,ZeroTeam.ZeroMQ.ZError@)">
            <summary>
            Spawns a <see cref="F:ZeroTeam.ZeroMQ.ZSocketType.PAIR"/> socket that publishes all events for
            the specified socket over the inproc transport at the given endpoint.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.Monitoring.ZMonitors.Monitor(ZeroTeam.ZeroMQ.ZSocket,System.String,ZeroTeam.ZeroMQ.Monitoring.ZMonitorEvents)">
            <summary>
            Spawns a <see cref="F:ZeroTeam.ZeroMQ.ZSocketType.PAIR"/> socket that publishes all events for
            the specified socket over the inproc transport at the given endpoint.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.Monitoring.ZMonitors.Monitor(ZeroTeam.ZeroMQ.ZSocket,System.String,ZeroTeam.ZeroMQ.Monitoring.ZMonitorEvents,ZeroTeam.ZeroMQ.ZError@)">
            <summary>
            Spawns a <see cref="F:ZeroTeam.ZeroMQ.ZSocketType.PAIR"/> socket that publishes all events for
            the specified socket over the inproc transport at the given endpoint.
            </summary>
        </member>
        <member name="T:ZeroTeam.ZeroMQ.IZmqPool">
            <summary>
            原始封装的Pool对象
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.IZmqPool.Size">
            <summary>
            Sockt数量
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.IZmqPool.Sockets">
            <summary>
            Sockt数量
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.IZmqPool.TimeoutMs">
            <summary>
            超时
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.IZmqPool.ZError">
            <summary>
            错误对象
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.IZmqPool.Ptr">
            <summary>
            非托管句柄
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.IZmqPool.RePrepare(ZeroTeam.ZeroMQ.ZPollEvent)">
            <summary>
            准备
            </summary>
            <param name="events"></param>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.IZmqPool.Prepare(ZeroTeam.ZeroMQ.ZSocket[],ZeroTeam.ZeroMQ.ZPollEvent)">
            <summary>
            准备
            </summary>
            <param name="sockets"></param>
            <param name="events"></param>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.IZmqPool.Prepare(ZeroTeam.ZeroMQ.ZPollEvent,ZeroTeam.ZeroMQ.ZSocket[])">
            <summary>
            准备
            </summary>
            <param name="sockets"></param>
            <param name="events"></param>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.IZmqPool.Poll">
            <summary>
            一次Pool
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.IZmqPool.CheckIn(System.Int32,ZeroTeam.ZeroMQ.ZMessage@)">
            <summary>
            检查下标是否有数据
            </summary>
            <param name="index"></param>
            <param name="message"></param>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.IZmqPool.CheckOut(System.Int32,ZeroTeam.ZeroMQ.ZMessage@)">
            <summary>
            检查下标是否有数据
            </summary>
            <param name="index"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.ZeroMQ.ZmqPool">
            <summary>
            pool对象
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZmqPool.CreateZmqPool">
            <summary>
            生成一个Pool对象
            </summary>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.ZeroMQ.LinuxZPoll">
            <summary>
            Linux平台使用
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.LinuxZPoll.Prepare(ZeroTeam.ZeroMQ.ZSocket[],ZeroTeam.ZeroMQ.ZPollEvent)">
            <summary>
            准备
            </summary>
            <param name="sockets"></param>
            <param name="events"></param>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.LinuxZPoll.Prepare(ZeroTeam.ZeroMQ.ZPollEvent,ZeroTeam.ZeroMQ.ZSocket[])">
            <summary>
            准备
            </summary>
            <param name="sockets"></param>
            <param name="events"></param>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.LinuxZPoll.RePrepare(ZeroTeam.ZeroMQ.ZPollEvent)">
            <summary>
            准备
            </summary>
            <param name="events"></param>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.LinuxZPoll.Poll">
            <summary>
            一次Pool
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.LinuxZPoll.CheckIn(System.Int32,ZeroTeam.ZeroMQ.ZMessage@)">
            <summary>
            检查下标是否有数据
            </summary>
            <param name="index"></param>
            <param name="message"></param>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.LinuxZPoll.CheckOut(System.Int32,ZeroTeam.ZeroMQ.ZMessage@)">
            <summary>
            检查下标是否有数据
            </summary>
            <param name="index"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.ZeroMQ.WinZPoll">
            <summary>
            pool对象
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.WinZPoll.Prepare(ZeroTeam.ZeroMQ.ZSocket[],ZeroTeam.ZeroMQ.ZPollEvent)">
            <summary>
            准备
            </summary>
            <param name="sockets"></param>
            <param name="events"></param>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.WinZPoll.Prepare(ZeroTeam.ZeroMQ.ZPollEvent,ZeroTeam.ZeroMQ.ZSocket[])">
            <summary>
            准备
            </summary>
            <param name="sockets"></param>
            <param name="events"></param>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.WinZPoll.RePrepare(ZeroTeam.ZeroMQ.ZPollEvent)">
            <summary>
            准备
            </summary>
            <param name="events"></param>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.WinZPoll.Poll">
            <summary>
            一次Pool
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.WinZPoll.CheckIn(System.Int32,ZeroTeam.ZeroMQ.ZMessage@)">
            <summary>
            检查下标是否有数据
            </summary>
            <param name="index"></param>
            <param name="message"></param>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.WinZPoll.CheckOut(System.Int32,ZeroTeam.ZeroMQ.ZMessage@)">
            <summary>
            检查下标是否有数据
            </summary>
            <param name="index"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.ZeroMQ.lib.MarshalPtr">
            <summary>
            非托管内存的管理类
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.lib.MarshalPtr.#ctor(System.IntPtr)">
            <summary>
            自管理构造
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.lib.MarshalPtr.Finalize">
            <inheritdoc />
        </member>
        <member name="M:ZeroTeam.ZeroMQ.lib.MarshalPtr.DoDispose">
            <inheritdoc />
        </member>
        <member name="T:ZeroTeam.ZeroMQ.ZPollBase">
            <summary>
            Linux平台使用
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZPollBase.Sockets">
            <summary>
            对应的Socket集合
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZPollBase.Size">
            <summary>
            Sockt数量
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZPollBase.TimeoutMs">
            <summary>
            超时
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZPollBase.error">
            <summary>
            错误对象
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZPollBase.ZError">
            <summary>
            错误对象
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZPollBase.Ptr">
            <summary>
            非托管句柄
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZPollBase.DoDispose">
            <summary>
            析构
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZPollBase.Free">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:ZeroTeam.ZeroMQ.ZPollEvent">
            <summary>
            pool事件
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZPollEvent.None">
            <summary>
            无
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZPollEvent.In">
            <summary>
            数据入
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZPollEvent.Out">
            <summary>
            数据出
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZPollEvent.InOut">
            <summary>
            两者
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZPollEvent.Err">
            <summary>
            数据错误
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZPollEvent.All">
            <summary>
            全部
            </summary>
        </member>
        <member name="T:ZeroTeam.ZeroMQ.ZPollItem">
            <summary>
            pool节点
            </summary>
        </member>
        <member name="T:ZeroTeam.ZeroMQ.RouterMandatory">
            <summary>
            Specifies <see cref="F:ZeroTeam.ZeroMQ.ZSocketType.ROUTER"/> socket behavior when
            an unroutable message is encountered.
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.RouterMandatory.Discard">
            <summary>
            Silently discard messages.
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.RouterMandatory.Report">
            <summary>
            Force sending to fail with an 'EAGAIN' error code, effectively
            enabling blocking sends.
            </summary>
        </member>
        <member name="T:ZeroTeam.ZeroMQ.SocketOption">
            <summary>
            Socket默认配置
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.SocketOption.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.SocketOption.CheckOption">
            <summary>
            构造
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.SocketOption.PoolTimeOut">
            <summary>
            使用EPool的超时时间
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.SocketOption.ReconnectIvl">
            <summary>
            重新连接时间间隔(最小)
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.SocketOption.ReconnectIvlMax">
            <summary>
            重新连接时间间隔(最长)(200+400+800)
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.SocketOption.ConnectTimeout">
            <summary>
            连接失败时长
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.SocketOption.Linger">
            <summary>
            自动关闭时长
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.SocketOption.RecvTimeout">
            <summary>
            接收超时时长
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.SocketOption.SendTimeout">
            <summary>
            发送超时时长
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.SocketOption.Backlog">
            <summary>
            连接队列数量
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.SocketOption.TcpKeepalive">
            <summary>
            启用Keeplive
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.SocketOption.TcpKeepaliveIdle">
            <summary>
            TCP发送keepalive消息的频度,单位秒
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.SocketOption.TcpKeepaliveIntvl">
             <summary>
            当探测没有确认时，重新发送探测的频度,单位秒
             </summary>
        </member>
        <member name="T:ZeroTeam.ZeroMQ.SocketState">
            <summary>
            状态
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.SocketState.None">
            <summary>
            未确定
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.SocketState.Create">
            <summary>
            对象已生成
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.SocketState.Connection">
            <summary>
            连接
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.SocketState.Binding">
            <summary>
            绑定
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.SocketState.Open">
            <summary>
            连接方式开启
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.SocketState.Pause">
            <summary>
            对象正常但因暂停而不可用
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.SocketState.Close">
            <summary>
            正常关闭
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.SocketState.Free">
            <summary>
            对象已释放
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.SocketState.Failed">
            <summary>
            损坏
            </summary>
        </member>
        <member name="T:ZeroTeam.ZeroMQ.TcpKeepaliveBehaviour">
            <summary>
            Keep-alive packets behavior for a <see cref="T:ZeroTeam.ZeroMQ.ZSocket"/> connection.
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.TcpKeepaliveBehaviour.Default">
            <summary>
            Use Operating System default behavior.
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.TcpKeepaliveBehaviour.Disable">
            <summary>
            Disable keep-alive packets.
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.TcpKeepaliveBehaviour.Enable">
            <summary>
            Enable keep-alive packets.
            </summary>
        </member>
        <member name="T:ZeroTeam.ZeroMQ.ZFrame">
            <summary>
            A single part message, sent or received via a <see cref="T:ZeroTeam.ZeroMQ.ZSocket"/>.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZFrame.Duplicate">
            <summary>
            重用
            </summary>
        </member>
        <member name="T:ZeroTeam.ZeroMQ.ZMessage">
            <summary>
            A single or multi-part message, sent or received via a <see cref="T:ZeroTeam.ZeroMQ.ZSocket"/>.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ZeroTeam.ZeroMQ.ZMessage"/> class.
            Creates an empty message.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZMessage.#ctor(System.Byte[],System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:ZeroTeam.ZeroMQ.ZMessage"/> class.
            Creates an empty message.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZMessage.#ctor(System.Byte[],System.Byte[][])">
            <summary>
            Initializes a new instance of the <see cref="T:ZeroTeam.ZeroMQ.ZMessage"/> class.
            Creates an empty message.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZMessage.Create(System.Byte[][])">
            <summary>
            Initializes a new instance of the <see cref="T:ZeroTeam.ZeroMQ.ZMessage"/> class.
            Creates an empty message.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZMessage.#ctor(System.Collections.Generic.IEnumerable{System.Byte[]})">
            <summary>
            Initializes a new instance of the <see cref="T:ZeroTeam.ZeroMQ.ZMessage"/> class.
            Creates a message that contains the given <see cref="T:ZeroTeam.ZeroMQ.ZFrame"/> objects.
            </summary>
            <param name="frames">A collection of <see cref="T:ZeroTeam.ZeroMQ.ZFrame"/> objects to be stored by this <see cref="T:ZeroTeam.ZeroMQ.ZMessage"/>.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="frames"/> is null.</exception>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZMessage.#ctor(System.Collections.Generic.IEnumerable{ZeroTeam.ZeroMQ.ZFrame})">
            <summary>
            Initializes a new instance of the <see cref="T:ZeroTeam.ZeroMQ.ZMessage"/> class.
            Creates a message that contains the given <see cref="T:ZeroTeam.ZeroMQ.ZFrame"/> objects.
            </summary>
            <param name="frames">A collection of <see cref="T:ZeroTeam.ZeroMQ.ZFrame"/> objects to be stored by this <see cref="T:ZeroTeam.ZeroMQ.ZMessage"/>.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="frames"/> is null.</exception>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZMessage.DoDispose">
            <summary>
            析构
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZMessage.RemoveAt(System.Int32)">
            <summary>
            Removes ZFrames. Note: Disposes the ZFrame.
            </summary>
            <returns>The <see cref="T:ZeroTeam.ZeroMQ.ZFrame"/>.</returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZMessage.RemoveAt(System.Int32,System.Boolean)">
            <summary>
            Removes ZFrames.
            </summary>
            <returns>The <see cref="T:ZeroTeam.ZeroMQ.ZFrame"/>.</returns>
            <param name="index"></param>
            <param name="dispose">If set to <c>false</c>, do not dispose the ZFrame.</param>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZMessage.Count">
            <summary>
            总数
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZMessage.Duplicate">
            <summary>
            重用
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZMessage.Duplicate(System.Int32)">
            <summary>
            重用
            </summary>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.ZeroMQ.ZSocket">
            <summary>
                Sends and receives messages, single frames and byte frames across ZeroTeam.ZeroMQ.
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZSocket.SocketType">
            <summary>
                Gets the <see cref="T:ZeroTeam.ZeroMQ.ZSocketType" /> value for the current socket.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocket.#ctor(ZeroTeam.ZeroMQ.ZContext,ZeroTeam.ZeroMQ.ZSocketType,ZeroTeam.ZeroMQ.ZError@)">
            <summary>
                构造
            </summary>
            <returns>
                实例
            </returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocket.Create(ZeroTeam.ZeroMQ.ZContext,ZeroTeam.ZeroMQ.ZSocketType)">
            <summary>
                构造
            </summary>
            <returns>
                实例
            </returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocket.Create(ZeroTeam.ZeroMQ.ZContext,ZeroTeam.ZeroMQ.ZSocketType,ZeroTeam.ZeroMQ.ZError@)">
            <summary>
                构造
            </summary>
            <returns>
                实例
            </returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocket.Close">
            <summary>
                Close the current socket.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocket.TryClose">
            <summary>
                Close the current socket.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocket.Close(ZeroTeam.ZeroMQ.ZError@)">
            <summary>
                Close the current socket.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocket.Bind(System.String)">
            <summary>
                Bind the specified endpoint.
            </summary>
            <param name="endpoint">
                A string consisting of a transport and an address, formatted as
                <c><em>transport</em>://<em>address</em></c>.
            </param>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocket.Bind(System.String,ZeroTeam.ZeroMQ.ZError@)">
            <summary>
                Bind the specified endpoint.
            </summary>
            <param name="endpoint">
                A string consisting of a transport and an address, formatted as
                <c><em>transport</em>://<em>address</em></c>.
            </param>
            <param name="error"></param>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocket.Unbind(System.String)">
            <summary>
                Unbind the specified endpoint.
            </summary>
            <param name="endpoint">
                A string consisting of a transport and an address, formatted as
                <c><em>transport</em>://<em>address</em></c>.
            </param>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocket.Unbind(System.String,ZeroTeam.ZeroMQ.ZError@)">
            <summary>
                Unbind the specified endpoint.
            </summary>
            <param name="endpoint">
                A string consisting of a transport and an address, formatted as
                <c><em>transport</em>://<em>address</em></c>.
            </param>
            <param name="error"></param>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocket.Connect(System.String)">
            <summary>
                Connect the specified endpoint.
            </summary>
            <param name="endpoint">
                A string consisting of a transport and an address, formatted as
                <c><em>transport</em>://<em>address</em></c>.
            </param>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocket.Connect(System.String,ZeroTeam.ZeroMQ.ZError@)">
            <summary>
                Connect the specified endpoint.
            </summary>
            <param name="endpoint">
                A string consisting of a transport and an address, formatted as
                <c><em>transport</em>://<em>address</em></c>.
            </param>
            <param name="error"></param>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocket.Disconnect(System.String)">
            <summary>
                Disconnect the specified endpoint.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocket.Disconnect(System.String,ZeroTeam.ZeroMQ.ZError@)">
            <summary>
                Disconnect the specified endpoint.
            </summary>
            <param name="endpoint">
                A string consisting of a transport and an address, formatted as
                <c><em>transport</em>://<em>address</em></c>.
            </param>
            <param name="error"></param>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocket.ReceiveBytes(System.Byte[],System.Int32,System.Int32)">
            <summary>
                Receives HARD bytes into a new byte[n]. Please don't use ReceiveBytes, use instead ReceiveFrame.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocket.Send(System.Byte[],System.Int32,System.Int32)">
            <summary>
                Sends HARD bytes from a byte[n]. Please don't use SendBytes, use instead SendFrame.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocket.Send(System.Byte[],System.Int32,System.Int32,ZeroTeam.ZeroMQ.ZSocketFlags,ZeroTeam.ZeroMQ.ZError@)">
            <summary>
                Sends HARD bytes from a byte[n]. Please don't use SendBytes, use instead SendFrame.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocket.SendBytes(System.Byte[],System.Int32,System.Int32)">
            <summary>
                Sends HARD bytes from a byte[n]. Please don't use SendBytes, use instead SendFrame.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocket.SendBytes(System.Byte[],System.Int32,System.Int32,ZeroTeam.ZeroMQ.ZSocketFlags,ZeroTeam.ZeroMQ.ZError@)">
            <summary>
                Sends HARD bytes from a byte[n]. Please don't use SendBytes, use instead SendFrame.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocket.Forward(ZeroTeam.ZeroMQ.ZSocket,ZeroTeam.ZeroMQ.ZMessage@,ZeroTeam.ZeroMQ.ZError@)">
            <summary>
            转发
            </summary>
            <param name="socket"></param>
            <param name="message"></param>
            <param name="error"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocket.SendTo(ZeroTeam.ZeroMQ.ZMessage)">
            <summary>
            发送
            </summary>
            <param name="message">消息</param>
            <returns>1 发送成功 0 发送失败 -1部分发送</returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocket.SendTo(System.Byte[],System.String[])">
            <summary>
            发送
            </summary>
            <param name="des"></param>
            <param name="array">消息</param>
            <returns>是否发送成功</returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocket.SendTo(System.Byte[][])">
            <summary>
            发送
            </summary>
            <param name="array">消息</param>
            <returns>是否发送成功</returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocket.SendTo(System.Byte[][],System.Byte[][])">
            <summary>
            发送
            </summary>
            <param name="array">消息</param>
            <param name="extend"></param>
            <returns>是否发送成功</returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocket.SendTo(ZeroTeam.ZeroMQ.ZFrame[])">
            <summary>
            发送
            </summary>
            <param name="array">消息</param>
            <returns>是否发送成功</returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocket.Recv(ZeroTeam.ZeroMQ.ZMessage@,System.Int32)">
            <summary>
            接收数据
            </summary>
            <param name="message"></param>
            <param name="flags"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocket.SubscribeAll">
            <summary>
                Subscribe to all messages.
            </summary>
            <remarks>
                Only applies to <see cref="F:ZeroTeam.ZeroMQ.ZSocketType.SUB" /> and <see cref="F:ZeroTeam.ZeroMQ.ZSocketType.XSUB" /> sockets.
            </remarks>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocket.Subscribe(System.Byte[])">
            <summary>
                Subscribe to messages that begin with a specified prefix.
            </summary>
            <remarks>
                Only applies to <see cref="F:ZeroTeam.ZeroMQ.ZSocketType.SUB" /> and <see cref="F:ZeroTeam.ZeroMQ.ZSocketType.XSUB" /> sockets.
            </remarks>
            <param name="prefix">Prefix for subscribed messages.</param>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocket.Subscribe(System.String)">
            <summary>
                Subscribe to messages that begin with a specified prefix.
            </summary>
            <remarks>
                Only applies to <see cref="F:ZeroTeam.ZeroMQ.ZSocketType.SUB" /> and <see cref="F:ZeroTeam.ZeroMQ.ZSocketType.XSUB" /> sockets.
            </remarks>
            <param name="prefix">Prefix for subscribed messages.</param>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocket.UnsubscribeAll">
            <summary>
                Unsubscribe from all messages.
            </summary>
            <remarks>
                Only applies to <see cref="F:ZeroTeam.ZeroMQ.ZSocketType.SUB" /> and <see cref="F:ZeroTeam.ZeroMQ.ZSocketType.XSUB" /> sockets.
            </remarks>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocket.Unsubscribe(System.Byte[])">
            <summary>
                Unsubscribe from messages that begin with a specified prefix.
            </summary>
            <remarks>
                Only applies to <see cref="F:ZeroTeam.ZeroMQ.ZSocketType.SUB" /> and <see cref="F:ZeroTeam.ZeroMQ.ZSocketType.XSUB" /> sockets.
            </remarks>
            <param name="prefix">Prefix for subscribed messages.</param>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocket.Unsubscribe(System.String)">
            <summary>
                Unsubscribe from messages that begin with a specified prefix.
            </summary>
            <remarks>
                Only applies to <see cref="F:ZeroTeam.ZeroMQ.ZSocketType.SUB" /> and <see cref="F:ZeroTeam.ZeroMQ.ZSocketType.XSUB" /> sockets.
            </remarks>
            <param name="prefix">Prefix for subscribed messages.</param>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZSocket.ReceiveMore">
            <summary>
                Gets a value indicating whether the multi-part message currently being read has more message parts to follow.
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZSocket.Endpoint">
            <summary>
                已绑定地址
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZSocket.LastEndpoint">
            <summary>
                已绑定地址
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocket.AddTcpAcceptFilter(System.String)">
            <summary>
                Add a filter that will be applied for each new TCP transport connection on a listening socket.
                Example: "127.0.0.1", "mail.ru/24", "::1", "::1/128", "3ffe:1::", "3ffe:1::/56"
            </summary>
            <seealso cref="M:ZeroTeam.ZeroMQ.ZSocket.ClearTcpAcceptFilter" />
            <remarks>
                If no filters are applied, then TCP transport allows connections from any IP.
                If at least one filter is applied then new connection source IP should be matched.
            </remarks>
            <param name="filter">IPV6 or IPV4 CIDR filter.</param>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocket.ClearTcpAcceptFilter">
            <summary>
                Reset all TCP filters assigned by <see cref="M:ZeroTeam.ZeroMQ.ZSocket.AddTcpAcceptFilter(System.String)" />
                and allow TCP transport to accept connections from any IP.
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZSocket.Option">
            <summary>
            配置
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocket.ConfigSocket(ZeroTeam.ZeroMQ.ZSocket,System.Byte[],System.Boolean,System.Boolean)">
            <summary>
            配置套接字
            </summary>
            <param name="socket"></param>
            <param name="identity"></param>
            <param name="service"></param>
            <param name="longLink"></param>
            <returns></returns>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZSocket.Affinity">
            <summary>
                Gets or sets the I/O thread affinity for newly created connections on this socket.
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZSocket.Backlog">
            <summary>
                Gets or sets the maximum length of the queue of outstanding peer connections. (Default = 100 connections).
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZSocket.Identity">
            <summary>
                Gets or sets the Identity.
            </summary>
            <value>Identity as byte[]</value>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZSocket.IdentityString">
            <summary>
                Gets or sets the Identity.
                Note: The string contains chars like \0 (null terminator,
                which are NOT printed (in LogRecorder.Debug)!
            </summary>
            <value>Identity as string</value>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZSocket.Linger">
            <summary>
                Gets or sets the linger period for socket shutdown. (Default = <see cref="F:System.TimeSpan.MaxValue" />, infinite).
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZSocket.MaxMessageSize">
            <summary>
                Gets or sets the maximum size for inbound messages (bytes). (Default = -1, no limit).
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZSocket.MulticastHops">
            <summary>
                Gets or sets the time-to-live field in every multicast packet sent from this socket (network hops). (Default = 1
                hop).
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZSocket.MulticastRate">
            <summary>
                Gets or sets the maximum send or receive data rate for multicast transports (kbps). (Default = 100 kbps).
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZSocket.ReceiveBufferSize">
            <summary>
                Gets or sets the underlying kernel receive buffer size for the current socket (bytes). (Default = 0, OS default).
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZSocket.ReceiveHighWatermark">
            <summary>
                Gets or sets the high water mark for inbound messages (number of messages). (Default = 0, no limit).
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZSocket.ReceiveTimeout">
            <summary>
                Gets or sets the timeout for receive operations. (Default = <see cref="F:System.TimeSpan.MaxValue" />, infinite).
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZSocket.ReconnectInterval">
            <summary>
                Gets or sets the initial reconnection interval. (Default = 100 milliseconds).
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZSocket.ReconnectIntervalMax">
            <summary>
                Gets or sets the maximum reconnection interval. (Default = 0, only use <see cref="P:ZeroTeam.ZeroMQ.ZSocket.ReconnectInterval" />).
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZSocket.MulticastRecoveryInterval">
            <summary>
                Gets or sets the recovery interval for multicast transports. (Default = 10 seconds).
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZSocket.SendBufferSize">
            <summary>
                Gets or sets the underlying kernel transmit buffer size for the current socket (bytes). (Default = 0, OS default).
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZSocket.SendHighWatermark">
            <summary>
                Gets or sets the high water mark for outbound messages (number of messages). (Default = 0, no limit).
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZSocket.SendTimeout">
            <summary>
                Gets or sets the timeout for send operations. (Default = <see cref="F:System.TimeSpan.MaxValue" />, infinite).
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZSocket.TcpKeepAlive">
            <summary>
                Gets or sets the override value for the SO_KEEPALIVE TCP socket option. (where supported by OS). (Default = -1, OS
                default).
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZSocket.TcpKeepAliveCount">
            <summary>
                Gets or sets the override value for the 'TCP_KEEPCNT' socket option (where supported by OS). (Default = -1, OS
                default).
                The default value of '-1' means to skip any overrides and leave it to OS default.
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZSocket.TcpKeepAliveIdle">
            <summary>
                Gets or sets the override value for the TCP_KEEPCNT (or TCP_KEEPALIVE on some OS). (Default = -1, OS default).
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZSocket.TcpKeepAliveInterval">
            <summary>
                Gets or sets the override value for the TCP_KEEPINTVL socket option (where supported by OS). (Default = -1, OS
                default).
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZSocket.StationName">
            <summary>
            关联的站点名称（仅用于MicroZero）
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZSocket.IsUsing">
            <summary>
            是否使用中（仅用于MicroZero）
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZSocket.IsEmpty">
            <summary>
                是否为空
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZSocket.State">
            <summary>
            状态
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZSocket._error">
            <summary>
            最后错误
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZSocket.LastError">
            <summary>
            最后错误
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocket.GetLastError">
            <summary>
            最后错误
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocket.SendBytesInner(System.Byte[],System.Int32,System.Int32,ZeroTeam.ZeroMQ.ZSocketFlags,ZeroTeam.ZeroMQ.ZError@)">
            <summary>
                Sends HARD bytes from a byte[n]. Please don't use SendBytes, use instead SendFrame.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocket.RecvFrame(ZeroTeam.ZeroMQ.ZFrame@,System.Int32)">
            <summary>
            接收数据
            </summary>
            <param name="frame"></param>
            <param name="flags"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocket.ReceiveBytes(System.Byte[],System.Int32,System.Int32,ZeroTeam.ZeroMQ.ZSocketFlags,ZeroTeam.ZeroMQ.ZError@)">
            <summary>
                Receives HARD bytes into a new byte[n]. Please don't use ReceiveBytes, use instead ReceiveFrame.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocket.Initialize(ZeroTeam.ZeroMQ.ZError@)">
            <summary>
            初始化
            </summary>
            <param name="error"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocket.CloseInner(ZeroTeam.ZeroMQ.ZError@)">
            <summary>
                Close the current socket.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocket.ConnectInner(System.String,ZeroTeam.ZeroMQ.ZError@)">
            <summary>
                Connect the specified endpoint.
            </summary>
            <param name="endpoint">
                A string consisting of a transport and an address, formatted as
                <c><em>transport</em>://<em>address</em></c>.
            </param>
            <param name="error"></param>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocket.DisconnectInner(System.String,ZeroTeam.ZeroMQ.ZError@)">
            <summary>
                Disconnect the specified endpoint.
            </summary>
            <param name="endpoint">
                A string consisting of a transport and an address, formatted as
                <c><em>transport</em>://<em>address</em></c>.
            </param>
            <param name="error"></param>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocket.BindInner(System.String,ZeroTeam.ZeroMQ.ZError@)">
            <summary>
                Bind the specified endpoint.
            </summary>
            <param name="endpoint">
                A string consisting of a transport and an address, formatted as
                <c><em>transport</em>://<em>address</em></c>.
            </param>
            <param name="error"></param>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocket.UnbindInner(System.String,ZeroTeam.ZeroMQ.ZError@)">
            <summary>
                Unbind the specified endpoint.
            </summary>
            <param name="endpoint">
                A string consisting of a transport and an address, formatted as
                <c><em>transport</em>://<em>address</em></c>.
            </param>
            <param name="error"></param>
        </member>
        <member name="T:ZeroTeam.ZeroMQ.ZSocketEx">
            <summary>
                Sends and receives messages, single frames and byte frames across ZeroTeam.ZeroMQ.
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZSocketEx.ServiceKey">
            <summary>
            服务令牌字节内容
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocketEx.#ctor(ZeroTeam.ZeroMQ.ZContext,ZeroTeam.ZeroMQ.ZSocketType,ZeroTeam.ZeroMQ.ZError@)">
            <summary>
                构造
            </summary>
            <returns>
                实例
            </returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocketEx.CreateServiceSocket(System.String,System.Byte[],ZeroTeam.ZeroMQ.ZSocketType)">
            <summary>
            构建套接字
            </summary>
            <param name="address">远程地址</param>
            <param name="serviceKey">服务令牌</param>
            <param name="type">类型</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocketEx.CreateClientSocket(System.String,System.Byte[],ZeroTeam.ZeroMQ.ZSocketType,System.Byte[],System.Boolean)">
            <summary>
            构建套接字
            </summary>
            <param name="address">远程地址</param>
            <param name="serviceKey">服务令牌</param>
            <param name="type">类型</param>
            <param name="identity">身份标签</param>
            <param name="longLink">是否保持长连接</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocketEx.CreatePoolSocket(System.String,System.Byte[],ZeroTeam.ZeroMQ.ZSocketType,System.Byte[])">
            <summary>
            构建套接字
            </summary>
            <param name="address">远程地址</param>
            <param name="type">类型</param>
            <param name="serviceKey">服务令牌</param>
            <param name="identity">身份标签</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocketEx.CreateLongLink(System.String,System.Byte[],ZeroTeam.ZeroMQ.ZSocketType,System.Byte[])">
            <summary>
            构建长连接套接字
            </summary>
            <param name="address">远程地址</param>
            <param name="type">类型</param>
            <param name="serviceKey">服务令牌</param>
            <param name="identity">身份标签</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocketEx.CreateOnceSocket(System.String,System.Byte[],System.Byte[],ZeroTeam.ZeroMQ.ZSocketType)">
            <summary>
            构建一次性使用的套接字
            </summary>
            <param name="address">远程地址</param>
            <param name="identity">身份标签</param>
            <param name="serviceKey">服务令牌</param>
            <param name="type">类型</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocketEx.CreateSubSocket(System.String,System.Byte[],System.Byte[],System.String)">
            <summary>
            构建套接字
            </summary>
            <param name="address">远程地址</param>
            <param name="subscribe">订阅内容</param>
            <param name="serviceKey">服务令牌</param>
            <param name="identity">身份标签</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocketEx.CreateSubSocket(System.String,System.Byte[],System.Byte[],System.Collections.Generic.ICollection{System.String})">
            <summary>
            构建套接字
            </summary>
            <param name="address">远程地址</param>
            <param name="subscribes">订阅内容</param>
            <param name="serviceKey">服务令牌</param>
            <param name="identity">身份标签</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocketEx.CreateClientSocketInner(System.String,System.Byte[],ZeroTeam.ZeroMQ.ZSocketType,System.Byte[],System.Boolean)">
            <summary>
            构建套接字
            </summary>
            <param name="address">远程地址</param>
            <param name="type">套接字类型</param>
            <param name="serviceKey">服务令牌</param>
            <param name="identity">身份标签</param>
            <param name="longLink">是否保持长连接</param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocketEx.ConfigSocket(ZeroTeam.ZeroMQ.ZSocketEx,System.Byte[],System.Boolean,System.Boolean)">
            <summary>
            配置套接字
            </summary>
            <param name="socket"></param>
            <param name="identity"></param>
            <param name="service"></param>
            <param name="longLink"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocketEx.SendByServiceKey(ZeroTeam.ZeroMQ.ZMessage)">
            <summary>
            发送
            </summary>
            <param name="message">消息</param>
            <returns>1 发送成功 0 发送失败 -1部分发送</returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocketEx.SendByServiceKey(System.Byte[],System.String[])">
            <summary>
            发送
            </summary>
            <param name="desc"></param>
            <param name="array">消息</param>
            <returns>是否发送成功</returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocketEx.SendBy(System.Byte[],System.Byte[][])">
            <summary>
            发送
            </summary>
            <param name="desc"></param>
            <param name="array">消息</param>
            <returns>是否发送成功</returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocketEx.SendByServiceKey(System.Byte[],System.Byte[][])">
            <summary>
            发送
            </summary>
            <param name="desc"></param>
            <param name="array">消息</param>
            <returns>是否发送成功</returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocketEx.SendByServiceKey(System.String[])">
            <summary>
            发送
            </summary>
            <param name="strs">消息</param>
            <returns>是否发送成功</returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocketEx.SendByServiceKey(System.Byte[][])">
            <summary>
            发送
            </summary>
            <param name="array">消息</param>
            <returns>是否发送成功</returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocketEx.SendByServiceKey(System.Byte[][],System.Byte[][])">
            <summary>
            发送
            </summary>
            <param name="array">消息</param>
            <param name="extend"></param>
            <returns>是否发送成功</returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocketEx.Recv(System.Int32)">
            <summary>
            接收数据
            </summary>
            <param name="flags"></param>
            <returns></returns>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZSocketFlags.None">
            <summary>
            No socket flags are specified.
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZSocketFlags.DontWait">
            <summary>
            The operation should be performed in non-blocking mode.
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZSocketFlags.More">
            <summary>
            The message being sent is a multi-part message, and that further message parts are to follow.
            </summary>
        </member>
        <member name="T:ZeroTeam.ZeroMQ.ZSocketOption">
             <summary>
             连接设置
             </summary>
             <seealso ref=""/>
            <see ref="http://api.zeromq.org/4-2:zmq-setsockopt"/>
        </member>
        <member name="T:ZeroTeam.ZeroMQ.ZSocketSetup">
            <summary>
            Defines a fluent interface for configuring device sockets.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocketSetup.Bind(System.String)">
            <summary>
            Configure the socket to bind to a given endpoint. 
            </summary>
            <param name="endpoint">A string representing the endpoint to which the socket will bind.</param>
            <returns>The current <see cref="T:ZeroTeam.ZeroMQ.ZSocketSetup"/> object.</returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocketSetup.Connect(System.String)">
            <summary>
            Configure the socket to connect to a given endpoint. See for details.
            </summary>
            <param name="endpoint">A string representing the endpoint to which the socket will connect.</param>
            <returns>The current <see cref="T:ZeroTeam.ZeroMQ.ZSocketSetup"/> object.</returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocketSetup.Subscribe(System.Byte[])">
            <summary>
            Configure the socket to subscribe to a specific prefix. 
            </summary>
            <param name="prefix">A byte array containing the prefix to which the socket will subscribe.</param>
            <returns>The current <see cref="T:ZeroTeam.ZeroMQ.ZSocketSetup"/> object.</returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZSocketSetup.SubscribeAll">
            <summary>
            Configure the socket to subscribe to all incoming messages. See <see cref="M:ZeroTeam.ZeroMQ.ZSocket.SubscribeAll"/> for details.
            </summary>
            <returns>The current <see cref="T:ZeroTeam.ZeroMQ.ZSocketSetup"/> object.</returns>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZSocketType.PAIR">
            <summary>
            Exclusive Pair
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZSocketType.PUB">
            <summary>
            Publish
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZSocketType.SUB">
            <summary>
            Subscribe
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZSocketType.REQ">
            <summary>
            Request
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZSocketType.REP">
            <summary>
            Reply / Response
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZSocketType.DEALER">
            <summary>
            Dealer
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZSocketType.ROUTER">
            <summary>
            Router
            </summary>
            <remarks>
            When receiving messages a <see cref="F:ZeroTeam.ZeroMQ.ZSocketType.ROUTER"/> socket shall prepend a message
            part containing the identity of the originating peer to the message before
            passing it to the application. When sending messages a ZMQ_ROUTER socket shall remove
            the first part of the message and use it to determine the identity of the peer the message
            shall be routed to. If the peer does not exist anymore the message shall be silently discarded.
            </remarks>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZSocketType.PULL">
            <summary>
            Pull
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZSocketType.PUSH">
            <summary>
            Push
            </summary>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZSocketType.XPUB">
            <summary>
            XPublisher
            </summary>
            <remarks>
            Subscription message is a byte '1' (for subscriptions) or byte '0' (for unsubscriptions) followed by the subscription body.
            </remarks>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZSocketType.XSUB">
            <summary>
            XSubscriber
            </summary>
            <remarks>
            Subscription message is a byte '1' (for subscriptions) or byte '0' (for unsubscriptions) followed by the subscription body.
            </remarks>
        </member>
        <member name="F:ZeroTeam.ZeroMQ.ZSocketType.STREAM">
            <summary>
            Stream
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZActor.#ctor(ZeroTeam.ZeroMQ.ZAction0,System.Object[])">
            <summary>
            You are using ZContext.Current!
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZActor.#ctor(System.String,ZeroTeam.ZeroMQ.ZAction0,System.Object[])">
            <summary>
            You are using ZContext.Current!
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZThread.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ZeroTeam.ZeroMQ.ZThread"/> class.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZThread.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:ZeroTeam.ZeroMQ.ZThread"/> class.
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZThread.IsCancellationRequested">
            <summary>
            Gets a value indicating whether the device loop is running.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZThread.Start(System.Threading.CancellationTokenSource)">
            <summary>
            Start the device in the current thread.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:ZeroTeam.ZeroMQ.ZThread"/> has already been disposed.</exception>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZThread.Join">
            <summary>
            Blocks the calling thread until the device terminates.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZThread.Join(System.Int32)">
            <summary>
            Blocks the calling thread until the device terminates.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZThread.Join(System.TimeSpan)">
            <summary>
            Blocks the calling thread until the device terminates or the specified time elapses.
            </summary>
            <param name="timeout">
            A <see cref="T:System.TimeSpan"/> set to the amount of time to wait for the device to terminate.
            </param>
            <returns>
            true if the device terminated; false if the device has not terminated after
            the amount of time specified by <paramref name="timeout"/> has elapsed.
            </returns>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZThread.Stop">
            <summary>
            Stop the device in such a way that it can be restarted.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZThread.Close">
            <summary>
            Stop the device and safely terminate the underlying sockets.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZThread.Dispose">
            <summary>
            Releases all resources used by the current instance, including the frontend and backend sockets.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZThread.Dispose(System.Boolean)">
            <summary>
            Stops the device and releases the underlying sockets. Optionally disposes of managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="T:ZeroTeam.ZeroMQ.MemoryCheck">
            <summary>
            内存检查对象
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.MemoryCheck.Finalize">
            <summary>
            析构
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.MemoryCheck.IsDisposed">
            <summary>
            已析构
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.MemoryCheck.Dispose">
            <summary>
            析构
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.MemoryCheck.DoDispose">
            <summary>
            析构
            </summary>
        </member>
        <member name="T:ZeroTeam.ZeroMQ.ZError">
            <summary>
            ZMQ错误信息
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZError.GetLastErr">
            <summary>
            取最后错误
            </summary>
            <returns></returns>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZError.None">
            <summary>
            空
            </summary>
        </member>
        <member name="T:ZeroTeam.ZeroMQ.ZErrorEx">
            <summary>
            扩展方便
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZErrorEx.IsError(ZeroTeam.ZeroMQ.ZError,System.Int32)">
            <summary>
            判断是否此错误
            </summary>
            <param name="err"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.ZeroMQ.ZException">
            <summary>
            An exception thrown by the result of libzmq.
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZException.ErrNo">
            <summary>
            Gets the error code returned by libzmq.
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZException.ErrName">
            <summary>
            Gets the error code returned by libzmq.
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZException.ErrText">
            <summary>
            Gets the error text returned by libzmq.
            </summary>
        </member>
        <member name="P:ZeroTeam.ZeroMQ.ZException.Error">
            <summary>
            Error Object
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ZeroTeam.ZeroMQ.ZException"/> class.
            </summary>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZException.#ctor(ZeroTeam.ZeroMQ.ZError)">
            <summary>
            Initializes a new instance of the <see cref="T:ZeroTeam.ZeroMQ.ZException"/> class.
            </summary>
            <param name="errorSymbol">The error code returned by the ZeroTeam.ZeroMQ library call.</param>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZException.#ctor(ZeroTeam.ZeroMQ.ZError,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ZeroTeam.ZeroMQ.ZException"/> class.
            </summary>
            <param name="errorSymbol">The error code returned by the ZeroTeam.ZeroMQ library call.</param>
            <param name="message"></param>
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZException.#ctor(ZeroTeam.ZeroMQ.ZError,System.String,System.Exception)">
            <inheritdoc />
        </member>
        <member name="M:ZeroTeam.ZeroMQ.ZException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:ZeroTeam.ZeroMQ.ZException"/> class.
            </summary>
            <param name="info"><see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context"><see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:ZeroTeam.ZeroMQ.ZSymbol">
            <summary>
            ZError
            </summary>
        </member>
    </members>
</doc>
